2021/01/26 08:36:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:36:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:36:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:37:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:37:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:37:05 [I] auth.go 133: hdim.admin login success. Redirect to uri: /
2021/01/26 08:37:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:37:05 [I] home.go 65: Go to user home page: /home
2021/01/26 08:37:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:37:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:37:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:37:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:37:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:37:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:37:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:37:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:37:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:37:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:37:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:37:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:37:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:37:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:37:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:37:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:37:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:37:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:37:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:37:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:37:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:37:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:37:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:37:32 [W] query_util.go 869: can't find class for id[biz:数字国网] , search subdix of class!
2021/01/26 08:37:32 [W] cypher_util.go 762: biz:数字国网 not Exist, ignore & continue .
2021/01/26 08:37:32 [W] query_util.go 869: can't find class for id[biz:开发测试] , search subdix of class!
2021/01/26 08:37:32 [W] cypher_util.go 762: biz:开发测试 not Exist, ignore & continue .
2021/01/26 08:37:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:37:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:37:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:37:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:37:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:37:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:38:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:38:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:38:05 [I] home.go 65: Go to user home page: /home
2021/01/26 08:38:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:38:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:38:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:38:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:38:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:38:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:38:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:38:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:38:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:38:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:38:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:38:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:38:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:38:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:38:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:38:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:38:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:38:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:38:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:38:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:38:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:38:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:38:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:38:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:38:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:38:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:38:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:38:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:39:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:39:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:40:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:40:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:41:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:41:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:41:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:41:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:41:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:41:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:41:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:41:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:41:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:41:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:42:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:42:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:42:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:42:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:42:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:43:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:43:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:44:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:44:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:44:19 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 08:44:19 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';

// 人-电话
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话 - 手机号码
        var matchStr = "match ('"+pId+"') <- [*] - (:/matrix/action/calllog where starttimestr>='2020-06-01' limit 20)";
        log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        //log.error(err)
        return [];
    }
    
    return rtn;
})();

var s = getPhoneByPeople;
OUTPUT=s;
// 电话 - 电话记录
// var calllog  = function(){
//     var rtn = null;
//     try{
//         var matchStr = "match ('"+getPhoneByPeople.join("','")+"') - [*2] -> (:perbasisinfo)";
//         log.debug(matchStr)
//         rtn = odb.mql(matchStr); 
//     }catch(err){
//         rtn = [];
//     }
//     return rtn;
// };

// var sameCalllog = function(){
//     var rtn = null;
    
//     try{
//         var matchStr = "match ('"+getPhoneByPeople.join("','")+"') - [*2] -> (:perbasisinfo)";
//         log.debug(matchStr)
//         rtn = odb.mql(matchStr); 
//     } catch(err){
//         //log.error(err)
//         return [];
//     }
    
//     return rtn;
// }


// OUTPUT = sameCalllog()
2021/01/26 08:44:19 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 08:44:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:44:19 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 08:44:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:44:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:44:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:44:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:44:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:44:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:44:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:44:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:44:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:44:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:44:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:44:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:44:41 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 08:44:41 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';

// 人-电话
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话 - 手机号码
        var matchStr = "match ('"+pId+"') <- [*] - (:/matrix/action/calllog where starttimestr>='2020-06-01' limit 20)";
        log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        //log.error(err)
        return [];
    }
    
    return rtn;
})();

var s = getPhoneByPeople;
OUTPUT=s;
// 电话 - 电话记录
// var calllog  = function(){
//     var rtn = null;
//     try{
//         var matchStr = "match ('"+getPhoneByPeople.join("','")+"') - [*2] -> (:perbasisinfo)";
//         log.debug(matchStr)
//         rtn = odb.mql(matchStr); 
//     }catch(err){
//         rtn = [];
//     }
//     return rtn;
// };

// var sameCalllog = function(){
//     var rtn = null;
    
//     try{
//         var matchStr = "match ('"+getPhoneByPeople.join("','")+"') - [*2] -> (:perbasisinfo)";
//         log.debug(matchStr)
//         rtn = odb.mql(matchStr); 
//     } catch(err){
//         //log.error(err)
//         return [];
//     }
    
//     return rtn;
// }


// OUTPUT = sameCalllog()
2021/01/26 08:44:41 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 08:44:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:44:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:44:42 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 08:44:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:44:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:44:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:44:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:44:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:44:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:44:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:44:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:44:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:44:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:44:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:44:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:44:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:44:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:45:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:45:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:45:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:45:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:45:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:45:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:45:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:45:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:45:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:45:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:45:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:45:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:45:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:45:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:45:18 [E] modb.go 90: [Parser]: After '... 06-01' limit 20': expected [0-9] or '.' or Space or Comma or CypherNodeQueryConds or Rparen: {match ('perbasisinfo:320911197112273412') <- [*] - (:/matrix/action/calllog where starttimestr>='2020-06-01' limit 20}
"[Parser]" backtrace:
git.wecise.com/wecise/platform/odb.(*Gutil).Parse:query.go:205
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:240
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/web/routers/modb.Mql:modb.go:87
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375
2021/01/26 08:45:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:45:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:45:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:45:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:45:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:45:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:45:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:45:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:45:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:45:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:45:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:46:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:46:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:46:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:46:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:46:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:46:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:46:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:46:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:46:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:47:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:47:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:47:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:47:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:47:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:47:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:47:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:47:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:47:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:47:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:47:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:47:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:47:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:47:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:48:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:48:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:49:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:49:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:49:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:49:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:49:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:49:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:49:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:49:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:49:49 [E] modb.go 90: [Parser]: After '... 12273412') <- [': expected Space or CypherVar or CypherRelationTypes or CypherRange or Rbracket: {match ('perbasisinfo:320911197112273412') <- [2*] - ()}
"[Parser]" backtrace:
git.wecise.com/wecise/platform/odb.(*Gutil).Parse:query.go:205
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:240
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/web/routers/modb.Mql:modb.go:87
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375
2021/01/26 08:49:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:49:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:49:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:49:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:50:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:50:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:50:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:50:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:50:11 [I] wjs.go 145: /bizApi/hdim/getTwoRelaData.js:7:9:  ==============perbasisinfo:320911197112273412
2021/01/26 08:50:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:50:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:50:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:50:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:50:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:50:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:50:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:50:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:50:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:50:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:50:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:50:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:50:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:50:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:50:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:50:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:50:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:50:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:51:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:51:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:51:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:51:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:51:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:51:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:52:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:52:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:52:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:52:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:52:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:53:06 [E] modb.go 90: [UnKnown]: query Timed out!
"[UnKnown]" backtrace:
git.wecise.com/wecise/platform/odb.(*CTernary).RelationRangeLoop:cypher_ternary.go:541
git.wecise.com/wecise/platform/odb.(*CTernary).SubjectEvaluateAndSpread:cypher_ternary.go:368
git.wecise.com/wecise/platform/odb.(*CTernary).EvaluateAndSpread:cypher_ternary.go:223
git.wecise.com/wecise/platform/odb.(*CPhase).Evaluate:cypher_query.go:335
git.wecise.com/wecise/platform/odb.(*Gutil).CypherMatchQuery:cypher_query.go:94
git.wecise.com/wecise/platform/odb.(*MqlSemantics).Cypher:cypher.go:1318
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:275
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/web/routers/modb.Mql:modb.go:87
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375
2021/01/26 08:53:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:53:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:53:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:53:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:53:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:54:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:54:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:54:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:54:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:54:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:54:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:55:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:55:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:55:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:56:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:56:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:57:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:57:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:57:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:57:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:57:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:57:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:57:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:57:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:57:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:57:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:57:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:58:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:58:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:58:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:58:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:58:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:58:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:58:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:58:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:58:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:58:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:58:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:58:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:58:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:58:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:58:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:58:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:58:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:58:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:58:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:58:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:59:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:59:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:59:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:59:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:59:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:59:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 08:59:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:00:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:00:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:00:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:00:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:00:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:01:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:01:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:02:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:02:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:03:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:03:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:03:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:03:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:03:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:03:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:03:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:03:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:03:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:03:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:03:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:03:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:03:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:03:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:03:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:03:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:04:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:04:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:04:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:04:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:04:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:04:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:04:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:04:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:04:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:04:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:04:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:04:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:04:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:04:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:04:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:04:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:04:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:04:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:04:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:04:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:04:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:04:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:04:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:04:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:04:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:04:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:04:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:05:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:05:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:05:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:05:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:05:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:05:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:05:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:05:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:05:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:05:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:05:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:05:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:05:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:06:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:06:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:06:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:06:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:06:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:06:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:06:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:06:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:06:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:06:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:06:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:06:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:06:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:06:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:06:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:06:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:06:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:06:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:06:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:06:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:06:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:06:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:06:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:06:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:06:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:07:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:07:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:07:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:07:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:07:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:07:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:07:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:07:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:08:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:08:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:09:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:09:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:10:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:10:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:11:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:11:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:12:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:12:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:13:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:13:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:14:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:14:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:14:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:14:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:14:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:14:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:14:11 [I] auth.go 133: hdim.admin login success. Redirect to uri: /
2021/01/26 09:14:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:14:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:14:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:14:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:14:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:14:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:14:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:14:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:14:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:14:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:14:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:14:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:14:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:14:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:14:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:14:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:14:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:14:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:14:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:14:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:14:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:14:16 [W] query_util.go 869: can't find class for id[biz:数字国网] , search subdix of class!
2021/01/26 09:14:16 [W] cypher_util.go 762: biz:数字国网 not Exist, ignore & continue .
2021/01/26 09:14:16 [W] query_util.go 869: can't find class for id[biz:开发测试] , search subdix of class!
2021/01/26 09:14:16 [W] cypher_util.go 762: biz:开发测试 not Exist, ignore & continue .
2021/01/26 09:14:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:14:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:14:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:14:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:14:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:14:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:14:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:14:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:14:52 [E] modb.go 90: [UnKnown]: query Timed out!
"[UnKnown]" backtrace:
git.wecise.com/wecise/platform/odb.(*CTernary).RelationRangeLoop:cypher_ternary.go:541
git.wecise.com/wecise/platform/odb.(*CTernary).SubjectEvaluateAndSpread:cypher_ternary.go:368
git.wecise.com/wecise/platform/odb.(*CTernary).EvaluateAndSpread:cypher_ternary.go:223
git.wecise.com/wecise/platform/odb.(*CPhase).Evaluate:cypher_query.go:335
git.wecise.com/wecise/platform/odb.(*Gutil).CypherMatchQuery:cypher_query.go:94
git.wecise.com/wecise/platform/odb.(*MqlSemantics).Cypher:cypher.go:1318
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:275
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/web/routers/modb.Mql:modb.go:87
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375
2021/01/26 09:14:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:14:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:15:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:15:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:15:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:15:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:15:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:15:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:15:37 [E] modb.go 90: [Parser]:
  After '... g where  limit ': expected [ 	
  ] or Comment or Dot or BucketIndex or BucketFilters or Lbracket or MatchOP or NotMatchOP or PhraseOP or IsOP or IsNotOP or FuzzyOP or LikeOP or PrefixOP or RangeOP or InOP or Not: {match  (:phonenumber) <- [*] - (:/matrix/action/calllog where  limit 20)}
"[Parser]" backtrace:
git.wecise.com/wecise/platform/odb.(*Gutil).Parse:query.go:205
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:240
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/web/routers/modb.Mql:modb.go:87
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375
2021/01/26 09:15:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:15:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:15:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:15:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:16:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:16:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:16:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:16:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:16:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:16:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:16:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:16:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:16:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:16:50 [E] modb.go 90: [Parser]:
  After '... g where  limit ': expected [ 	
  ] or Comment or Dot or BucketIndex or BucketFilters or Lbracket or MatchOP or NotMatchOP or PhraseOP or IsOP or IsNotOP or FuzzyOP or LikeOP or PrefixOP or RangeOP or InOP or Not: {match (:perbasisinfo) <- [*2] - (:phonenumber) <- [*] - (:/matrix/action/calllog where  limit 20)}
"[Parser]" backtrace:
git.wecise.com/wecise/platform/odb.(*Gutil).Parse:query.go:205
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:240
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/web/routers/modb.Mql:modb.go:87
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375
2021/01/26 09:16:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:16:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:16:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:16:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:16:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:16:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:16:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:16:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:16:58 [W] query_util.go 869: can't find class for id[biz:数字国网] , search subdix of class!
2021/01/26 09:16:58 [W] cypher_util.go 762: biz:数字国网 not Exist, ignore & continue .
2021/01/26 09:16:58 [W] query_util.go 869: can't find class for id[biz:开发测试] , search subdix of class!
2021/01/26 09:16:58 [W] cypher_util.go 762: biz:开发测试 not Exist, ignore & continue .
2021/01/26 09:17:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:17:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:17:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:17:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:17:10 [E] modb.go 90: [Parser]:
  After '... g where  limit ': expected [ 	
  ] or Comment or Dot or BucketIndex or BucketFilters or Lbracket or MatchOP or NotMatchOP or PhraseOP or IsOP or IsNotOP or FuzzyOP or LikeOP or PrefixOP or RangeOP or InOP or Not: {match (:perbasisinfo) <- [*2] - (:phonenumber) <- [*1] - (:/matrix/action/calllog where  limit 20)}
"[Parser]" backtrace:
git.wecise.com/wecise/platform/odb.(*Gutil).Parse:query.go:205
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:240
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/web/routers/modb.Mql:modb.go:87
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375
2021/01/26 09:17:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:17:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:17:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:17:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:17:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:17:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:17:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:17:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:17:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:18:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:18:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:18:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:18:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:18:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:18:15 [E] modb.go 90: [UnKnown]: query Timed out!
"[UnKnown]" backtrace:
git.wecise.com/wecise/platform/odb.(*CTernary).RelationRangeLoop:cypher_ternary.go:541
git.wecise.com/wecise/platform/odb.(*CTernary).SubjectEvaluateAndSpread:cypher_ternary.go:368
git.wecise.com/wecise/platform/odb.(*CTernary).EvaluateAndSpread:cypher_ternary.go:223
git.wecise.com/wecise/platform/odb.(*CPhase).Evaluate:cypher_query.go:335
git.wecise.com/wecise/platform/odb.(*Gutil).CypherMatchQuery:cypher_query.go:94
git.wecise.com/wecise/platform/odb.(*MqlSemantics).Cypher:cypher.go:1318
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:275
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/web/routers/modb.Mql:modb.go:87
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375
2021/01/26 09:18:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:18:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:18:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:18:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:18:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:18:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:18:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:18:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:18:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:18:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:18:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:19:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:19:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:19:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:19:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:19:16 [I] wjs.go 145: /bizApi/hdim/getOneRelaData.js:7:9:  ==============phonenumber:15005107680
2021/01/26 09:19:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:19:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:19:26 [E] wjs.go 149: /bizApi/hdim/getOneRelaData.js:13:9:  map[message:[UnKnown]: query Timed out!
"[UnKnown]" backtrace:
git.wecise.com/wecise/platform/odb.(*CTernary).RelationRangeLoop:cypher_ternary.go:541
git.wecise.com/wecise/platform/odb.(*CTernary).SubjectEvaluateAndSpread:cypher_ternary.go:368
git.wecise.com/wecise/platform/odb.(*CTernary).EvaluateAndSpread:cypher_ternary.go:223
git.wecise.com/wecise/platform/odb.(*CPhase).Evaluate:cypher_query.go:335
git.wecise.com/wecise/platform/odb.(*Gutil).CypherMatchQuery:cypher_query.go:94
git.wecise.com/wecise/platform/odb.(*MqlSemantics).Cypher:cypher.go:1318
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:275
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/odb.(*Gutil).jsFuncMQL:js_odb.go:155
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:201
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeAssignExpression:cmpl_evaluate_expression.go:124
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:31
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement.func1:cmpl_evaluate_statement.go:344
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).tryCatchEvaluate:runtime.go:142
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement:cmpl_evaluate_statement.go:343
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:98
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeObjectLiteral:cmpl_evaluate_expression.go:321
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:83
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeObjectLiteral:cmpl_evaluate_expression.go:321
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:83
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeAssignExpression:cmpl_evaluate_expression.go:124
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:31
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeProgram:cmpl_evaluate.go:17
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_runOrEval.func1:runtime.go:767
git.wecise.com/wecise/platform/lib/robertkrimen/otto.catchPanic:error.go:252
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_runOrEval:runtime.go:766
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_run:runtime.go:779
git.wecise.com/wecise/platform/lib/robertkrimen/otto.Otto.Run:otto.go:295
git.wecise.com/wecise/platform/web/routers/script.ExecJS:script.go:132
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375 name:GoError:/bizApi/hdim/getOneRelaData.js:11:15]
2021/01/26 09:19:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:19:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:19:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:19:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:19:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:19:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:19:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:19:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:19:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:19:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:19:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:19:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:19:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:20:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:20:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:20:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:20:01 [W] query_util.go 869: can't find class for id[biz:数字国网] , search subdix of class!
2021/01/26 09:20:01 [W] cypher_util.go 762: biz:数字国网 not Exist, ignore & continue .
2021/01/26 09:20:01 [W] query_util.go 869: can't find class for id[biz:开发测试] , search subdix of class!
2021/01/26 09:20:01 [W] cypher_util.go 762: biz:开发测试 not Exist, ignore & continue .
2021/01/26 09:20:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:20:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:20:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:20:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:20:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:20:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:20:23 [E] modb.go 90: [Exec]:
  [Exec]:  cql={SELECT max(varchar_410) as "system.max(starttimestr)"  FROM object  WHERE  class = ?   LIMIT 25 }, values={[/matrix/action/calllog]}, error:{gocql: no response received from cassandra within timeout period}
  "[Exec]" backtrace:
  git.wecise.com/wecise/platform/odb.(*Gutil).RawQuery:util.go:398
  git.wecise.com/wecise/platform/odb.(*MatrixSearch).ExecSearch:core.go:1810
  git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:263
  git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
  git.wecise.com/wecise/platform/web/routers/modb.Mql:modb.go:87
  reflect.Value.call:value.go:479
  reflect.Value.Call:value.go:337
  github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
  github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
  gopkg.in/macaron%2ev1.(*Context).run:context.go:121
  git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
  git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
  reflect.Value.call:value.go:479
  reflect.Value.Call:value.go:337
  github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
  github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
  gopkg.in/macaron%2ev1.(*Context).run:context.go:121
  git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
  gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
  gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
  github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
  github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
  gopkg.in/macaron%2ev1.(*Context).run:context.go:121
  gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
  gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
  gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
  github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
  github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
  gopkg.in/macaron%2ev1.(*Context).run:context.go:121
  git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
  gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
  gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
  github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
  github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
  gopkg.in/macaron%2ev1.(*Context).run:context.go:121
  git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
  gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
  gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
  github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
  github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
  gopkg.in/macaron%2ev1.(*Context).run:context.go:121
  gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
  gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
  gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
  net/http.serverHandler.ServeHTTP:server.go:2844
  net/http.(*conn).serve:server.go:1926
  runtime.goexit:asm_amd64.s:1375, {SELECT max(varchar_410) as "system.max(starttimestr)"  FROM object  WHERE  class = ?   LIMIT 25 }, {[/matrix/action/calllog]}
"[Exec]" backtrace:
git.wecise.com/wecise/platform/odb.(*MatrixSearch).ExecSearch:core.go:1811
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:263
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/web/routers/modb.Mql:modb.go:87
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375
2021/01/26 09:20:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:20:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:20:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:20:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:20:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:20:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:20:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:20:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:21:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:21:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:21:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:21:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:21:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:21:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:21:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:21:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:21:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:21:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:21:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:21:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:21:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:21:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:21:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:21:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:21:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:21:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:21:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:22:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:22:01 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:12:9:   match("phonenumber:15005107680") <- [*1] - (:/matrix/action/calllog where  ((starttimestr >="2020-05-25 00:00:00" and starttimestr <="2020-05-25 23:59:59")    or (starttimestr >="2020-06-14 00:00:00" and starttimestr <="2020-06-14 23:59:59")) and (tophone =15005107680 or forphone =15005107680 ))
2021/01/26 09:22:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:22:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:22:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:22:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:22:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:22:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:22:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:22:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:22:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:22:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:22:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:22:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:22:52 [E] modb.go 90: [UnKnown]: query Timed out!
"[UnKnown]" backtrace:
git.wecise.com/wecise/platform/odb.(*CTernary).RelationRangeLoop:cypher_ternary.go:541
git.wecise.com/wecise/platform/odb.(*CTernary).SubjectEvaluateAndSpread:cypher_ternary.go:368
git.wecise.com/wecise/platform/odb.(*CTernary).EvaluateAndSpread:cypher_ternary.go:223
git.wecise.com/wecise/platform/odb.(*CPhase).Evaluate:cypher_query.go:335
git.wecise.com/wecise/platform/odb.(*Gutil).CypherMatchQuery:cypher_query.go:94
git.wecise.com/wecise/platform/odb.(*MqlSemantics).Cypher:cypher.go:1318
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:275
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/web/routers/modb.Mql:modb.go:87
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375
2021/01/26 09:22:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:23:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:23:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:23:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:23:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:23:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:23:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:23:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:23:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:23:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:23:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:23:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:23:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:23:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:23:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:23:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:23:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:23:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:23:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:23:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:23:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:24:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:24:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:24:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:24:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:24:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:24:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:24:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:24:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:24:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:24:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:24:11 [E] modb.go 90: [UnKnown]: query Timed out!
"[UnKnown]" backtrace:
git.wecise.com/wecise/platform/odb.(*CTernary).RelationRangeLoop:cypher_ternary.go:541
git.wecise.com/wecise/platform/odb.(*CTernary).SubjectEvaluateAndSpread:cypher_ternary.go:368
git.wecise.com/wecise/platform/odb.(*CTernary).EvaluateAndSpread:cypher_ternary.go:223
git.wecise.com/wecise/platform/odb.(*CPhase).Evaluate:cypher_query.go:335
git.wecise.com/wecise/platform/odb.(*Gutil).CypherMatchQuery:cypher_query.go:94
git.wecise.com/wecise/platform/odb.(*MqlSemantics).Cypher:cypher.go:1318
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:275
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/web/routers/modb.Mql:modb.go:87
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375
2021/01/26 09:24:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:24:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:24:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:24:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:24:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:24:30 [I] auth.go 217: hdim.admin login success for get session.
2021/01/26 09:24:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:24:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:24:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:24:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:24:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:24:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:24:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:24:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:24:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:24:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:24:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:24:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:24:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:24:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:24:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:24:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:24:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:24:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:24:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:24:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:24:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:24:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:24:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:24:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:24:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:24:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:24:38 [W] query_util.go 869: can't find class for id[biz:数字国网] , search subdix of class!
2021/01/26 09:24:38 [W] cypher_util.go 762: biz:数字国网 not Exist, ignore & continue .
2021/01/26 09:24:38 [W] query_util.go 869: can't find class for id[biz:开发测试] , search subdix of class!
2021/01/26 09:24:38 [W] cypher_util.go 762: biz:开发测试 not Exist, ignore & continue .
2021/01/26 09:24:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:24:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:24:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:24:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:24:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:24:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:24:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:25:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:25:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:25:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:25:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:25:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:25:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:25:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:25:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:25:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:25:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:25:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:25:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:25:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:25:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:25:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:25:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:25:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:25:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:25:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:25:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:25:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:25:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:25:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:25:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:25:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:26:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:26:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:26:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:26:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:26:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:26:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:26:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:26:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:26:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:26:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:26:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:26:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:26:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:26:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:26:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:26:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:26:50 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 09:26:50 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';

// 人-电话
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话 - 手机号码
        var matchStr = "match ('"+pId+"') <- [*1] - ()";//:/matrix/action/calllog where starttimestr>='2020-06-01' limit 20)";
        log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        //log.error(err)
        return [];
    }
    
    return rtn;
})();

var s = getPhoneByPeople;
OUTPUT=s;
// 电话 - 电话记录
// var calllog  = function(){
//     var rtn = null;
//     try{
//         var matchStr = "match ('"+getPhoneByPeople.join("','")+"') - [*2] -> (:perbasisinfo)";
//         log.debug(matchStr)
//         rtn = odb.mql(matchStr); 
//     }catch(err){
//         rtn = [];
//     }
//     return rtn;
// };

// var sameCalllog = function(){
//     var rtn = null;
    
//     try{
//         var matchStr = "match ('"+getPhoneByPeople.join("','")+"') - [*2] -> (:perbasisinfo)";
//         log.debug(matchStr)
//         rtn = odb.mql(matchStr); 
//     } catch(err){
//         //log.error(err)
//         return [];
//     }
    
//     return rtn;
// }


// OUTPUT = sameCalllog()
2021/01/26 09:26:50 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 09:26:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:26:50 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 09:27:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:27:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:28:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:28:08 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 09:28:08 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';

// 人-电话
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话 - 手机号码
        var matchStr = "match ('"+pId+"') <- [*1] - ()";//:/matrix/action/calllog where starttimestr>='2020-06-01' limit 20)";
        log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        //log.error(err)
        return [];
    }
    
    return rtn;
})();

var s = getPhoneByPeople;
OUTPUT=s;
// 电话 - 电话记录
// var calllog  = function(){
//     var rtn = null;
//     try{
//         var matchStr = "match ('"+getPhoneByPeople.join("','")+"') - [*2] -> (:perbasisinfo)";
//         log.debug(matchStr)
//         rtn = odb.mql(matchStr); 
//     }catch(err){
//         rtn = [];
//     }
//     return rtn;
// };

// var sameCalllog = function(){
//     var rtn = null;
    
//     try{
//         var matchStr = "match ('"+getPhoneByPeople.join("','")+"') - [*2] -> (:perbasisinfo)";
//         log.debug(matchStr)
//         rtn = odb.mql(matchStr); 
//     } catch(err){
//         //log.error(err)
//         return [];
//     }
    
//     return rtn;
// }


// OUTPUT = sameCalllog()
2021/01/26 09:28:08 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 09:28:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:28:09 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 09:28:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:28:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:28:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:28:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:28:32 [I] home.go 65: Go to user home page: /home
2021/01/26 09:28:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:28:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:28:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:28:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:28:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:28:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:28:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:28:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:28:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:28:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:28:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:28:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:28:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:28:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:28:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:28:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:28:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:28:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:28:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:28:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:28:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:28:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:28:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:28:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:28:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:28:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:29:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:29:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:29:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:29:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:29:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:29:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:29:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:29:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:29:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:30:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:30:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:30:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:30:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:30:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:30:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:31:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:31:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:32:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:32:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:33:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:33:06 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 09:33:06 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';

// 人-电话
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话 - 手机号码
        var matchStr = "match ('"+pId+"') <- [*1] - (:phonenumber)";//:/matrix/action/calllog where starttimestr>='2020-06-01' limit 20)";
        log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        //log.error(err)
        return [];
    }
    
    return rtn;
})();

var s = getPhoneByPeople;
OUTPUT=s;
// 电话 - 电话记录
// var calllog  = function(){
//     var rtn = null;
//     try{
//         var matchStr = "match ('"+getPhoneByPeople.join("','")+"') - [*2] -> (:perbasisinfo)";
//         log.debug(matchStr)
//         rtn = odb.mql(matchStr); 
//     }catch(err){
//         rtn = [];
//     }
//     return rtn;
// };

// var sameCalllog = function(){
//     var rtn = null;
    
//     try{
//         var matchStr = "match ('"+getPhoneByPeople.join("','")+"') - [*2] -> (:perbasisinfo)";
//         log.debug(matchStr)
//         rtn = odb.mql(matchStr); 
//     } catch(err){
//         //log.error(err)
//         return [];
//     }
    
//     return rtn;
// }


// OUTPUT = sameCalllog()
2021/01/26 09:33:06 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 09:33:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:33:07 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 09:33:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:33:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:33:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:33:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:33:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:33:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:33:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:34:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:34:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:34:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:34:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:35:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:35:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:35:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:35:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:35:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:35:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:35:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:35:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:36:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:36:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:36:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:36:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:36:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:36:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:36:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:36:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:36:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:36:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:36:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:36:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:36:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:36:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:36:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:36:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:36:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:36:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:36:58 [E] modb.go 90: [NotExist]: Field {edge} Not Exist
"[NotExist]" backtrace:
git.wecise.com/wecise/platform/odb.(*Gutil).ToMatrixField:util.go:778
git.wecise.com/wecise/platform/odb.(*MqlSemantics).ToDBField:mql.go:2437
git.wecise.com/wecise/platform/odb.(*MqlParser).SelectField:MqlParser.go:5170
git.wecise.com/wecise/platform/odb.(*MqlParser).Field_3:MqlParser.go:4923
git.wecise.com/wecise/platform/odb.(*MqlParser).Field:MqlParser.go:4876
git.wecise.com/wecise/platform/odb.(*MqlParser).SelectFieldList:MqlParser.go:4814
git.wecise.com/wecise/platform/odb.(*MqlParser).FieldExp:MqlParser.go:2709
git.wecise.com/wecise/platform/odb.(*MqlParser).SelectClassStatement:MqlParser.go:1684
git.wecise.com/wecise/platform/odb.(*MqlParser).SelectStatement:MqlParser.go:1588
git.wecise.com/wecise/platform/odb.(*MqlParser).Statement_0:MqlParser.go:96
git.wecise.com/wecise/platform/odb.(*MqlParser).Statement:MqlParser.go:65
git.wecise.com/wecise/platform/odb.(*MqlParser).Parse:MqlParser.go:40
git.wecise.com/wecise/platform/odb.(*Gutil).Parse:query.go:195
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:240
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/web/routers/modb.Mql:modb.go:87
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375
2021/01/26 09:36:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:37:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:37:02 [E] modb.go 90: [NotExist]: Field {edges} Not Exist
"[NotExist]" backtrace:
git.wecise.com/wecise/platform/odb.(*Gutil).ToMatrixField:util.go:778
git.wecise.com/wecise/platform/odb.(*MqlSemantics).ToDBField:mql.go:2437
git.wecise.com/wecise/platform/odb.(*MqlParser).SelectField:MqlParser.go:5170
git.wecise.com/wecise/platform/odb.(*MqlParser).Field_3:MqlParser.go:4923
git.wecise.com/wecise/platform/odb.(*MqlParser).Field:MqlParser.go:4876
git.wecise.com/wecise/platform/odb.(*MqlParser).SelectFieldList:MqlParser.go:4814
git.wecise.com/wecise/platform/odb.(*MqlParser).FieldExp:MqlParser.go:2709
git.wecise.com/wecise/platform/odb.(*MqlParser).SelectClassStatement:MqlParser.go:1684
git.wecise.com/wecise/platform/odb.(*MqlParser).SelectStatement:MqlParser.go:1588
git.wecise.com/wecise/platform/odb.(*MqlParser).Statement_0:MqlParser.go:96
git.wecise.com/wecise/platform/odb.(*MqlParser).Statement:MqlParser.go:65
git.wecise.com/wecise/platform/odb.(*MqlParser).Parse:MqlParser.go:40
git.wecise.com/wecise/platform/odb.(*Gutil).Parse:query.go:195
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:240
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/web/routers/modb.Mql:modb.go:87
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375
2021/01/26 09:37:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:37:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:37:04 [E] modb.go 90: [NotExist]: Field {edges} Not Exist
"[NotExist]" backtrace:
git.wecise.com/wecise/platform/odb.(*Gutil).ToMatrixField:util.go:778
git.wecise.com/wecise/platform/odb.(*MqlSemantics).ToDBField:mql.go:2437
git.wecise.com/wecise/platform/odb.(*MqlParser).SelectField:MqlParser.go:5170
git.wecise.com/wecise/platform/odb.(*MqlParser).Field_3:MqlParser.go:4923
git.wecise.com/wecise/platform/odb.(*MqlParser).Field:MqlParser.go:4876
git.wecise.com/wecise/platform/odb.(*MqlParser).SelectFieldList:MqlParser.go:4814
git.wecise.com/wecise/platform/odb.(*MqlParser).FieldExp:MqlParser.go:2709
git.wecise.com/wecise/platform/odb.(*MqlParser).SelectClassStatement:MqlParser.go:1684
git.wecise.com/wecise/platform/odb.(*MqlParser).SelectStatement:MqlParser.go:1588
git.wecise.com/wecise/platform/odb.(*MqlParser).Statement_0:MqlParser.go:96
git.wecise.com/wecise/platform/odb.(*MqlParser).Statement:MqlParser.go:65
git.wecise.com/wecise/platform/odb.(*MqlParser).Parse:MqlParser.go:40
git.wecise.com/wecise/platform/odb.(*Gutil).Parse:query.go:195
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:240
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/web/routers/modb.Mql:modb.go:87
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375
2021/01/26 09:37:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:37:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:37:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:37:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:37:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:37:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:37:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:37:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:37:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:37:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:37:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:37:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:38:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:38:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:38:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:38:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:38:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:38:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:38:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:38:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:39:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:39:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:39:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:39:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:39:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:39:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:39:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:39:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:39:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:40:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:40:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:40:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:40:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:40:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:40:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:40:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:40:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:40:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:40:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:40:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:40:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:40:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:40:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:40:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:40:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:41:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:41:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:42:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:42:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:42:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:43:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:43:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:43:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:43:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:43:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:43:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:43:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:44:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:44:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:45:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:45:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:45:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:45:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:45:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:46:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:46:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:47:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:47:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:48:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:48:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:49:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:49:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:49:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:49:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:49:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:50:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:50:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:50:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:50:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:50:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:50:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:50:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:50:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:50:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:50:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:50:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:50:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:50:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:50:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:51:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:51:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:51:25 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 09:51:25 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';

// 人-电话
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        var allArr = [];
        
        // 人 - 电话
        var pToMobile = "match ('"+pId+"') <- [:belong*1] - () return phonenumber";
        log.debug(pToMobile)
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
                
        // 人 - 手机号码
        var pToPhone = "match ('"+pId+"') <- [:belong*1] - (:mobile) - [:yongy*1] -> (:phonenumber)";
        log.debug(pToPhone)
        
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        
        
    } catch(err){
        //log.error(err)
        return [];
    }
    
    return rtn;
})();

var s = getPhoneByPeople;
OUTPUT=s;
// 电话 - 电话记录
// var calllog  = function(){
//     var rtn = null;
//     try{
//         var matchStr = "match ('"+getPhoneByPeople.join("','")+"') - [*2] -> (:perbasisinfo)";
//         log.debug(matchStr)
//         rtn = odb.mql(matchStr); 
//     }catch(err){
//         rtn = [];
//     }
//     return rtn;
// };

// var sameCalllog = function(){
//     var rtn = null;
    
//     try{
//         var matchStr = "match ('"+getPhoneByPeople.join("','")+"') - [*2] -> (:perbasisinfo)";
//         log.debug(matchStr)
//         rtn = odb.mql(matchStr); 
//     } catch(err){
//         //log.error(err)
//         return [];
//     }
    
//     return rtn;
// }


// OUTPUT = sameCalllog()
2021/01/26 09:51:25 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 09:51:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:51:27 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 09:51:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:51:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:51:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:51:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:51:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:51:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:51:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:51:41 [I] cache.go 349: Refresh cache {rels,bulk}...
2021/01/26 09:51:41 [I] cache.go 441: Refresh cache: relations.
2021/01/26 09:51:41 [I] cache.go 469: Refresh cache: FieldCap.
2021/01/26 09:51:41 [I] cache.go 492: ------Finish Cache------
2021/01/26 09:51:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:51:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:51:43 [I] util.go 276: Send schema change notify, cache type: rels,bulk, change value: int_80_277_902998575
2021/01/26 09:51:44 [I] util.go 209: Receive schema change notify.
2021/01/26 09:51:44 [I] util.go 209: Receive schema change notify.
2021/01/26 09:51:44 [I] util.go 209: Receive schema change notify.
2021/01/26 09:51:44 [I] util.go 219: Refresh cache type: rels,bulk
2021/01/26 09:51:44 [I] util.go 231:  is self, skip, don't refresh .
2021/01/26 09:51:44 [I] util.go 219: Refresh cache type: rels,bulk
2021/01/26 09:51:44 [I] cache.go 349: Refresh cache {rels,bulk}...
2021/01/26 09:51:44 [I] cache.go 441: Refresh cache: relations.
2021/01/26 09:51:44 [I] util.go 219: Refresh cache type: rels,bulk
2021/01/26 09:51:44 [I] cache.go 349: Refresh cache {rels,bulk}...
2021/01/26 09:51:44 [I] cache.go 441: Refresh cache: relations.
2021/01/26 09:51:44 [E] cache.go 453: not find relation_stats, create it and restart.
2021/01/26 09:51:44 [E] cache.go 453: not find relation_stats, create it and restart.
2021/01/26 09:51:44 [I] cache.go 469: Refresh cache: FieldCap.
2021/01/26 09:51:44 [I] cache.go 469: Refresh cache: FieldCap.
2021/01/26 09:51:44 [I] cache.go 492: ------Finish Cache------
2021/01/26 09:51:44 [I] cache.go 492: ------Finish Cache------
2021/01/26 09:51:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:51:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:51:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:51:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:51:49 [I] cache.go 349: Refresh cache {rels,bulk}...
2021/01/26 09:51:49 [I] cache.go 441: Refresh cache: relations.
2021/01/26 09:51:49 [I] cache.go 469: Refresh cache: FieldCap.
2021/01/26 09:51:49 [I] cache.go 492: ------Finish Cache------
2021/01/26 09:51:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:51:50 [I] util.go 276: Send schema change notify, cache type: rels,bulk, change value: int_80_278_910163004
2021/01/26 09:51:51 [I] util.go 209: Receive schema change notify.
2021/01/26 09:51:51 [I] util.go 209: Receive schema change notify.
2021/01/26 09:51:51 [I] util.go 219: Refresh cache type: rels,bulk
2021/01/26 09:51:51 [I] util.go 231:  is self, skip, don't refresh .
2021/01/26 09:51:51 [I] util.go 219: Refresh cache type: rels,bulk
2021/01/26 09:51:51 [I] cache.go 349: Refresh cache {rels,bulk}...
2021/01/26 09:51:51 [I] cache.go 441: Refresh cache: relations.
2021/01/26 09:51:51 [E] cache.go 453: not find relation_stats, create it and restart.
2021/01/26 09:51:51 [I] cache.go 469: Refresh cache: FieldCap.
2021/01/26 09:51:51 [I] cache.go 492: ------Finish Cache------
2021/01/26 09:51:51 [I] util.go 209: Receive schema change notify.
2021/01/26 09:51:51 [I] util.go 219: Refresh cache type: rels,bulk
2021/01/26 09:51:51 [I] cache.go 349: Refresh cache {rels,bulk}...
2021/01/26 09:51:51 [I] cache.go 441: Refresh cache: relations.
2021/01/26 09:51:51 [E] cache.go 453: not find relation_stats, create it and restart.
2021/01/26 09:51:51 [I] cache.go 469: Refresh cache: FieldCap.
2021/01/26 09:51:51 [I] cache.go 492: ------Finish Cache------
2021/01/26 09:51:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:51:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:51:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:51:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:52:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:52:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:53:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:53:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:53:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:53:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:53:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:53:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:53:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:53:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:53:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:53:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:54:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:54:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:54:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:54:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:54:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:54:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:54:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:54:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:54:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:54:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:55:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:55:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:56:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:56:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:56:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:56:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:56:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:56:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:57:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:57:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:58:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:58:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:58:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:58:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:58:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:58:21 [E] modb.go 90: [Parser]: After '...  <- [:belong*1]': expected Space or Dash: {match ('perbasisinfo:320911197112273412') <- [:belong*1]}
"[Parser]" backtrace:
git.wecise.com/wecise/platform/odb.(*Gutil).Parse:query.go:205
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:240
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/web/routers/modb.Mql:modb.go:87
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375
2021/01/26 09:58:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:58:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:58:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:58:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:58:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:58:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:58:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:58:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:59:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:59:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:59:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:59:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:59:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:59:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:59:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:59:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:59:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:59:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 09:59:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:00:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:00:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:00:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:00:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:00:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:00:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:00:58 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 10:00:58 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';

// 人-电话
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        var allArr = [];
        
        // 人 - 电话号码
        var pToMobile = "match ('"+pId+"') <- [:belong*1] - () return phonenumber";
        log.debug(pToMobile)
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
                
        // 人 - 手机 - 手机号码
        var pToPhone = "match ('"+pId+"') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) return phonenumber";
        log.debug(pToPhone)
        
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        
        
    } catch(err){
        //log.error(err)
        return [];
    }
    
    return rtn;
})();

var s = getPhoneByPeople;
OUTPUT=s;
// 电话 - 电话记录
// var calllog  = function(){
//     var rtn = null;
//     try{
//         var matchStr = "match ('"+getPhoneByPeople.join("','")+"') - [*2] -> (:perbasisinfo)";
//         log.debug(matchStr)
//         rtn = odb.mql(matchStr); 
//     }catch(err){
//         rtn = [];
//     }
//     return rtn;
// };

// var sameCalllog = function(){
//     var rtn = null;
    
//     try{
//         var matchStr = "match ('"+getPhoneByPeople.join("','")+"') - [*2] -> (:perbasisinfo)";
//         log.debug(matchStr)
//         rtn = odb.mql(matchStr); 
//     } catch(err){
//         //log.error(err)
//         return [];
//     }
    
//     return rtn;
// }


// OUTPUT = sameCalllog()
2021/01/26 10:00:58 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 10:01:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:01:01 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 10:01:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:01:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:02:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:02:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:02:30 [E] modb.go 90: [Parser]:
  After '... nenumber union ': expected [ 	
  ] or Comment or CypherQuery: {match ('perbasisinfo:320911197112273412') <- [:belong*1] - () return phonenumber union match ('perbasisinfo:320911197112273412') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) return phonenumber}
"[Parser]" backtrace:
git.wecise.com/wecise/platform/odb.(*Gutil).Parse:query.go:205
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:240
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/web/routers/modb.Mql:modb.go:87
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375
2021/01/26 10:02:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:02:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:02:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:02:56 [E] modb.go 90: [Parser]:
  After '... rn phonenumber
  ': expected [ 	
  ] or Comment or Dot or BucketExp or As or Comma or CypherCtrl or CypherOP or end of text: {match ('perbasisinfo:320911197112273412') <- [:belong*1] - () return phonenumber
  match ('perbasisinfo:320911197112273412') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) return phonenumber
  
  
  
  select edge type}
"[Parser]" backtrace:
git.wecise.com/wecise/platform/odb.(*Gutil).Parse:query.go:205
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:240
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/web/routers/modb.Mql:modb.go:87
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375
2021/01/26 10:02:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:03:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:03:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:03:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:03:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:03:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:03:30 [E] modb.go 90: [Parser]:
  After '... nenumber union
  ': expected [ 	
  ] or Comment or CypherQuery: {match ('perbasisinfo:320911197112273412') <- [:belong*1] - () return phonenumber union
  match ('perbasisinfo:320911197112273412') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber)}
"[Parser]" backtrace:
git.wecise.com/wecise/platform/odb.(*Gutil).Parse:query.go:205
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:240
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/web/routers/modb.Mql:modb.go:87
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375
2021/01/26 10:03:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:03:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:03:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:03:45 [E] modb.go 90: [Parser]:
  After '... 1] - ()  union
  ': expected [ 	
  ] or Comment or CypherQuery: {match ('perbasisinfo:320911197112273412') <- [:belong*1] - ()  union
  match ('perbasisinfo:320911197112273412') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber)}
"[Parser]" backtrace:
git.wecise.com/wecise/platform/odb.(*Gutil).Parse:query.go:205
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:240
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/web/routers/modb.Mql:modb.go:87
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375
2021/01/26 10:03:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:04:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:04:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:04:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:04:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:04:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:04:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:04:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:04:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:04:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:04:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:04:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:04:57 [E] modb.go 90: [Parser]:
  At start: expected Statement: {atch ('perbasisinfo:320911197112273412') <- [:belong*1] - () return phonenumber union
   ('perbasisinfo:320911197112273412') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) return phonenumber}
"[Parser]" backtrace:
git.wecise.com/wecise/platform/odb.(*Gutil).Parse:query.go:205
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:240
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/web/routers/modb.Mql:modb.go:87
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375
2021/01/26 10:04:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:05:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:05:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:05:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:05:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:05:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:06:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:06:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:07:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:07:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:07:17 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 10:07:17 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';

// 人-电话
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = `match ('"+pId+"') <- [:belong*1] - () return phonenumber 
                         union ('"+pId+"') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) return phonenumber`;
        log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        //log.error(err)
        return [];
    }
    
    return rtn;
})();

var s = getPhoneByPeople;
OUTPUT=s;
// 电话 - 电话记录
// var calllog  = function(){
//     var rtn = null;
//     try{
//         var matchStr = "match ('"+getPhoneByPeople.join("','")+"') - [*2] -> (:perbasisinfo)";
//         log.debug(matchStr)
//         rtn = odb.mql(matchStr); 
//     }catch(err){
//         rtn = [];
//     }
//     return rtn;
// };

// var sameCalllog = function(){
//     var rtn = null;
    
//     try{
//         var matchStr = "match ('"+getPhoneByPeople.join("','")+"') - [*2] -> (:perbasisinfo)";
//         log.debug(matchStr)
//         rtn = odb.mql(matchStr); 
//     } catch(err){
//         //log.error(err)
//         return [];
//     }
    
//     return rtn;
// }


// OUTPUT = sameCalllog()
2021/01/26 10:07:17 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 10:07:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:07:18 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 10:07:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:07:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:07:40 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 10:07:40 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';

// 人-电话
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = `match ('"+pId+"') <- [:belong*1] - () return phonenumber 
                         union ('"+pId+"') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) return phonenumber`;
        log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        //log.error(err)
        return [];
    }
    
    return rtn;
})();

var s = getPhoneByPeople;
OUTPUT=s;
// 电话 - 电话记录
// var calllog  = function(){
//     var rtn = null;
//     try{
//         var matchStr = "match ('"+getPhoneByPeople.join("','")+"') - [*2] -> (:perbasisinfo)";
//         log.debug(matchStr)
//         rtn = odb.mql(matchStr); 
//     }catch(err){
//         rtn = [];
//     }
//     return rtn;
// };

// var sameCalllog = function(){
//     var rtn = null;
    
//     try{
//         var matchStr = "match ('"+getPhoneByPeople.join("','")+"') - [*2] -> (:perbasisinfo)";
//         log.debug(matchStr)
//         rtn = odb.mql(matchStr); 
//     } catch(err){
//         //log.error(err)
//         return [];
//     }
    
//     return rtn;
// }


// OUTPUT = sameCalllog()
2021/01/26 10:07:40 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 10:07:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:07:41 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 10:07:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:07:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:07:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:07:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:08:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:08:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:08:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:08:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:08:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:08:19 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 10:08:19 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';

// 人-电话
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = `match ('"+pId+"') <- [:belong*1] - () return phonenumber union ('"+pId+"') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) return phonenumber`;
        log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        //log.error(err)
        return [];
    }
    
    return rtn;
})();

var s = getPhoneByPeople;
OUTPUT=s;
// 电话 - 电话记录
// var calllog  = function(){
//     var rtn = null;
//     try{
//         var matchStr = "match ('"+getPhoneByPeople.join("','")+"') - [*2] -> (:perbasisinfo)";
//         log.debug(matchStr)
//         rtn = odb.mql(matchStr); 
//     }catch(err){
//         rtn = [];
//     }
//     return rtn;
// };

// var sameCalllog = function(){
//     var rtn = null;
    
//     try{
//         var matchStr = "match ('"+getPhoneByPeople.join("','")+"') - [*2] -> (:perbasisinfo)";
//         log.debug(matchStr)
//         rtn = odb.mql(matchStr); 
//     } catch(err){
//         //log.error(err)
//         return [];
//     }
    
//     return rtn;
// }


// OUTPUT = sameCalllog()
2021/01/26 10:08:19 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 10:08:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:08:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:08:22 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 10:08:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:08:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:08:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:08:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:08:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:08:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:08:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:08:44 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 10:08:44 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';

// 人-电话
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('"+pId+"') <- [:belong*1] - () return phonenumber union ('"+pId+"') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) return phonenumber";
        log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        //log.error(err)
        return [];
    }
    
    return rtn;
})();

var s = getPhoneByPeople;
OUTPUT=s;
// 电话 - 电话记录
// var calllog  = function(){
//     var rtn = null;
//     try{
//         var matchStr = "match ('"+getPhoneByPeople.join("','")+"') - [*2] -> (:perbasisinfo)";
//         log.debug(matchStr)
//         rtn = odb.mql(matchStr); 
//     }catch(err){
//         rtn = [];
//     }
//     return rtn;
// };

// var sameCalllog = function(){
//     var rtn = null;
    
//     try{
//         var matchStr = "match ('"+getPhoneByPeople.join("','")+"') - [*2] -> (:perbasisinfo)";
//         log.debug(matchStr)
//         rtn = odb.mql(matchStr); 
//     } catch(err){
//         //log.error(err)
//         return [];
//     }
    
//     return rtn;
// }


// OUTPUT = sameCalllog()
2021/01/26 10:08:44 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 10:08:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:08:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:08:46 [W] cypher_util.go 762: "+pId+" not Exist, ignore & continue .
2021/01/26 10:08:46 [W] cypher_util.go 762: "+pId+" not Exist, ignore & continue .
2021/01/26 10:08:46 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 10:08:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:08:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:09:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:09:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:09:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:09:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:09:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:10:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:10:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:10:24 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 10:10:24 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';

// 人-电话
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () return phonenumber union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) return phonenumber";
        log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        //log.error(err)
        return [];
    }
    
    return rtn;
})();

var s = getPhoneByPeople;
OUTPUT=s;
// 电话 - 电话记录
// var calllog  = function(){
//     var rtn = null;
//     try{
//         var matchStr = "match ('"+getPhoneByPeople.join("','")+"') - [*2] -> (:perbasisinfo)";
//         log.debug(matchStr)
//         rtn = odb.mql(matchStr); 
//     }catch(err){
//         rtn = [];
//     }
//     return rtn;
// };

// var sameCalllog = function(){
//     var rtn = null;
    
//     try{
//         var matchStr = "match ('"+getPhoneByPeople.join("','")+"') - [*2] -> (:perbasisinfo)";
//         log.debug(matchStr)
//         rtn = odb.mql(matchStr); 
//     } catch(err){
//         //log.error(err)
//         return [];
//     }
    
//     return rtn;
// }


// OUTPUT = sameCalllog()
2021/01/26 10:10:25 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 10:10:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:10:27 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 10:10:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:10:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:10:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:10:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:10:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:10:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:11:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:11:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:11:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:11:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:11:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:11:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:11:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:11:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:11:44 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 10:11:44 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';

// 人-电话
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () return phonenumber union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) return phonenumber";
        
        log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

var s = getPhoneByPeople;
OUTPUT=s;
// 电话 - 电话记录
// var calllog  = function(){
//     var rtn = null;
//     try{
//         var matchStr = "match ('"+getPhoneByPeople.join("','")+"') - [*2] -> (:perbasisinfo)";
//         log.debug(matchStr)
//         rtn = odb.mql(matchStr); 
//     }catch(err){
//         rtn = [];
//     }
//     return rtn;
// };

// var sameCalllog = function(){
//     var rtn = null;
    
//     try{
//         var matchStr = "match ('"+getPhoneByPeople.join("','")+"') - [*2] -> (:perbasisinfo)";
//         log.debug(matchStr)
//         rtn = odb.mql(matchStr); 
//     } catch(err){
//         //log.error(err)
//         return [];
//     }
    
//     return rtn;
// }


// OUTPUT = sameCalllog()
2021/01/26 10:11:45 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 10:11:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:11:47 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 10:11:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:11:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:12:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:12:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:13:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:13:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:14:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:14:11 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 10:14:11 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () return phonenumber union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) return phonenumber";
        
        log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var calllog  = function(){
    var rtn = null;
    try{
        var matchStr = "match ('"+getPhoneByPeople.join("','")+"') - [*2] -> (:perbasisinfo)";
        log.debug(matchStr)
        rtn = odb.mql(matchStr); 
    }catch(err){
        rtn = [];
    }
    return rtn;
};

// var sameCalllog = function(){
//     var rtn = null;
    
//     try{
//         var matchStr = "match ('"+getPhoneByPeople.join("','")+"') - [*2] -> (:perbasisinfo)";
//         log.debug(matchStr)
//         rtn = odb.mql(matchStr); 
//     } catch(err){
//         //log.error(err)
//         return [];
//     }
    
//     return rtn;
// }


// OUTPUT = sameCalllog()
2021/01/26 10:14:12 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 10:14:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:14:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:14:13 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 10:14:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:15:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:15:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:15:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:15:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:15:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:15:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:16:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:16:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:17:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:17:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:17:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:17:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:17:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:17:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:17:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:17:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:17:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:17:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:17:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:17:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:17:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:17:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:18:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:18:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:18:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:18:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:18:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:18:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:18:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:18:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:18:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:18:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:18:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:18:43 [E] modb.go 90: [Format]: class {system} not find !
"[Format]" backtrace:
git.wecise.com/wecise/platform/odb.(*MqlSemantics).NickClass:mql.go:1082
git.wecise.com/wecise/platform/odb.(*MqlParser).CypherClass:MqlParser.go:918
git.wecise.com/wecise/platform/odb.(*MqlParser).SelectClass:MqlParser.go:930
git.wecise.com/wecise/platform/odb.(*MqlParser).SelectClassStatement:MqlParser.go:1686
git.wecise.com/wecise/platform/odb.(*MqlParser).SelectStatement:MqlParser.go:1588
git.wecise.com/wecise/platform/odb.(*MqlParser).Statement_0:MqlParser.go:96
git.wecise.com/wecise/platform/odb.(*MqlParser).Statement:MqlParser.go:65
git.wecise.com/wecise/platform/odb.(*MqlParser).Parse:MqlParser.go:40
git.wecise.com/wecise/platform/odb.(*Gutil).Parse:query.go:195
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:240
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/web/routers/modb.Mql:modb.go:87
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375
2021/01/26 10:18:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:19:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:19:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:19:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:20:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:20:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:20:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:20:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:20:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:20:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:20:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:20:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:20:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:20:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:21:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:21:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:21:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:21:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:22:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:22:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:22:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:22:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:23:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:23:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:23:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:23:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:24:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:24:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:25:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:25:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:25:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:25:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:25:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:25:59 [E] modb.go 90: [Format]: class {system} not find !
"[Format]" backtrace:
git.wecise.com/wecise/platform/odb.(*MqlSemantics).NickClass:mql.go:1082
git.wecise.com/wecise/platform/odb.(*MqlParser).CypherClass:MqlParser.go:918
git.wecise.com/wecise/platform/odb.(*MqlParser).SelectClass:MqlParser.go:930
git.wecise.com/wecise/platform/odb.(*MqlParser).SelectClassStatement:MqlParser.go:1686
git.wecise.com/wecise/platform/odb.(*MqlParser).SelectStatement:MqlParser.go:1588
git.wecise.com/wecise/platform/odb.(*MqlParser).Statement_0:MqlParser.go:96
git.wecise.com/wecise/platform/odb.(*MqlParser).Statement:MqlParser.go:65
git.wecise.com/wecise/platform/odb.(*MqlParser).Parse:MqlParser.go:40
git.wecise.com/wecise/platform/odb.(*Gutil).Parse:query.go:195
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:240
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/web/routers/modb.Mql:modb.go:87
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375
2021/01/26 10:25:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:26:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:26:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:26:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:26:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:26:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:26:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:27:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:27:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:27:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:27:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:27:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:27:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:27:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:28:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:28:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:28:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:28:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:28:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:29:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:29:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:29:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:29:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:29:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:29:42 [W] auth.go 103: Company name not found. Request /
2021/01/26 10:30:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:30:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:30:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:30:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:30:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:30:09 [I] auth.go 133: hdim.admin login success. Redirect to uri: /
2021/01/26 10:30:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:30:09 [I] home.go 65: Go to user home page: /home
2021/01/26 10:30:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:30:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:30:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:30:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:30:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:30:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:30:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:30:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:30:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:30:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:30:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:30:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:30:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:30:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:30:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:30:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:30:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:30:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:30:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:30:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:30:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:30:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:30:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:30:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:30:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:30:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:30:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:30:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:30:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:30:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:30:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:30:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:30:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:30:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:30:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:30:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:30:23 [W] query_util.go 869: can't find class for id[biz:数字国网] , search subdix of class!
2021/01/26 10:30:23 [W] cypher_util.go 762: biz:数字国网 not Exist, ignore & continue .
2021/01/26 10:30:23 [W] query_util.go 869: can't find class for id[biz:开发测试] , search subdix of class!
2021/01/26 10:30:23 [W] cypher_util.go 762: biz:开发测试 not Exist, ignore & continue .
2021/01/26 10:30:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:30:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:30:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:30:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:30:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:30:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:30:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:30:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:30:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:30:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:31:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:31:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:31:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:31:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:31:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:31:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:31:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:31:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:31:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:32:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:32:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:33:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:33:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:33:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:33:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:33:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:33:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:33:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:33:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:33:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:33:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:33:39 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 10:33:39 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () return phonenumber union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) return phonenumber";
        
        log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var calllog  = function(){
    var rtn = null;
    try{
        var matchStr = "match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/acton/calllog limit 20) - [:callto*1] -> (:phonenumber)";
        log.debug(matchStr)
        rtn = odb.mql(matchStr); 
    }catch(err){
        rtn = [];
    }
    return rtn;
};

// var sameCalllog = function(){
//     var rtn = null;
    
//     try{
//         var matchStr = "match ('"+getPhoneByPeople.join("','")+"') - [*2] -> (:perbasisinfo)";
//         log.debug(matchStr)
//         rtn = odb.mql(matchStr); 
//     } catch(err){
//         //log.error(err)
//         return [];
//     }
    
//     return rtn;
// }


// OUTPUT = sameCalllog()
2021/01/26 10:33:39 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 10:33:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:33:40 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 10:33:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:33:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:33:59 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 10:33:59 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () return phonenumber union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) return phonenumber";
        
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var calllog  = function(){
    var rtn = null;
    try{
        var matchStr = "match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/acton/calllog limit 20) - [:callto*1] -> (:phonenumber)";
        log.debug(matchStr)
        rtn = odb.mql(matchStr); 
    }catch(err){
        rtn = [];
    }
    return rtn;
};

// var sameCalllog = function(){
//     var rtn = null;
    
//     try{
//         var matchStr = "match ('"+getPhoneByPeople.join("','")+"') - [*2] -> (:perbasisinfo)";
//         log.debug(matchStr)
//         rtn = odb.mql(matchStr); 
//     } catch(err){
//         //log.error(err)
//         return [];
//     }
    
//     return rtn;
// }


// OUTPUT = sameCalllog()
2021/01/26 10:33:59 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 10:33:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:33:59 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 10:34:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:34:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:34:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:34:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:34:19 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 10:34:19 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () return phonenumber union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) return phonenumber";
        
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var calllog  = function(){
    var rtn = null;
    try{
        var matchStr = "match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/acton/calllog limit 20) - [:callto*1] -> (:phonenumber)";
        log.debug(matchStr)
        rtn = odb.mql(matchStr); 
    }catch(err){
        rtn = [];
    }
    return rtn;
};

// var sameCalllog = function(){
//     var rtn = null;
    
//     try{
//         var matchStr = "match ('"+getPhoneByPeople.join("','")+"') - [*2] -> (:perbasisinfo)";
//         log.debug(matchStr)
//         rtn = odb.mql(matchStr); 
//     } catch(err){
//         //log.error(err)
//         return [];
//     }
    
//     return rtn;
// }


 OUTPUT = calllog()
2021/01/26 10:34:19 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 10:34:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:34:20 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 10:34:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:34:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:34:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:34:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:34:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:34:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:34:53 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 10:34:53 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () return phonenumber union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) return phonenumber";
        
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var calllog  = function(){
    var rtn = null;
    try{
        var matchStr = "match ('phonenumber:15806219393','"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/acton/calllog limit 20) - [:callto*1] -> (:phonenumber)";
        log.debug(matchStr)
        rtn = odb.mql(matchStr); 
    }catch(err){
        rtn = [];
    }
    return rtn;
};

// var sameCalllog = function(){
//     var rtn = null;
    
//     try{
//         var matchStr = "match ('"+getPhoneByPeople.join("','")+"') - [*2] -> (:perbasisinfo)";
//         log.debug(matchStr)
//         rtn = odb.mql(matchStr); 
//     } catch(err){
//         //log.error(err)
//         return [];
//     }
    
//     return rtn;
// }


 OUTPUT = calllog()
2021/01/26 10:34:53 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 10:34:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:34:53 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 10:34:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:34:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:34:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:34:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:35:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:35:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:35:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:35:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:35:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:35:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:35:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:35:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:35:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:35:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:35:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:35:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:35:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:35:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:35:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:35:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:35:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:35:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:35:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:35:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:35:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:35:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:35:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:35:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:35:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:35:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:35:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:35:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:35:55 [E] modb.go 90: [NotExist]: class : /matrix/acton/calllog not find !
"[NotExist]" backtrace:
git.wecise.com/wecise/platform/odb.(*MqlSemantics).FullClass:mql.go:1060
git.wecise.com/wecise/platform/odb.(*MqlParser).CypherClass:MqlParser.go:916
git.wecise.com/wecise/platform/odb.(*MqlParser).CypherNodeQuery:MqlParser.go:558
git.wecise.com/wecise/platform/odb.(*MqlParser).CypherValueNodePattern_1:MqlParser.go:515
git.wecise.com/wecise/platform/odb.(*MqlParser).CypherValueNodePattern:MqlParser.go:493
git.wecise.com/wecise/platform/odb.(*MqlParser).CypherVarNodePattern:MqlParser.go:535
git.wecise.com/wecise/platform/odb.(*MqlParser).CypherNodePattern:MqlParser.go:466
git.wecise.com/wecise/platform/odb.(*MqlParser).CypherMatch:MqlParser.go:442
git.wecise.com/wecise/platform/odb.(*MqlParser).CypherMultiMatch:MqlParser.go:257
git.wecise.com/wecise/platform/odb.(*MqlParser).CypherQuery:MqlParser.go:244
git.wecise.com/wecise/platform/odb.(*MqlParser).CypherStatement:MqlParser.go:222
git.wecise.com/wecise/platform/odb.(*MqlParser).Statement_2:MqlParser.go:116
git.wecise.com/wecise/platform/odb.(*MqlParser).Statement:MqlParser.go:69
git.wecise.com/wecise/platform/odb.(*MqlParser).Parse:MqlParser.go:40
git.wecise.com/wecise/platform/odb.(*Gutil).Parse:query.go:195
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:240
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/web/routers/modb.Mql:modb.go:87
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375
2021/01/26 10:35:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:35:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:36:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:36:10 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 10:36:10 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () return phonenumber union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) return phonenumber";
        
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var calllog  = function(){
    var rtn = null;
    try{
        var matchStr = "match ('phonenumber:15806219393','"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog limit 20) - [:callto*1] -> (:phonenumber)";
        log.debug(matchStr)
        rtn = odb.mql(matchStr); 
    }catch(err){
        rtn = [];
    }
    return rtn;
};

// var sameCalllog = function(){
//     var rtn = null;
    
//     try{
//         var matchStr = "match ('"+getPhoneByPeople.join("','")+"') - [*2] -> (:perbasisinfo)";
//         log.debug(matchStr)
//         rtn = odb.mql(matchStr); 
//     } catch(err){
//         //log.error(err)
//         return [];
//     }
    
//     return rtn;
// }


 OUTPUT = calllog()
2021/01/26 10:36:10 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 10:36:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:36:11 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 10:36:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:36:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:36:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:37:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:37:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:37:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:37:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:37:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:37:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:37:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:37:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:37:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:38:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:38:09 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 10:38:09 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var calllog  = function(){
    var rtn = null;
    try{
        var matchStr = "match ('phonenumber:15806219393','"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog limit 20) - [:callto*1] -> (:phonenumber)";
        log.debug(matchStr)
        var tmp = odb.mql(matchStr); 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
        
    }catch(err){
        rtn = [];
    }
    return rtn;
};

// var sameCalllog = function(){
//     var rtn = null;
    
//     try{
//         var matchStr = "match ('"+getPhoneByPeople.join("','")+"') - [*2] -> (:perbasisinfo)";
//         log.debug(matchStr)
//         rtn = odb.mql(matchStr); 
//     } catch(err){
//         //log.error(err)
//         return [];
//     }
    
//     return rtn;
// }


 OUTPUT = calllog()
2021/01/26 10:38:09 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 10:38:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:38:10 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 10:38:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:38:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:38:15 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 10:38:15 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var calllog  = function(){
    var rtn = null;
    try{
        var matchStr = "match ('phonenumber:15806219393','"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog limit 20) - [:callto*1] -> (:phonenumber)";
        log.debug(matchStr)
        var tmp = odb.mql(matchStr); 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
        
    }catch(err){
        rtn = [];
    }
    return rtn;
};

// var sameCalllog = function(){
//     var rtn = null;
    
//     try{
//         var matchStr = "match ('"+getPhoneByPeople.join("','")+"') - [*2] -> (:perbasisinfo)";
//         log.debug(matchStr)
//         rtn = odb.mql(matchStr); 
//     } catch(err){
//         //log.error(err)
//         return [];
//     }
    
//     return rtn;
// }


 OUTPUT = calllog()
2021/01/26 10:38:15 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 10:38:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:38:16 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 10:38:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:38:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:38:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:38:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:38:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:38:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:38:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:38:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:38:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:39:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:39:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:39:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:39:10 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 10:39:10 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var calllog  = function(){
    var rtn = null;
    try{
        var matchStr = "match ('phonenumber:15806219393','"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog limit 20) - [:callto*1] -> (:phonenumber)";
        log.debug(matchStr)
        var tmp = odb.mql(matchStr); 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
        
    }catch(err){
        rtn = [];
    }
    return rtn;
};

// var sameCalllog = function(){
//     var rtn = null;
    
//     try{
//         var matchStr = "match ('"+getPhoneByPeople.join("','")+"') - [*2] -> (:perbasisinfo)";
//         log.debug(matchStr)
//         rtn = odb.mql(matchStr); 
//     } catch(err){
//         //log.error(err)
//         return [];
//     }
    
//     return rtn;
// }


 OUTPUT = calllog()
2021/01/26 10:39:10 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 10:39:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:39:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:39:11 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 10:39:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:39:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:39:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:39:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:39:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:39:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:39:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:39:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:39:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:40:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:40:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:40:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:40:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:40:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:41:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:41:06 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 10:41:06 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var calllog  = function(){
    var rtn = null;
    try{
        var matchStr = "match ('phonenumber:15806219393','"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog limit 20) - [:callto*1] -> (:phonenumber)";
        log.debug(matchStr)
        var tmp = odb.mql(matchStr); 
        log.warning(JSON.stringify(tmp))
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
        
    }catch(err){
        rtn = [];
    }
    return rtn;
};

// var sameCalllog = function(){
//     var rtn = null;
    
//     try{
//         var matchStr = "match ('"+getPhoneByPeople.join("','")+"') - [*2] -> (:perbasisinfo)";
//         log.debug(matchStr)
//         rtn = odb.mql(matchStr); 
//     } catch(err){
//         //log.error(err)
//         return [];
//     }
    
//     return rtn;
// }


 OUTPUT = calllog()
2021/01/26 10:41:06 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 10:41:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:41:06 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 10:41:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:41:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:41:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:41:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:41:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:41:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:41:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:41:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:41:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:41:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:41:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:41:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:41:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:42:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:42:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:42:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:42:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:42:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:42:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:42:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:42:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:42:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:42:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:42:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:42:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:42:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:42:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:42:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:42:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:42:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:42:42 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 10:42:42 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var calllog  = function(){
    var rtn = null;
    try{
        var matchStr = "match ('phonenumber:15806219393','"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog limit 20) - [:callto*1] -> (:phonenumber)";
        log.debug(matchStr)
        var tmp = odb.mql(matchStr); 
        log.warning(JSON.stringify(tmp))
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
        
    }catch(err){
        rtn = [];
    }
    return rtn;
};

// var sameCalllog = function(){
//     var rtn = null;
    
//     try{
//         var matchStr = "match ('"+getPhoneByPeople.join("','")+"') - [*2] -> (:perbasisinfo)";
//         log.debug(matchStr)
//         rtn = odb.mql(matchStr); 
//     } catch(err){
//         //log.error(err)
//         return [];
//     }
    
//     return rtn;
// }


 OUTPUT = calllog()
2021/01/26 10:42:42 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 10:42:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:42:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:42:43 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 10:42:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:42:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:42:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:42:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:42:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:42:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:42:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:42:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:43:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:43:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:43:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:43:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:43:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:43:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:43:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:43:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:43:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:43:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:43:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:43:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:43:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:43:21 [W] query_util.go 869: can't find class for id[biz:数字国网] , search subdix of class!
2021/01/26 10:43:21 [W] cypher_util.go 762: biz:数字国网 not Exist, ignore & continue .
2021/01/26 10:43:21 [W] query_util.go 869: can't find class for id[biz:开发测试] , search subdix of class!
2021/01/26 10:43:21 [W] cypher_util.go 762: biz:开发测试 not Exist, ignore & continue .
2021/01/26 10:43:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:43:27 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 10:43:27 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var calllog  = function(){
    var rtn = null;
    try{
        var matchStr = "match ('phonenumber:15806219393','"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog limit 20) - [:callto*1] -> (:phonenumber)";
        log.debug(matchStr)
        var tmp = odb.mql(matchStr); 
        log.warning(JSON.stringify(tmp))
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
        
    }catch(err){
        rtn = [];
    }
    return rtn;
};

// var sameCalllog = function(){
//     var rtn = null;
    
//     try{
//         var matchStr = "match ('"+getPhoneByPeople.join("','")+"') - [*2] -> (:perbasisinfo)";
//         log.debug(matchStr)
//         rtn = odb.mql(matchStr); 
//     } catch(err){
//         //log.error(err)
//         return [];
//     }
    
//     return rtn;
// }


 OUTPUT = calllog()
2021/01/26 10:43:27 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 10:43:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:43:28 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 10:43:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:43:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:43:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:43:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:43:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:43:36 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 10:43:36 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var calllog  = function(){
    var rtn = null;
    try{
        var matchStr = "match ('phonenumber:15806219393','"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog limit 20) - [:callto*1] -> (:phonenumber)";
        log.debug(matchStr)
        var tmp = odb.mql(matchStr); 
        log.info(JSON.stringify(tmp))
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
        
    }catch(err){
        rtn = [];
    }
    return rtn;
};

// var sameCalllog = function(){
//     var rtn = null;
    
//     try{
//         var matchStr = "match ('"+getPhoneByPeople.join("','")+"') - [*2] -> (:perbasisinfo)";
//         log.debug(matchStr)
//         rtn = odb.mql(matchStr); 
//     } catch(err){
//         //log.error(err)
//         return [];
//     }
    
//     return rtn;
// }


 OUTPUT = calllog()
2021/01/26 10:43:36 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 10:43:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:43:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:43:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:43:37 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 10:43:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:43:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:43:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:43:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:43:41 [I] wjs.go 145: /bizApi/hdim/test/test_sameMobileRecord.js:41:9:  {"data":[{"graph":{"Diff":{},"Edges":[{"attrs":{},"class":"callto","id":"calllog:955992020-08-22 09:43:32-phonenumber:95599-callto","source":"calllog:955992020-08-22 09:43:32","target":"phonenumber:95599"},{"attrs":{},"class":"callto","id":"calllog:955992020-07-21 10:15:27-phonenumber:95599-callto","source":"calllog:955992020-07-21 10:15:27","target":"phonenumber:95599"},{"attrs":{},"class":"callto","id":"calllog:955992020-08-01 20:07:30-phonenumber:95599-callto","source":"calllog:955992020-08-01 20:07:30","target":"phonenumber:95599"},{"attrs":{},"class":"bycall","id":"calllog:955992020-07-17 14:14:10-phonenumber:15806219393-bycall","source":"calllog:955992020-07-17 14:14:10","target":"phonenumber:15806219393"},{"attrs":{},"class":"bycall","id":"calllog:955992020-07-31 11:43:44-phonenumber:15806219393-bycall","source":"calllog:955992020-07-31 11:43:44","target":"phonenumber:15806219393"},{"attrs":{},"class":"callto","id":"calllog:955992020-08-02 09:59:45-phonenumber:95599-callto","source":"calllog:955992020-08-02 09:59:45","target":"phonenumber:95599"},{"attrs":{},"class":"bycall","id":"calllog:955992020-07-15 16:05:45-phonenumber:15806219393-bycall","source":"calllog:955992020-07-15 16:05:45","target":"phonenumber:15806219393"},{"attrs":{},"class":"callto","id":"calllog:955992020-07-15 16:05:45-phonenumber:95599-callto","source":"calllog:955992020-07-15 16:05:45","target":"phonenumber:95599"},{"attrs":{},"class":"callto","id":"calllog:955992020-07-31 11:43:44-phonenumber:95599-callto","source":"calllog:955992020-07-31 11:43:44","target":"phonenumber:95599"},{"attrs":{},"class":"callto","id":"calllog:955992020-07-22 09:43:35-phonenumber:95599-callto","source":"calllog:955992020-07-22 09:43:35","target":"phonenumber:95599"},{"attrs":{},"class":"bycall","id":"calllog:955992020-08-02 08:21:32-phonenumber:15806219393-bycall","source":"calllog:955992020-08-02 08:21:32","target":"phonenumber:15806219393"},{"attrs":{},"class":"bycall","id":"calllog:955992020-08-01 20:07:30-phonenumber:15806219393-bycall","source":"calllog:955992020-08-01 20:07:30","target":"phonenumber:15806219393"},{"attrs":{},"class":"bycall","id":"calllog:955992020-08-02 11:07:28-phonenumber:15806219393-bycall","source":"calllog:955992020-08-02 11:07:28","target":"phonenumber:15806219393"},{"attrs":{},"class":"bycall","id":"calllog:955992020-08-02 09:59:45-phonenumber:15806219393-bycall","source":"calllog:955992020-08-02 09:59:45","target":"phonenumber:15806219393"},{"attrs":{},"class":"bycall","id":"calllog:955992020-07-21 10:15:27-phonenumber:15806219393-bycall","source":"calllog:955992020-07-21 10:15:27","target":"phonenumber:15806219393"},{"attrs":{},"class":"callto","id":"calllog:955992020-08-02 08:21:32-phonenumber:95599-callto","source":"calllog:955992020-08-02 08:21:32","target":"phonenumber:95599"},{"attrs":{},"class":"callto","id":"calllog:955992020-07-17 14:14:10-phonenumber:95599-callto","source":"calllog:955992020-07-17 14:14:10","target":"phonenumber:95599"},{"attrs":{},"class":"bycall","id":"calllog:955992020-07-22 09:43:35-phonenumber:15806219393-bycall","source":"calllog:955992020-07-22 09:43:35","target":"phonenumber:15806219393"},{"attrs":{},"class":"bycall","id":"calllog:955992020-08-02 08:13:38-phonenumber:15806219393-bycall","source":"calllog:955992020-08-02 08:13:38","target":"phonenumber:15806219393"},{"attrs":{},"class":"bycall","id":"calllog:955992020-08-22 09:43:32-phonenumber:15806219393-bycall","source":"calllog:955992020-08-22 09:43:32","target":"phonenumber:15806219393"},{"attrs":{},"class":"callto","id":"calllog:955992020-08-02 11:07:28-phonenumber:95599-callto","source":"calllog:955992020-08-02 11:07:28","target":"phonenumber:95599"},{"attrs":{},"class":"callto","id":"calllog:955992020-08-02 08:13:38-phonenumber:95599-callto","source":"calllog:955992020-08-02 08:13:38","target":"phonenumber:95599"}],"Nodes":[{"_icon":"calllog","class":"/matrix/action/calllog","id":"calllog:955992020-07-22 09:43:35","name":"15806219393","tags":[]},{"_icon":"calllog","class":"/matrix/action/calllog","id":"calllog:955992020-07-17 14:14:10","name":"15806219393","tags":[]},{"_icon":"calllog","class":"/matrix/action/calllog","id":"calllog:955992020-08-22 09:43:32","name":"15806219393","tags":[]},{"_icon":"calllog","class":"/matrix/action/calllog","id":"calllog:955992020-08-02 11:07:28","name":"15806219393","tags":[]},{"_icon":"calllog","class":"/matrix/action/calllog","id":"calllog:955992020-08-02 09:59:45","name":"15806219393","tags":[]},{"_icon":"calllog","class":"/matrix/action/calllog","id":"calllog:955992020-08-02 08:13:38","name":"15806219393","tags":[]},{"_icon":"calllog","class":"/matrix/action/calllog","id":"calllog:955992020-08-01 20:07:30","name":"15806219393","tags":[]},{"_icon":"calllog","class":"/matrix/action/calllog","id":"calllog:955992020-07-31 11:43:44","name":"15806219393","tags":[]},{"_icon":"calllog","class":"/matrix/action/calllog","id":"calllog:955992020-07-15 16:05:45","name":"15806219393","tags":[]},{"_icon":"phonenumber","class":"/matrix/entity/phonenumber","id":"phonenumber:15806219393","name":"电话号码:15806219393","tags":[]},{"_icon":"calllog","class":"/matrix/action/calllog","id":"calllog:955992020-08-02 08:21:32","name":"15806219393","tags":[]},{"_icon":"calllog","class":"/matrix/action/calllog","id":"calllog:955992020-07-21 10:15:27","name":"15806219393","tags":[]},{"_icon":"phonenumber","class":"/matrix/entity/phonenumber","id":"phonenumber:95599","name":"电话号码:95599","tags":[]}],"PathTags":[],"Paths":[]},"group":{"edges":{},"nodes":{}}}],"meta":{"classes":{"/_graph":1},"columns":{"/_graph":[{"label":"graph","name":"graph","title":"graph","type":"map","varname":""},{"label":"group","name":"group","title":"group","type":"map","varname":""}]},"type":"graph"}}
2021/01/26 10:43:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:43:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:43:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:44:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:44:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:44:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:44:01 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 10:44:01 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var calllog  = function(){
    var rtn = null;
    try{
        var matchStr = "match ('phonenumber:15806219393','"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog limit 20) - [:callto*1] -> (:phonenumber)";
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr); 
        log.info(1111,JSON.stringify(tmp))
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
        
    }catch(err){
        rtn = [];
    }
    return rtn;
};

// var sameCalllog = function(){
//     var rtn = null;
    
//     try{
//         var matchStr = "match ('"+getPhoneByPeople.join("','")+"') - [*2] -> (:perbasisinfo)";
//         log.debug(matchStr)
//         rtn = odb.mql(matchStr); 
//     } catch(err){
//         //log.error(err)
//         return [];
//     }
    
//     return rtn;
// }


 OUTPUT = calllog()
2021/01/26 10:44:01 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 10:44:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:44:02 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 10:44:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:44:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:44:07 [I] wjs.go 145: /bizApi/hdim/test/test_sameMobileRecord.js:41:9:  1111 {"data":[{"graph":{"Diff":{},"Edges":[{"attrs":{},"class":"callto","id":"calllog:955992020-08-02 11:07:28-phonenumber:95599-callto","source":"calllog:955992020-08-02 11:07:28","target":"phonenumber:95599"},{"attrs":{},"class":"bycall","id":"calllog:955992020-08-22 09:43:32-phonenumber:15806219393-bycall","source":"calllog:955992020-08-22 09:43:32","target":"phonenumber:15806219393"},{"attrs":{},"class":"bycall","id":"calllog:955992020-08-02 09:59:45-phonenumber:15806219393-bycall","source":"calllog:955992020-08-02 09:59:45","target":"phonenumber:15806219393"},{"attrs":{},"class":"bycall","id":"calllog:955992020-07-21 10:15:27-phonenumber:15806219393-bycall","source":"calllog:955992020-07-21 10:15:27","target":"phonenumber:15806219393"},{"attrs":{},"class":"callto","id":"calllog:955992020-07-15 16:05:45-phonenumber:95599-callto","source":"calllog:955992020-07-15 16:05:45","target":"phonenumber:95599"},{"attrs":{},"class":"callto","id":"calllog:955992020-07-17 14:14:10-phonenumber:95599-callto","source":"calllog:955992020-07-17 14:14:10","target":"phonenumber:95599"},{"attrs":{},"class":"bycall","id":"calllog:955992020-08-02 08:21:32-phonenumber:15806219393-bycall","source":"calllog:955992020-08-02 08:21:32","target":"phonenumber:15806219393"},{"attrs":{},"class":"bycall","id":"calllog:955992020-07-17 14:14:10-phonenumber:15806219393-bycall","source":"calllog:955992020-07-17 14:14:10","target":"phonenumber:15806219393"},{"attrs":{},"class":"callto","id":"calllog:955992020-08-02 09:59:45-phonenumber:95599-callto","source":"calllog:955992020-08-02 09:59:45","target":"phonenumber:95599"},{"attrs":{},"class":"callto","id":"calllog:955992020-08-01 20:07:30-phonenumber:95599-callto","source":"calllog:955992020-08-01 20:07:30","target":"phonenumber:95599"},{"attrs":{},"class":"callto","id":"calllog:955992020-07-22 09:43:35-phonenumber:95599-callto","source":"calllog:955992020-07-22 09:43:35","target":"phonenumber:95599"},{"attrs":{},"class":"callto","id":"calllog:955992020-08-02 08:13:38-phonenumber:95599-callto","source":"calllog:955992020-08-02 08:13:38","target":"phonenumber:95599"},{"attrs":{},"class":"bycall","id":"calllog:955992020-08-01 20:07:30-phonenumber:15806219393-bycall","source":"calllog:955992020-08-01 20:07:30","target":"phonenumber:15806219393"},{"attrs":{},"class":"bycall","id":"calllog:955992020-07-31 11:43:44-phonenumber:15806219393-bycall","source":"calllog:955992020-07-31 11:43:44","target":"phonenumber:15806219393"},{"attrs":{},"class":"bycall","id":"calllog:955992020-08-02 11:07:28-phonenumber:15806219393-bycall","source":"calllog:955992020-08-02 11:07:28","target":"phonenumber:15806219393"},{"attrs":{},"class":"callto","id":"calllog:955992020-07-31 11:43:44-phonenumber:95599-callto","source":"calllog:955992020-07-31 11:43:44","target":"phonenumber:95599"},{"attrs":{},"class":"callto","id":"calllog:955992020-08-02 08:21:32-phonenumber:95599-callto","source":"calllog:955992020-08-02 08:21:32","target":"phonenumber:95599"},{"attrs":{},"class":"callto","id":"calllog:955992020-07-21 10:15:27-phonenumber:95599-callto","source":"calllog:955992020-07-21 10:15:27","target":"phonenumber:95599"},{"attrs":{},"class":"bycall","id":"calllog:955992020-07-22 09:43:35-phonenumber:15806219393-bycall","source":"calllog:955992020-07-22 09:43:35","target":"phonenumber:15806219393"},{"attrs":{},"class":"bycall","id":"calllog:955992020-08-02 08:13:38-phonenumber:15806219393-bycall","source":"calllog:955992020-08-02 08:13:38","target":"phonenumber:15806219393"},{"attrs":{},"class":"bycall","id":"calllog:955992020-07-15 16:05:45-phonenumber:15806219393-bycall","source":"calllog:955992020-07-15 16:05:45","target":"phonenumber:15806219393"},{"attrs":{},"class":"callto","id":"calllog:955992020-08-22 09:43:32-phonenumber:95599-callto","source":"calllog:955992020-08-22 09:43:32","target":"phonenumber:95599"}],"Nodes":[{"_icon":"calllog","class":"/matrix/action/calllog","id":"calllog:955992020-08-02 09:59:45","name":"15806219393","tags":[]},{"_icon":"calllog","class":"/matrix/action/calllog","id":"calllog:955992020-07-21 10:15:27","name":"15806219393","tags":[]},{"_icon":"calllog","class":"/matrix/action/calllog","id":"calllog:955992020-08-02 08:13:38","name":"15806219393","tags":[]},{"_icon":"calllog","class":"/matrix/action/calllog","id":"calllog:955992020-08-01 20:07:30","name":"15806219393","tags":[]},{"_icon":"calllog","class":"/matrix/action/calllog","id":"calllog:955992020-07-31 11:43:44","name":"15806219393","tags":[]},{"_icon":"phonenumber","class":"/matrix/entity/phonenumber","id":"phonenumber:95599","name":"电话号码:95599","tags":[]},{"_icon":"phonenumber","class":"/matrix/entity/phonenumber","id":"phonenumber:15806219393","name":"电话号码:15806219393","tags":[]},{"_icon":"calllog","class":"/matrix/action/calllog","id":"calllog:955992020-08-22 09:43:32","name":"15806219393","tags":[]},{"_icon":"calllog","class":"/matrix/action/calllog","id":"calllog:955992020-08-02 11:07:28","name":"15806219393","tags":[]},{"_icon":"calllog","class":"/matrix/action/calllog","id":"calllog:955992020-08-02 08:21:32","name":"15806219393","tags":[]},{"_icon":"calllog","class":"/matrix/action/calllog","id":"calllog:955992020-07-22 09:43:35","name":"15806219393","tags":[]},{"_icon":"calllog","class":"/matrix/action/calllog","id":"calllog:955992020-07-17 14:14:10","name":"15806219393","tags":[]},{"_icon":"calllog","class":"/matrix/action/calllog","id":"calllog:955992020-07-15 16:05:45","name":"15806219393","tags":[]}],"PathTags":[],"Paths":[]},"group":{"edges":{},"nodes":{}}}],"meta":{"classes":{"/_graph":1},"columns":{"/_graph":[{"label":"graph","name":"graph","title":"graph","type":"map","varname":""},{"label":"group","name":"group","title":"group","type":"map","varname":""}]},"type":"graph"}}
2021/01/26 10:44:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:44:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:44:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:44:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:44:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:44:17 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 10:44:17 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var calllog  = function(){
    var rtn = null;
    try{
        var matchStr = "match ('phonenumber:15806219393','"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog limit 20) - [:callto*1] -> (:phonenumber)";
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr); 
        log.info(1111,JSON.stringify(tmp))
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
        
    }catch(err){
        rtn = [];
    }
    return rtn;
};

// var sameCalllog = function(){
//     var rtn = null;
    
//     try{
//         var matchStr = "match ('"+getPhoneByPeople.join("','")+"') - [*2] -> (:perbasisinfo)";
//         log.debug(matchStr)
//         rtn = odb.mql(matchStr); 
//     } catch(err){
//         //log.error(err)
//         return [];
//     }
    
//     return rtn;
// }


 OUTPUT = calllog()
2021/01/26 10:44:17 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 10:44:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:44:17 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 10:44:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:44:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:44:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:44:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:44:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:44:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:44:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:44:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:44:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:44:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:44:49 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 10:44:49 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var calllog  = function(){
    var rtn = null;
    try{
        var matchStr = "match ('phonenumber:15806219393','"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog limit 20) - [:callto*1] -> (:phonenumber)";
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr); 
        log.debug(1111,JSON.stringify(tmp))
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
        
    }catch(err){
        rtn = [];
    }
    return rtn;
};

// var sameCalllog = function(){
//     var rtn = null;
    
//     try{
//         var matchStr = "match ('"+getPhoneByPeople.join("','")+"') - [*2] -> (:perbasisinfo)";
//         log.debug(matchStr)
//         rtn = odb.mql(matchStr); 
//     } catch(err){
//         //log.error(err)
//         return [];
//     }
    
//     return rtn;
// }


 OUTPUT = calllog()
2021/01/26 10:44:49 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 10:44:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:44:50 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 10:44:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:44:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:44:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:45:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:45:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:45:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:45:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:45:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:45:39 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 10:45:39 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var calllog  = function(){
    var rtn = null;
    try{
        var matchStr = "match ('phonenumber:15806219393','"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog limit 20) - [:callto*1] -> (:phonenumber)";
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        log.debug(1111,JSON.stringify(tmp))
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
        
    }catch(err){
        rtn = [];
    }
    return rtn;
};

// var sameCalllog = function(){
//     var rtn = null;
    
//     try{
//         var matchStr = "match ('"+getPhoneByPeople.join("','")+"') - [*2] -> (:perbasisinfo)";
//         log.debug(matchStr)
//         rtn = odb.mql(matchStr); 
//     } catch(err){
//         //log.error(err)
//         return [];
//     }
    
//     return rtn;
// }


 OUTPUT = calllog()
2021/01/26 10:45:39 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 10:45:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:45:40 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 10:45:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:45:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:45:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:45:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:45:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:45:47 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 10:45:47 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var calllog  = function(){
    var rtn = null;
    try{
        var matchStr = "match ('phonenumber:15806219393','"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog limit 20) - [:callto*1] -> (:phonenumber)";
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
        
    }catch(err){
        rtn = [];
    }
    return rtn;
};

// var sameCalllog = function(){
//     var rtn = null;
    
//     try{
//         var matchStr = "match ('"+getPhoneByPeople.join("','")+"') - [*2] -> (:perbasisinfo)";
//         log.debug(matchStr)
//         rtn = odb.mql(matchStr); 
//     } catch(err){
//         //log.error(err)
//         return [];
//     }
    
//     return rtn;
// }


 OUTPUT = calllog()
2021/01/26 10:45:47 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 10:45:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:45:47 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 10:45:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:45:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:45:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:46:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:46:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:46:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:46:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:47:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:47:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:47:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:47:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:48:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:48:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:49:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:49:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:49:29 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 10:49:29 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var calllog  = (function(param){
    var rtn = null;
    try{
        var matchStr = "match ('phonenumber:15806219393','"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog limit "+param.limit+") - [:callto*1] -> (:phonenumber)";
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})({limit:20});


// INPUT:电话号码
// OUTPUT: 人

var getPeopleByPhone = function(){
    var rtn = null;
    
    try{
        var matchStr = "match ('"+getPhoneByPeople.join("','")+"') - [*2] -> (:perbasisinfo)";
        log.debug(matchStr)
        rtn = odb.mql(matchStr); 
    } catch(err){
        //log.error(err)
        return [];
    }
    
    return rtn;
}


 OUTPUT = calllog()
2021/01/26 10:49:29 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 10:49:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:49:30 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 10:49:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:50:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:50:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:50:28 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 10:50:28 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(param){
    var rtn = null;
    try{
        var matchStr = "match ('phonenumber:15806219393','"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog limit "+param.limit+") - [:callto*1] -> (:phonenumber)";
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})({limit:20});


// INPUT:电话号码
// OUTPUT: 人

var getPeopleByPhone = function(){
    var rtn = null;
    
    try{
        var matchStr = "match ('"+getPhoneByCalllog.join("','")+"') - [*2] -> (:perbasisinfo)";
        log.debug(matchStr)
        rtn = odb.mql(matchStr); 
    } catch(err){
        //log.error(err)
        return [];
    }
    
    return rtn;
}


 OUTPUT = calllog()
2021/01/26 10:50:28 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 10:50:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:50:29 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 10:50:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:50:36 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 10:50:36 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(param){
    var rtn = null;
    try{
        var matchStr = "match ('phonenumber:15806219393','"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog limit "+param.limit+") - [:callto*1] -> (:phonenumber)";
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})({limit:20});


// INPUT:电话号码
// OUTPUT: 人

var getPeopleByPhone = function(){
    var rtn = null;
    
    try{
        var matchStr = "match ('"+getPhoneByCalllog.join("','")+"') - [*2] -> (:perbasisinfo)";
        log.debug(matchStr)
        //rtn = odb.mql(matchStr); 
    } catch(err){
        //log.error(err)
        return [];
    }
    
    return rtn;
}


 OUTPUT = getPeopleByPhone()
2021/01/26 10:50:36 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 10:50:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:50:36 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 10:50:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:50:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:50:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:50:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:50:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:50:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:51:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:51:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:51:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:51:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:51:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:52:08 [I] auth.go 217: hdim.admin login success for get session.
2021/01/26 10:52:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:52:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:52:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:52:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:52:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:52:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:52:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:52:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:52:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:52:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:52:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:52:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:52:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:52:12 [W] query_util.go 869: can't find class for id[biz:数字国网] , search subdix of class!
2021/01/26 10:52:12 [W] cypher_util.go 762: biz:数字国网 not Exist, ignore & continue .
2021/01/26 10:52:12 [W] query_util.go 869: can't find class for id[biz:开发测试] , search subdix of class!
2021/01/26 10:52:12 [W] cypher_util.go 762: biz:开发测试 not Exist, ignore & continue .
2021/01/26 10:52:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:52:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:52:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:52:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:52:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:52:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:52:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:52:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:52:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:52:39 [I] wjs.go 145: /bizApi/hdim/getOneRelaData.js:7:9:  ==============phonenumber:13046513888
2021/01/26 10:52:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:52:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:52:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:53:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:53:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:53:23 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 10:53:23 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(param){
    var rtn = null;
    try{
        var matchStr = "match ('phonenumber:15806219393','"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog limit "+param.limit+") - [:callto*1] -> (:phonenumber)";
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})({limit:20});


// INPUT:电话号码
// OUTPUT: 人

var getPeopleByPhone = function(){
    var rtn = null;
    
    try{
        var matchStr = "match ('"+getPhoneByCalllog.join("','")+"') - [*2] -> (:perbasisinfo) union ('"+getPhoneByCalllog.join("','")+"') - [*1] -> (:mobile)";
        log.debug(matchStr)
        //rtn = odb.mql(matchStr); 
    } catch(err){
        //log.error(err)
        return [];
    }
    
    return rtn;
}


 OUTPUT = getPeopleByPhone()
2021/01/26 10:53:23 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 10:53:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:53:24 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 10:53:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:53:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:53:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:53:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:53:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:54:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:54:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:54:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:54:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:54:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:55:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:55:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:55:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:55:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:55:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:56:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:56:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:56:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:56:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:56:41 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 10:56:41 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(param){
    var rtn = null;
    try{
        var matchStr = "match ('phonenumber:15806219393','"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog limit "+param.limit+") - [:callto*1] -> (:phonenumber)";
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})({limit:20});


// INPUT:电话号码
// OUTPUT: 人

var getPeopleByPhone = function(){
    var rtn = null;
    
    try{
        var matchStr = "match ('"+getPhoneByCalllog.join("','")+"') - [*2] -> (:perbasisinfo) union ('"+getPhoneByCalllog.join("','")+"') - [*1] -> (:mobile)";
        log.debug(matchStr)
        rtn = odb.mql(matchStr); 
    } catch(err){
        //log.error(err)
        return [];
    }
    
    return rtn;
}


 OUTPUT = getPeopleByPhone()
2021/01/26 10:56:41 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 10:56:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:56:42 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 10:56:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:56:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:56:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:56:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:56:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:56:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:56:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:56:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:56:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:56:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:56:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:56:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:56:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:57:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:57:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:57:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:57:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:57:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:57:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:58:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:58:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:58:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:58:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:58:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:59:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 10:59:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:00:08 [I] auth.go 217: hdim.admin login success for get session.
2021/01/26 11:00:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:00:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:00:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:00:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:00:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:00:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:00:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:00:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:00:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:00:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:00:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:00:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:00:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:00:16 [W] query_util.go 869: can't find class for id[biz:数字国网] , search subdix of class!
2021/01/26 11:00:16 [W] cypher_util.go 762: biz:数字国网 not Exist, ignore & continue .
2021/01/26 11:00:16 [W] query_util.go 869: can't find class for id[biz:开发测试] , search subdix of class!
2021/01/26 11:00:16 [W] cypher_util.go 762: biz:开发测试 not Exist, ignore & continue .
2021/01/26 11:00:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:00:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:00:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:00:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:00:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:00:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:00:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:00:28 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 11:00:28 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(param){
    var rtn = null;
    try{
        var matchStr = "match ('phonenumber:15806219393','"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog limit "+param.limit+") - [:callto*1] -> (:phonenumber)";
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})({limit:20});


// INPUT:电话号码
// OUTPUT: 人

var getPeopleByPhone = function(){
    var rtn = null;
    
    try{
        var matchStr = "match ('"+getPhoneByCalllog.join("','")+"') - [*2] -> (:perbasisinfo) union ('"+getPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) union ('"+getPhoneByCalllog.join("','")+"') - [*1] -> (:/matrix/action/call limit 20)";
        log.debug(matchStr)
        rtn = odb.mql(matchStr); 
    } catch(err){
        //log.error(err)
        return [];
    }
    
    return rtn;
}


 OUTPUT = getPeopleByPhone()
2021/01/26 11:00:28 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 11:00:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:00:28 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 11:00:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:00:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:00:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:00:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:00:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:00:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:00:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:00:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:00:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:00:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:00:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:00:49 [I] wjs.go 145: /bizApi/hdim/getTwoRelaData.js:7:9:  ==============phonenumber:13046513888
2021/01/26 11:00:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:00:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:00:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:00:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:00:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:00:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:00:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:00:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:01:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:01:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:01:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:01:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:01:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:01:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:01:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:01:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:02:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:02:09 [E] modb.go 90: [NotExist]: class : /matrix/action/call not find !
"[NotExist]" backtrace:
git.wecise.com/wecise/platform/odb.(*MqlSemantics).FullClass:mql.go:1060
git.wecise.com/wecise/platform/odb.(*MqlParser).CypherClass:MqlParser.go:916
git.wecise.com/wecise/platform/odb.(*MqlParser).CypherNodeQuery:MqlParser.go:558
git.wecise.com/wecise/platform/odb.(*MqlParser).CypherValueNodePattern_1:MqlParser.go:515
git.wecise.com/wecise/platform/odb.(*MqlParser).CypherValueNodePattern:MqlParser.go:493
git.wecise.com/wecise/platform/odb.(*MqlParser).CypherVarNodePattern:MqlParser.go:535
git.wecise.com/wecise/platform/odb.(*MqlParser).CypherNodePattern:MqlParser.go:466
git.wecise.com/wecise/platform/odb.(*MqlParser).CypherMatch:MqlParser.go:442
git.wecise.com/wecise/platform/odb.(*MqlParser).CypherMultiMatch:MqlParser.go:257
git.wecise.com/wecise/platform/odb.(*MqlParser).CypherQuery:MqlParser.go:244
git.wecise.com/wecise/platform/odb.(*MqlParser).CypherStatement_0:MqlParser.go:235
git.wecise.com/wecise/platform/odb.(*MqlParser).CypherStatement:MqlParser.go:223
git.wecise.com/wecise/platform/odb.(*MqlParser).Statement_2:MqlParser.go:116
git.wecise.com/wecise/platform/odb.(*MqlParser).Statement:MqlParser.go:69
git.wecise.com/wecise/platform/odb.(*MqlParser).Parse:MqlParser.go:40
git.wecise.com/wecise/platform/odb.(*Gutil).Parse:query.go:195
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:240
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/web/routers/modb.Mql:modb.go:87
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375
2021/01/26 11:02:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:02:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:02:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:02:21 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 11:02:21 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(param){
    var rtn = null;
    try{
        var matchStr = "match ('phonenumber:15806219393','"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog limit "+param.limit+") - [:callto*1] -> (:phonenumber)";
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})({limit:20});


// INPUT:电话号码
// OUTPUT: 人

var getPeopleByPhone = function(){
    var rtn = null;
    
    try{
        var matchStr = "match ('"+getPhoneByCalllog.join("','")+"') - [*2] -> (:perbasisinfo) union ('"+getPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) union ('"+getPhoneByCalllog.join("','")+"') - [*1] -> (:/matrix/action/calllog limit 20)";
        log.debug(matchStr)
        rtn = odb.mql(matchStr); 
    } catch(err){
        //log.error(err)
        return [];
    }
    
    return rtn;
}


 OUTPUT = getPeopleByPhone()
2021/01/26 11:02:21 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 11:02:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:02:21 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 11:02:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:02:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:02:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:02:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:02:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:02:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:02:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:02:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:02:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:02:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:03:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:03:06 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 11:03:06 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(param){
    var rtn = null;
    try{
        var matchStr = "match ('phonenumber:15806219393','"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog limit "+param.limit+") - [:callto*1] -> (:phonenumber)";
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})({limit:20});


// INPUT:电话号码
// OUTPUT: 人

var getPeopleByPhone = function(){
    var rtn = null;
    
    try{
        var matchStr = "match ('"+getPhoneByCalllog.join("','")+"') - [*2] -> (:perbasisinfo) union ('"+getPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) union ('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog limit 20)";
        log.debug(matchStr)
        rtn = odb.mql(matchStr); 
    } catch(err){
        //log.error(err)
        return [];
    }
    
    return rtn;
}


 OUTPUT = getPeopleByPhone()
2021/01/26 11:03:06 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 11:03:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:03:07 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 11:03:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:03:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:03:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:03:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:03:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:03:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:03:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:03:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:03:46 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 11:03:46 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(param){
    var rtn = null;
    try{
        var matchStr = "match ('phonenumber:15806219393','"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog limit "+param.limit+") - [:callto*1] -> (:phonenumber)";
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})({limit:20});


// INPUT:电话号码
// OUTPUT: 人

var getPeopleByPhone = function(){
    var rtn = null;
    
    try{
        var matchStr = "match ('"+getPhoneByCalllog.join("','")+"') - [*2] -> (:perbasisinfo) union ('"+getPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) union ('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog limit 20)";
        log.debug(matchStr)
        rtn = odb.mql(matchStr); 
    } catch(err){
        //log.error(err)
        return [];
    }
    
    return rtn;
}


 OUTPUT = getPeopleByPhone()
2021/01/26 11:03:46 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 11:03:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:03:47 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 11:03:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:04:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:04:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:04:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:04:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:04:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:04:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:04:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:04:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:04:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:04:58 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 11:04:58 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(param){
    var rtn = null;
    try{
        var matchStr = "match ('phonenumber:15806219393','"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog limit "+param.limit+") - [:callto*1] -> (:phonenumber)";
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})({limit:20});


// INPUT:电话号码
// OUTPUT: 人

var getPeopleByPhone = function(){
    var rtn = null;
    
    try{
        //var matchStr = "match ('"+getPhoneByCalllog.join("','")+"') - [*2] -> (:perbasisinfo) union ('"+getPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) union ('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog limit 20)";
        var matchStr = "match ('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog limit 20)";
        log.debug(matchStr)
        rtn = odb.mql(matchStr); 
    } catch(err){
        //log.error(err)
        return [];
    }
    
    return rtn;
}


 OUTPUT = getPeopleByPhone()
2021/01/26 11:04:58 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 11:04:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:04:59 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 11:05:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:05:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:05:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:05:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:05:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:05:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:06:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:06:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:07:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:07:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:08:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:08:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:08:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:08:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:08:34 [I] auth.go 217: hdim.admin login success for get session.
2021/01/26 11:08:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:08:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:08:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:08:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:08:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:08:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:08:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:08:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:08:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:08:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:08:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:08:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:08:37 [W] query_util.go 869: can't find class for id[biz:数字国网] , search subdix of class!
2021/01/26 11:08:37 [W] cypher_util.go 762: biz:数字国网 not Exist, ignore & continue .
2021/01/26 11:08:37 [W] query_util.go 869: can't find class for id[biz:开发测试] , search subdix of class!
2021/01/26 11:08:37 [W] cypher_util.go 762: biz:开发测试 not Exist, ignore & continue .
2021/01/26 11:08:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:09:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:09:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:10:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:10:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:11:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:11:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:11:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:12:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:12:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:12:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:12:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:12:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:12:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:12:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:12:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:12:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:12:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:12:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:12:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:13:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:13:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:13:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:13:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:13:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:13:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:13:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:14:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:14:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:14:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:14:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:14:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:14:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:15:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:15:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:15:14 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 11:15:14 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(param){
    var rtn = null;
    try{
        var matchStr = "match ('phonenumber:15806219393','"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog limit "+param.limit+") - [:callto*1] -> (:phonenumber)";
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})({limit:20});


// INPUT:电话号码
// OUTPUT: 人

var getPeopleByPhone = function(){
    var rtn = null;
    
    try{
        //var matchStr = "match ('"+getPhoneByCalllog.join("','")+"') - [*2] -> (:perbasisinfo) union ('"+getPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) union ('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog limit 20)";
        var matchStr = "match ('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog limit 20) union ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber)";
        log.debug(matchStr)
        rtn = odb.mql(matchStr); 
    } catch(err){
        //log.error(err)
        return [];
    }
    
    return rtn;
}


 OUTPUT = getPeopleByPhone()
2021/01/26 11:15:14 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 11:15:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:15:17 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 11:15:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:15:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:15:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:15:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:15:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:15:41 [W] cypher_util.go 762:  not Exist, ignore & continue .
2021/01/26 11:15:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:15:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:15:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:16:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:16:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:16:35 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 11:16:35 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(param){
    var rtn = null;
    try{
        var matchStr = "match ('phonenumber:15806219393','"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog limit "+param.limit+") - [:callto*1] -> (:phonenumber)";
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})({limit:20});


// INPUT:电话号码
// OUTPUT: 人

var getPeopleByPhone = function(){
    var rtn = null;
    
    try{
        //var matchStr = "match ('"+getPhoneByCalllog.join("','")+"') - [*2] -> (:perbasisinfo) union ('"+getPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) union ('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog limit 20)";
        var matchStr = "match ('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog limit 20) union ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) union  ('phonenumber:15806219393','"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog limit "+param.limit+") - [:callto*1] -> (:phonenumber)";
        log.debug(matchStr)
        rtn = odb.mql(matchStr); 
    } catch(err){
        //log.error(err)
        return [];
    }
    
    return rtn;
}


 OUTPUT = getPeopleByPhone()
2021/01/26 11:16:35 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 11:16:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:16:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:16:38 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 11:16:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:16:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:16:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:16:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:16:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:16:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:16:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:17:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:17:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:17:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:17:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:17:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:17:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:17:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:17:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:17:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:17:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:17:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:17:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:17:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:17:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:17:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:17:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:17:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:18:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:18:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:18:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:18:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:18:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:18:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:18:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:18:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:18:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:18:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:19:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:19:05 [W] cypher_util.go 762:  not Exist, ignore & continue .
2021/01/26 11:19:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:19:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:19:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:19:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:19:51 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 11:19:51 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(param){
    var rtn = null;
    try{
        var matchStr = "match ('phonenumber:15806219393','"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog limit "+param.limit+") - [:callto*1] -> (:phonenumber)";
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})({limit:20});


// INPUT:电话号码
// OUTPUT: 人

var getPeopleByPhone = function(){
    var rtn = null;
    
    try{
        //var matchStr = "match ('"+getPhoneByCalllog.join("','")+"') - [*2] -> (:perbasisinfo) union ('"+getPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) union ('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog limit 20)";
        var matchStr = "match ('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog limit 20) union ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) union  ('phonenumber:15806219393','"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog limit 20) - [:callto*1] -> (:phonenumber)";
        log.debug(matchStr)
        rtn = odb.mql(matchStr); 
    } catch(err){
        //log.error(err)
        return [];
    }
    
    return rtn;
}


 OUTPUT = getPeopleByPhone()
2021/01/26 11:19:51 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 11:19:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:19:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:19:53 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 11:19:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:20:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:20:09 [W] cypher_util.go 762:  not Exist, ignore & continue .
2021/01/26 11:20:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:20:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:20:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:21:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:21:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:22:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:22:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:22:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:22:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:22:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:22:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:22:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:22:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:23:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:23:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:23:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:23:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:23:24 [W] cypher_util.go 762:  not Exist, ignore & continue .
2021/01/26 11:23:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:23:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:24:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:24:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:24:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:24:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:24:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:24:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:24:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:24:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:24:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:24:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:24:29 [I] wjs.go 145: /bizApi/hdim/getThreeRelaData.js:7:9:  ==============phonenumber:15162359301
2021/01/26 11:24:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:24:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:24:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:25:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:25:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:25:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:25:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:25:07 [I] wjs.go 145: /bizApi/hdim/getThreeRelaData.js:7:9:  ==============phonenumber:15008669972
2021/01/26 11:25:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:25:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:25:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:25:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:25:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:25:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:25:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:25:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:25:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:25:39 [I] wjs.go 145: /bizApi/hdim/getThreeRelaData.js:7:9:  ==============calllog:186952205672020-06-27 11:43:33
2021/01/26 11:25:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:25:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:25:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:25:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:25:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:25:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:25:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:25:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:26:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:26:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:26:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:26:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:26:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:26:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:26:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:26:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:26:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:26:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:26:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:26:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:26:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:26:18 [I] wjs.go 145: /bizApi/hdim/getThreeRelaData.js:7:9:  ==============phonenumber:18695220567
2021/01/26 11:26:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:26:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:26:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:26:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:26:37 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 11:26:37 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(param){
    var rtn = null;
    try{
        var matchStr = "match ('phonenumber:15806219393','"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog limit "+param.limit+") - [:callto*1] -> (:phonenumber)";
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})({limit:20});


// INPUT:电话号码
// OUTPUT: 人

var getPeopleByPhone = function(){
    var rtn = null;
    
    try{
        var matchStr = "match ('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog limit 20) union ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) union  ('phonenumber:15806219393','"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog limit 20) - [:callto*1] -> (:phonenumber)";
        log.debug(matchStr)
        rtn = odb.mql(matchStr); 
    } catch(err){
        //log.error(err)
        return [];
    }
    
    return rtn;
}


 OUTPUT = getPeopleByPhone()
2021/01/26 11:26:37 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 11:26:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:26:38 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 11:26:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:26:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:26:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:27:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:27:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:27:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:27:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:27:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:27:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:27:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:27:23 [I] wjs.go 145: /bizApi/hdim/getThreeRelaData.js:7:9:  ==============phonenumber:18651916699
2021/01/26 11:27:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:28:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:28:07 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 11:28:07 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(param){
    var rtn = null;
    try{
        var matchStr = "match ('phonenumber:15806219393','"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog limit "+param.limit+") - [:callto*1] -> (:phonenumber)";
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})({limit:20});


// INPUT:电话号码
// OUTPUT: 人

var getPeopleByPhone = function(){
    var rtn = null;
    
    try{
        var matchStr = "match ('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog limit 20) union ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) union  ('phonenumber:15806219393','"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog limit 20) - [:callto*1] -> (:phonenumber)";
        log.debug(matchStr)
        rtn = odb.mql(matchStr); 
    } catch(err){
        //log.error(err)
        return [];
    }
    
    return rtn;
}


 OUTPUT = getPeopleByPhone()
2021/01/26 11:28:07 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 11:28:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:28:08 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 11:28:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:28:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:29:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:29:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:29:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:29:55 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 11:29:55 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(param){
    var rtn = null;
    try{
        var matchStr = "match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog limit "+param.limit+") - [:callto*1] -> (:phonenumber)";
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})({limit:20});


// INPUT:电话号码
// OUTPUT: 人

var getPeopleByPhone = function(){
    var rtn = null;
    
    try{
        var matchStr = "match ('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog limit 20) union ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) union  ('phonenumber:15806219393','"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog limit 20) - [:callto*1] -> (:phonenumber)";
        log.debug(matchStr)
        rtn = odb.mql(matchStr); 
    } catch(err){
        //log.error(err)
        return [];
    }
    
    return rtn;
}


 OUTPUT = getPeopleByPhone()
2021/01/26 11:29:56 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 11:29:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:29:56 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 11:30:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:30:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:30:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:30:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:30:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:30:16 [W] cypher_util.go 762:  not Exist, ignore & continue .
2021/01/26 11:30:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:30:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:30:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:30:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:31:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:31:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:31:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:31:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:31:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:31:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:31:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:31:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:31:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:31:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:31:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:31:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:31:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:31:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:31:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:31:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:31:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:31:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:31:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:31:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:32:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:32:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:32:35 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 11:32:35 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';



// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(param){
    var rtn = null;
    try{
        var matchStr = "match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog limit "+param.limit+") - [:callto*1] -> (:phonenumber)";
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})({limit:20, stime:'2020-07-17 00:00:00'});


// INPUT:电话号码
// OUTPUT: 人

var getPeopleByPhone = function(){
    var rtn = null;
    
    try{
        var matchStr = "match ('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog limit 20) union ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) union  ('phonenumber:15806219393','"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog limit 20) - [:callto*1] -> (:phonenumber)";
        log.debug(matchStr)
        rtn = odb.mql(matchStr); 
    } catch(err){
        //log.error(err)
        return [];
    }
    
    return rtn;
}


 OUTPUT = getPeopleByPhone()
2021/01/26 11:32:35 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 11:32:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:32:36 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 11:32:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:33:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:33:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:33:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:33:53 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 11:33:53 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:20, stime:'2020-07-17 00:00:00'};


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = null;
    try{
        var matchStr = "match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where starttimestr>='"+param.stime+"' limit "+param.limit+") - [:callto*1] -> (:phonenumber)";
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


// INPUT:电话号码
// OUTPUT: 人

var getPeopleByPhone = function(){
    var rtn = null;
    
    try{
        var matchStr = "match ('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog limit 20) union ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) union  ('phonenumber:15806219393','"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where starttimestr>='"+param.stime+"' limit 20) - [:callto*1] -> (:phonenumber)";
        log.debug(matchStr)
        rtn = odb.mql(matchStr); 
    } catch(err){
        //log.error(err)
        return [];
    }
    
    return rtn;
}


 OUTPUT = getPeopleByPhone()
2021/01/26 11:33:53 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 11:33:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:33:54 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 11:34:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:34:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:34:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:34:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:34:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:34:16 [W] cypher_util.go 762:  not Exist, ignore & continue .
2021/01/26 11:34:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:34:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:34:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:34:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:34:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:34:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:34:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:34:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:34:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:34:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:34:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:34:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:34:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:34:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:34:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:34:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:34:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:34:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:34:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:34:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:35:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:35:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:35:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:35:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:35:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:35:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:35:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:35:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:35:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:35:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:35:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:35:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:35:53 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 11:35:53 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:20, stime:'2020-07-17 00:00:00'};


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = null;
    try{
        var matchStr = "match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where starttimestr>='"+param.stime+"' limit "+param.limit+") - [:callto*1] -> (:phonenumber)";
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


// INPUT:电话号码
// OUTPUT: 人

var getPeopleByPhone = function(){
    var rtn = null;
    
    try{
        var matchStr = "match ('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog limit 20) union ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) union ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where starttimestr>='"+param.stime+"' limit 20) - [:callto*1] -> (:phonenumber)";
        log.debug(matchStr)
        rtn = odb.mql(matchStr); 
    } catch(err){
        //log.error(err)
        return [];
    }
    
    return rtn;
}


 OUTPUT = getPeopleByPhone()
2021/01/26 11:35:53 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 11:35:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:35:54 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 11:35:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:36:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:36:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:36:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:36:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:36:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:36:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:36:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:37:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:37:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:37:18 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 11:37:18 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:20, stime:'2020-07-17 00:00:00'};


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = null;
    try{
        var matchStr = "match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where starttimestr>='"+param.stime+"' limit "+param.limit+") - [:callto*1] -> (:phonenumber)";
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


// INPUT:电话号码
// OUTPUT: 人

var getPeopleByPhone = function(){
    var rtn = null;
    
    try{
        var matchStr = "match ('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog limit 20) union ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) union ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where starttimestr>='"+param.stime+"' limit 20) - [:callto*1] -> (:phonenumber)";
        log.debug(matchStr)
        rtn = odb.mql(matchStr); 
    } catch(err){
        //log.error(err)
        return [];
    }
    
    return rtn;
}


 OUTPUT = getPeopleByPhone()
2021/01/26 11:37:18 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 11:37:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:37:18 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 11:37:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:38:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:38:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:39:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:39:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:39:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:39:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:39:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:40:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:40:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:40:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:40:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:40:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:40:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:40:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:40:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:40:33 [W] cypher_util.go 762:  not Exist, ignore & continue .
2021/01/26 11:40:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:40:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:40:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:40:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:40:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:40:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:40:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:40:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:40:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:40:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:40:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:40:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:40:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:40:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:40:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:40:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:40:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:41:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:41:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:41:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:41:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:41:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:41:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:41:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:41:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:41:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:41:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:41:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:41:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:41:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:41:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:41:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:41:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:41:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:41:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:41:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:41:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:41:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:41:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:41:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:41:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:41:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:41:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:41:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:41:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:41:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:41:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:41:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:41:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:41:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:41:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:41:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:41:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:41:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:41:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:41:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:41:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:41:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:41:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:41:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:41:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:41:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:41:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:41:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:41:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:41:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:41:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:41:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:41:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:41:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:41:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:42:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:42:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:42:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:42:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:42:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:42:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:42:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:42:22 [W] cypher_util.go 762:  not Exist, ignore & continue .
2021/01/26 11:42:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:42:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:42:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:42:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:42:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:42:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:42:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:42:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:42:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:42:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:42:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:42:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:42:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:42:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:42:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:42:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:42:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:42:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:42:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:43:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:43:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:43:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:43:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:43:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:43:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:43:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:43:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:43:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:43:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:43:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:43:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:43:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:43:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:43:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:43:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:43:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:43:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:43:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:43:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:43:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:43:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:43:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:43:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:43:53 [W] cypher_util.go 762:  not Exist, ignore & continue .
2021/01/26 11:43:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:43:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:44:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:44:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:44:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:44:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:44:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:44:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:44:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:44:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:44:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:44:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:44:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:44:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:44:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:44:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:44:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:44:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:44:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:44:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:44:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:44:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:44:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:44:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:44:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:44:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:44:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:44:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:44:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:44:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:44:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:44:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:44:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:44:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:45:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:45:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:45:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:45:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:45:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:45:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:45:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:45:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:45:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:46:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:46:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:46:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:46:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:46:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:46:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:46:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:46:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:46:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:46:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:46:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:46:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:46:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:46:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:46:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:46:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:46:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:46:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:46:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:46:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:46:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:46:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:46:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:46:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:46:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:46:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:46:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:46:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:46:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:46:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:47:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:47:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:47:30 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 11:47:30 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:20, stime:'2020-07-17 00:00:00'};


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = null;
    try{
        var matchStr = "match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where starttimestr>='"+param.stime+"' limit "+param.limit+") - [:callto*1] -> (:phonenumber)";
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


// INPUT:电话号码
// OUTPUT: 人

var getPeopleByPhone = function(){
    var rtn = null;
    
    try{
        var matchStr = "match ('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog limit 20) union ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) union ('"+getPhoneByPeople.join("','")+"') - [*1] ->(:mobile)  union ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where starttimestr>='"+param.stime+"' limit 20) - [:callto*1] -> (:phonenumber)";
        log.debug(matchStr)
        rtn = odb.mql(matchStr); 
    } catch(err){
        //log.error(err)
        return [];
    }
    
    return rtn;
}


 OUTPUT = getPeopleByPhone()
2021/01/26 11:47:30 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 11:47:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:47:30 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 11:47:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:47:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:47:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:47:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:47:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:47:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:47:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:47:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:47:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:47:46 [W] cypher_util.go 762:  not Exist, ignore & continue .
2021/01/26 11:47:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:47:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:47:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:47:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:47:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:47:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:48:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:48:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:48:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:48:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:48:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:48:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:48:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:48:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:48:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:48:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:48:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:48:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:48:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:48:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:49:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:49:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:49:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:49:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:49:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:49:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:49:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:49:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:49:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:49:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:49:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:49:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:49:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:50:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:50:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:50:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:50:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:50:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:50:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:50:53 [E] modb.go 90: [UnKnown]: query Timed out!
"[UnKnown]" backtrace:
git.wecise.com/wecise/platform/odb.(*CTernary).RelationRangeLoop:cypher_ternary.go:541
git.wecise.com/wecise/platform/odb.(*CTernary).SubjectEvaluateAndSpread:cypher_ternary.go:368
git.wecise.com/wecise/platform/odb.(*CTernary).EvaluateAndSpread:cypher_ternary.go:209
git.wecise.com/wecise/platform/odb.(*CPhase).Evaluate:cypher_query.go:335
git.wecise.com/wecise/platform/odb.(*Gutil).CypherMatchQuery:cypher_query.go:94
git.wecise.com/wecise/platform/odb.(*MqlSemantics).Cypher:cypher.go:1318
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:275
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/web/routers/modb.Mql:modb.go:87
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375
2021/01/26 11:50:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:51:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:51:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:51:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:51:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:51:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:51:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:51:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:51:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:51:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:51:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:51:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:51:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:51:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:51:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:51:33 [I] auth.go 133: hdim.admin login success. Redirect to uri: /
2021/01/26 11:51:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:51:33 [I] home.go 65: Go to user home page: /home
2021/01/26 11:51:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:51:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:51:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:51:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:51:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:51:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:51:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:51:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:51:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:51:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:51:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:51:40 [E] modb.go 90: [UnKnown]: query Timed out!
"[UnKnown]" backtrace:
git.wecise.com/wecise/platform/odb.(*CTernary).RelationRangeLoop:cypher_ternary.go:541
git.wecise.com/wecise/platform/odb.(*CTernary).SubjectEvaluateAndSpread:cypher_ternary.go:368
git.wecise.com/wecise/platform/odb.(*CTernary).EvaluateAndSpread:cypher_ternary.go:223
git.wecise.com/wecise/platform/odb.(*CPhase).Evaluate:cypher_query.go:335
git.wecise.com/wecise/platform/odb.(*Gutil).CypherMatchQuery:cypher_query.go:94
git.wecise.com/wecise/platform/odb.(*MqlSemantics).Cypher:cypher.go:1318
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:275
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/web/routers/modb.Mql:modb.go:87
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375
2021/01/26 11:51:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:51:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:51:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:51:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:51:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:51:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:51:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:51:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:51:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:51:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:51:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:51:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:51:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:51:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:51:49 [W] query_util.go 869: can't find class for id[biz:数字国网] , search subdix of class!
2021/01/26 11:51:49 [W] cypher_util.go 762: biz:数字国网 not Exist, ignore & continue .
2021/01/26 11:51:49 [W] query_util.go 869: can't find class for id[biz:开发测试] , search subdix of class!
2021/01/26 11:51:49 [W] cypher_util.go 762: biz:开发测试 not Exist, ignore & continue .
2021/01/26 11:52:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:52:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:52:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:52:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:52:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:52:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:52:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:52:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:52:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:52:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:52:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:52:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:52:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:52:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:52:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:52:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:52:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:52:56 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:12:9:   match("phonenumber:15005107680") <- [*1] - (:/matrix/action/calllog where  ((starttimestr >="2019-12-09 00:00:00" and starttimestr <="2019-12-09 23:59:59")    or (starttimestr >="2019-12-17 00:00:00" and starttimestr <="2019-12-17 23:59:59")) and (tophone =15005107680 or forphone =15005107680 ))
2021/01/26 11:52:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:52:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:53:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:53:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:53:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:53:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:53:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:53:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:53:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:53:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:53:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:53:12 [E] modb.go 90: [UnKnown]: query Timed out!
"[UnKnown]" backtrace:
git.wecise.com/wecise/platform/odb.(*CTernary).RelationRangeLoop:cypher_ternary.go:541
git.wecise.com/wecise/platform/odb.(*CTernary).SubjectEvaluateAndSpread:cypher_ternary.go:368
git.wecise.com/wecise/platform/odb.(*CTernary).EvaluateAndSpread:cypher_ternary.go:223
git.wecise.com/wecise/platform/odb.(*CPhase).Evaluate:cypher_query.go:335
git.wecise.com/wecise/platform/odb.(*Gutil).CypherMatchQuery:cypher_query.go:94
git.wecise.com/wecise/platform/odb.(*MqlSemantics).Cypher:cypher.go:1318
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:275
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/web/routers/modb.Mql:modb.go:87
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375
2021/01/26 11:53:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:53:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:53:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:53:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:53:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:53:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:53:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:53:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:53:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:53:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:53:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:53:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:53:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:53:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:53:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:53:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:54:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:54:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:54:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:54:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:54:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:54:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:54:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:54:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:54:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:54:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:54:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:54:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:54:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:55:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:55:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:55:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:55:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:56:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:56:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:56:13 [E] modb.go 90: [NotExist]: Field {nam} Not Exist
"[NotExist]" backtrace:
git.wecise.com/wecise/platform/odb.(*Gutil).ToMatrixField:util.go:778
git.wecise.com/wecise/platform/odb.(*MqlSemantics).ToDBField:mql.go:2437
git.wecise.com/wecise/platform/odb.(*MqlParser).WhereField:MqlParser.go:5128
git.wecise.com/wecise/platform/odb.(*MqlParser).LuceneExpression_10:MqlParser.go:3733
git.wecise.com/wecise/platform/odb.(*MqlParser).LuceneExpression:MqlParser.go:3613
git.wecise.com/wecise/platform/odb.(*MqlParser).LuceneCondition:MqlParser.go:2797
git.wecise.com/wecise/platform/odb.(*MqlParser).LuceneConditions:MqlParser.go:2772
git.wecise.com/wecise/platform/odb.(*MqlParser).WhereCondition:MqlParser.go:1935
git.wecise.com/wecise/platform/odb.(*MqlParser).UpdateStatement_0:MqlParser.go:1451
git.wecise.com/wecise/platform/odb.(*MqlParser).UpdateStatement:MqlParser.go:1433
git.wecise.com/wecise/platform/odb.(*MqlParser).Statement_7:MqlParser.go:167
git.wecise.com/wecise/platform/odb.(*MqlParser).Statement:MqlParser.go:79
git.wecise.com/wecise/platform/odb.(*MqlParser).Parse:MqlParser.go:40
git.wecise.com/wecise/platform/odb.(*Gutil).Parse:query.go:195
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:240
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/web/routers/modb.Mql:modb.go:87
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375
2021/01/26 11:56:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:56:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:56:26 [E] modb.go 90: [NotExist]: Field {nam} Not Exist
"[NotExist]" backtrace:
git.wecise.com/wecise/platform/odb.(*Gutil).ToMatrixField:util.go:778
git.wecise.com/wecise/platform/odb.(*MqlSemantics).ToDBField:mql.go:2437
git.wecise.com/wecise/platform/odb.(*MqlParser).WhereField:MqlParser.go:5128
git.wecise.com/wecise/platform/odb.(*MqlParser).LuceneExpression_10:MqlParser.go:3733
git.wecise.com/wecise/platform/odb.(*MqlParser).LuceneExpression:MqlParser.go:3613
git.wecise.com/wecise/platform/odb.(*MqlParser).LuceneCondition:MqlParser.go:2797
git.wecise.com/wecise/platform/odb.(*MqlParser).LuceneConditions:MqlParser.go:2772
git.wecise.com/wecise/platform/odb.(*MqlParser).WhereCondition:MqlParser.go:1935
git.wecise.com/wecise/platform/odb.(*MqlParser).UpdateStatement_0:MqlParser.go:1451
git.wecise.com/wecise/platform/odb.(*MqlParser).UpdateStatement:MqlParser.go:1433
git.wecise.com/wecise/platform/odb.(*MqlParser).Statement_7:MqlParser.go:167
git.wecise.com/wecise/platform/odb.(*MqlParser).Statement:MqlParser.go:79
git.wecise.com/wecise/platform/odb.(*MqlParser).Parse:MqlParser.go:40
git.wecise.com/wecise/platform/odb.(*Gutil).Parse:query.go:195
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:240
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/web/routers/modb.Mql:modb.go:87
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375
2021/01/26 11:56:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:56:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:56:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:57:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:57:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:58:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:58:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:58:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:58:47 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 11:58:47 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:20, stime:'2020-07-17 00:00:00'};
var whereCond = "where starttimestr>='"+param.stime+"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = null;
    try{
        var matchStr = "match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog "+whereCond+") - [:callto*1] -> (:phonenumber)";
        //log.debug(matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


// INPUT:电话号码
// OUTPUT: 人

var getPeopleByPhone = function(){
    var rtn = null;
    
    try{
        var matchStr = "match ('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog limit 20) union ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) union ('"+getPhoneByPeople.join("','")+"') - [*1] ->(:mobile)  union ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog "+whereCond + ") - [:callto*1] -> (:phonenumber)";
        log.debug(matchStr)
        rtn = odb.mql(matchStr); 
    } catch(err){
        //log.error(err)
        return [];
    }
    
    return rtn;
}


 OUTPUT = getPeopleByPhone()
2021/01/26 11:58:47 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 11:58:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:58:48 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 11:58:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:58:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:58:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:58:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:59:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:59:03 [W] cypher_util.go 762:  not Exist, ignore & continue .
2021/01/26 11:59:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:59:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:59:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 11:59:13 [E] cypher_ternary.go 295: err: [UnKnown]: query Timed out!
"[UnKnown]" backtrace:
git.wecise.com/wecise/platform/odb.(*CTernary).RelationRangeLoop:cypher_ternary.go:541
git.wecise.com/wecise/platform/odb.(*CTernary).ObjectEvaluateAndSpread:cypher_ternary.go:294
git.wecise.com/wecise/platform/odb.(*CTernary).EvaluateAndSpread:cypher_ternary.go:218
git.wecise.com/wecise/platform/odb.(*CPhase).Evaluate:cypher_query.go:335
git.wecise.com/wecise/platform/odb.(*Gutil).CypherMatchQuery:cypher_query.go:94
git.wecise.com/wecise/platform/odb.(*MqlSemantics).Cypher:cypher.go:1318
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:275
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/odb.(*Gutil).jsFuncMQL:js_odb.go:155
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:201
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeAssignExpression:cmpl_evaluate_expression.go:124
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:31
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement.func1:cmpl_evaluate_statement.go:344
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).tryCatchEvaluate:runtime.go:142
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement:cmpl_evaluate_statement.go:343
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:98
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeAssignExpression:cmpl_evaluate_expression.go:124
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:31
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeProgram:cmpl_evaluate.go:17
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_runOrEval.func1:runtime.go:767
git.wecise.com/wecise/platform/lib/robertkrimen/otto.catchPanic:error.go:252
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_runOrEval:runtime.go:766
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_run:runtime.go:779
git.wecise.com/wecise/platform/lib/robertkrimen/otto.Otto.Run:otto.go:295
git.wecise.com/wecise/platform/web/routers/script.ExecJS:script.go:132
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375 
2021/01/26 11:59:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:00:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:00:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:00:17 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 12:00:17 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:20, stime:'2020-07-17 00:00:00'};
var whereCond = "where starttimestr>='"+param.stime+"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = null;
    try{
        var matchStr = "match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog "+whereCond+") - [:callto*1] -> (:phonenumber)";
        log.debug(22,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


// INPUT:电话号码
// OUTPUT: 人

var getPeopleByPhone = function(){
    var rtn = null;
    
    try{
        var matchStr = "match ('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog limit 20) union ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) union ('"+getPhoneByPeople.join("','")+"') - [*1] ->(:mobile)  union ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog "+whereCond + ") - [:callto*1] -> (:phonenumber)";
        log.debug(33,matchStr)
        rtn = odb.mql(matchStr); 
    } catch(err){
        //log.error(err)
        return [];
    }
    
    return rtn;
}


 OUTPUT = getPeopleByPhone()
2021/01/26 12:00:17 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 12:00:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:00:18 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 12:00:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:00:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:00:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:00:29 [W] cypher_util.go 762:  not Exist, ignore & continue .
2021/01/26 12:00:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:00:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:00:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:00:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:00:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:00:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:00:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:00:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:00:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:00:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:01:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:01:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:02:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:02:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:03:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:03:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:03:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:03:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:03:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:04:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:04:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:04:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:04:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:04:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:05:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:05:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:05:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:05:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:05:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:05:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:05:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:05:24 [W] cypher_util.go 762:  not Exist, ignore & continue .
2021/01/26 12:05:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:05:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:05:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:05:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:05:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:05:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:05:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:05:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:05:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:05:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:05:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:05:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:06:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:06:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:06:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:06:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:06:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:06:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:06:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:06:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:06:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:06:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:06:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:06:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:07:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:07:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:08:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:08:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:08:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:08:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:09:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:09:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:09:34 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 12:09:34 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:20, stime:'2020-07-17 00:00:00'};
var whereCond = "where starttimestr>='"+param.stime+"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = null;
    try{
        var matchStr = "match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog "+whereCond+") - [:callto*1] -> (:phonenumber)";
        log.debug(22,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


// INPUT:电话号码
// OUTPUT: 人

var getPeopleByPhone = function(){
    var rtn = null;
    
    try{
        var matchStr = [];
        matchStr.push("match ('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog limit 20)");
        matchStr.push("('" + pId + "') <- [:belong*1] - ()");
        matchStr.push("('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber)");
        matchStr.push("('"+getPhoneByPeople.join("','")+"') - [*1] ->(:mobile)");
        matchStr.push("('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog "+whereCond + ") - [:callto*1] -> (:phonenumber)");
        
        log.debug(33,matchStr.join(" union "));
        rtn = odb.mql(matchStr.join(" union ")); 
    } catch(err){
        //log.error(err)
        return [];
    }
    
    return rtn;
}


 OUTPUT = getPeopleByPhone()
2021/01/26 12:09:34 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 12:09:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:09:35 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 12:09:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:10:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:10:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:11:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:11:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:12:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:12:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:13:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:13:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:14:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:14:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:15:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:15:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:15:32 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 12:15:32 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:20, stime:'2020-07-17 00:00:00'};
var whereCond = "where starttimestr>='"+param.stime+"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = null;
    try{
        var matchStr = "match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog "+whereCond+") - [:callto*1] -> (:phonenumber)";
        log.debug(22,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


// INPUT:电话号码
// OUTPUT: 人

var getPeopleByPhone = function(){
    var rtn = null;
    
    try{
        var matchStr = [];
        // 根据人获取号码
        matchStr.push("('" + pId + "') <- [:belong*1] - (:phonenumber)");
        // 根据人的手机获取号码
        matchStr.push("('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber)");
        // 根据通话记录获取号码
        matchStr.push("match ('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog " + whereCond + ")");
        // 根据电话号码获取手机
        matchStr.push("('"+getPhoneByPeople.join("','")+"') - [*1] ->(:mobile)");
        // 根据电话号码和通话记录获取手机
        matchStr.push("('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog " + whereCond + ") - [:callto*1] -> (:phonenumber)");
        
        log.debug(33,matchStr.join(" union "));
        rtn = odb.mql(matchStr.join(" union ")); 
    } catch(err){
        //log.error(err)
        return [];
    }
    
    return rtn;
}


 OUTPUT = getPeopleByPhone()
2021/01/26 12:15:32 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 12:15:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:15:32 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 12:15:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:15:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:15:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:15:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:15:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:15:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:15:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:16:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:16:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:16:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:16:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:16:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:16:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:16:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:16:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:16:44 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 12:16:44 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:20, stime:'2020-07-17 00:00:00'};
var whereCond = "where starttimestr>='"+param.stime+"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = null;
    try{
        var matchStr = "match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog "+whereCond+") - [:callto*1] -> (:phonenumber)";
        log.debug(22,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


// INPUT:电话号码
// OUTPUT: 人

var getPeopleByPhone = function(){
    var rtn = null;
    
    try{
        var matchStr = [];
        // 根据人获取号码
        matchStr.push("('" + pId + "') <- [:belong*1] - (:phonenumber)");
        // 根据人的手机获取号码
        matchStr.push("('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber)");
        // 根据通话记录获取号码
        matchStr.push("match ('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog " + whereCond + ")");
        // 根据电话号码获取手机
        matchStr.push("('"+getPhoneByPeople.join("','")+"') - [*1] ->(:mobile)");
        // 根据电话号码和通话记录获取手机
        matchStr.push("('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog " + whereCond + ") - [:callto*1] -> (:phonenumber)");
        
        log.debug(33,matchStr.join(" union "));
        rtn = odb.mql(matchStr.join(" union ")); 
    } catch(err){
        //log.error(err)
        return [];
    }
    
    return rtn;
}


 OUTPUT = getPeopleByPhone()
2021/01/26 12:16:44 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 12:16:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:16:45 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 12:16:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:16:53 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 12:16:53 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:20, stime:'2020-07-17 00:00:00'};
var whereCond = "where starttimestr>='"+param.stime+"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = null;
    try{
        var matchStr = "match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog "+whereCond+") - [:callto*1] -> (:phonenumber)";
        log.debug(22,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


// INPUT:电话号码
// OUTPUT: 人

var getPeopleByPhone = function(){
    var rtn = null;
    
    try{
        var matchStr = [];
        // 根据人获取号码
        matchStr.push("('" + pId + "') <- [:belong*1] - (:phonenumber)");
        // 根据人的手机获取号码
        matchStr.push("('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber)");
        // 根据通话记录获取号码
        matchStr.push("match ('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog " + whereCond + ")");
        // 根据电话号码获取手机
        matchStr.push("('"+getPhoneByPeople.join("','")+"') - [*1] ->(:mobile)");
        // 根据电话号码和通话记录获取手机
        matchStr.push("('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog " + whereCond + ") - [:callto*1] -> (:phonenumber)");
        
        log.debug(33,matchStr.join(" union "));
        rtn = odb.mql(matchStr.join(" union ")); 
    } catch(err){
        //log.error(err)
        return [];
    }
    
    return rtn;
}


 OUTPUT = getPeopleByPhone()
2021/01/26 12:16:53 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 12:16:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:16:54 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 12:16:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:16:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:17:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:17:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:17:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:17:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:17:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:17:32 [E] modb.go 90: [Parser]: At start: expected Statement: {('perbasisinfo:320911197112273412') <- [:belong*1] - (:phonenumber) union ('perbasisinfo:320911197112273412') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) union match ('') <- [*1] - (:/matrix/action/calllog where starttimestr>='2020-07-17 00:00:00' limit 20) union ('phonenumber:15851047319','phonenumber:15005107680','phonenumber:13270094836','phonenumber:18695220567') - [*1] ->(:mobile) union ('phonenumber:15851047319','phonenumber:15005107680','phonenumber:13270094836','phonenumber:18695220567') <- [:bycall*1] - (:/matrix/action/calllog where starttimestr>='2020-07-17 00:00:00' limit 20) - [:callto*1] -> (:phonenumber)}
"[Parser]" backtrace:
git.wecise.com/wecise/platform/odb.(*Gutil).Parse:query.go:205
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:240
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/web/routers/modb.Mql:modb.go:87
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375
2021/01/26 12:17:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:17:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:17:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:17:55 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 12:17:55 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:20, stime:'2020-07-17 00:00:00'};
var whereCond = "where starttimestr>='"+param.stime+"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = null;
    try{
        var matchStr = "match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog "+whereCond+") - [:callto*1] -> (:phonenumber)";
        log.debug(22,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


// INPUT:电话号码
// OUTPUT: 人

var getPeopleByPhone = function(){
    var rtn = null;
    
    try{
        var matchStr = [];
        // 根据人获取号码
        matchStr.push("match('" + pId + "') <- [:belong*1] - (:phonenumber)");
        // 根据人的手机获取号码
        matchStr.push("('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber)");
        // 根据通话记录获取号码
        matchStr.push("match ('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog " + whereCond + ")");
        // 根据电话号码获取手机
        matchStr.push("('"+getPhoneByPeople.join("','")+"') - [*1] ->(:mobile)");
        // 根据电话号码和通话记录获取手机
        matchStr.push("('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog " + whereCond + ") - [:callto*1] -> (:phonenumber)");
        
        log.debug(33,matchStr.join(" union "));
        rtn = odb.mql(matchStr.join(" union ")); 
    } catch(err){
        //log.error(err)
        return [];
    }
    
    return rtn;
}


 OUTPUT = getPeopleByPhone()
2021/01/26 12:17:55 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 12:17:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:17:56 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 12:17:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:17:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:18:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:18:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:18:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:18:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:18:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:18:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:19:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:19:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:19:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:19:34 [E] modb.go 90: [Parser]:
  After '... enumber) union ': expected [ 	
  ] or Comment or CypherQuery: {match('perbasisinfo:320911197112273412') <- [:belong*1] - (:phonenumber) union ('perbasisinfo:320911197112273412') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) union match ('') <- [*1] - (:/matrix/action/calllog where starttimestr>='2020-07-17 00:00:00' limit 20) union ('phonenumber:13270094836','phonenumber:18695220567','phonenumber:15851047319','phonenumber:15005107680') - [*1] ->(:mobile) union ('phonenumber:13270094836','phonenumber:18695220567','phonenumber:15851047319','phonenumber:15005107680') <- [:bycall*1] - (:/matrix/action/calllog where starttimestr>='2020-07-17 00:00:00' limit 20) - [:callto*1] -> (:phonenumber)}
"[Parser]" backtrace:
git.wecise.com/wecise/platform/odb.(*Gutil).Parse:query.go:205
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:240
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/web/routers/modb.Mql:modb.go:87
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375
2021/01/26 12:19:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:19:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:20:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:20:02 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 12:20:02 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:20, stime:'2020-07-17 00:00:00'};
var whereCond = "where starttimestr>='"+param.stime+"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = null;
    try{
        var matchStr = "match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog "+whereCond+") - [:callto*1] -> (:phonenumber)";
        log.debug(22,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


// INPUT:电话号码
// OUTPUT: 人

var getPeopleByPhone = function(){
    var rtn = null;
    
    try{
        var matchStr = [];
        // 根据人获取号码
        matchStr.push("match('" + pId + "') <- [:belong*1] - (:phonenumber)");
        // 根据人的手机获取号码
        matchStr.push("('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber)");
        // 根据通话记录获取号码
        matchStr.push("('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog " + whereCond + ")");
        // 根据电话号码获取手机
        matchStr.push("('"+getPhoneByPeople.join("','")+"') - [*1] ->(:mobile)");
        // 根据电话号码和通话记录获取手机
        matchStr.push("('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog " + whereCond + ") - [:callto*1] -> (:phonenumber)");
        
        log.debug(33,matchStr.join(" union "));
        rtn = odb.mql(matchStr.join(" union ")); 
    } catch(err){
        //log.error(err)
        return [];
    }
    
    return rtn;
}


 OUTPUT = getPeopleByPhone()
2021/01/26 12:20:02 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 12:20:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:20:03 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 12:20:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:20:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:20:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:20:12 [W] cypher_util.go 762:  not Exist, ignore & continue .
2021/01/26 12:20:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:20:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:20:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:20:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:20:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:20:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:20:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:20:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:20:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:20:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:20:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:20:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:20:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:20:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:20:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:21:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:21:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:21:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:21:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:21:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:21:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:21:27 [W] cypher_util.go 762:  not Exist, ignore & continue .
2021/01/26 12:21:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:21:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:21:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:21:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:22:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:22:02 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 12:22:02 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:20, stime:'2020-03-01 00:00:00'};
var whereCond = "where starttimestr>='"+param.stime+"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = null;
    try{
        var matchStr = "match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog "+whereCond+") - [:callto*1] -> (:phonenumber)";
        log.debug(22,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


// INPUT:电话号码
// OUTPUT: 人

var getPeopleByPhone = function(){
    var rtn = null;
    
    try{
        var matchStr = [];
        // 根据人获取号码
        matchStr.push("match('" + pId + "') <- [:belong*1] - (:phonenumber)");
        // 根据人的手机获取号码
        matchStr.push("('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber)");
        // 根据通话记录获取号码
        matchStr.push("('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog " + whereCond + ")");
        // 根据电话号码获取手机
        matchStr.push("('"+getPhoneByPeople.join("','")+"') - [*1] ->(:mobile)");
        // 根据电话号码和通话记录获取手机
        matchStr.push("('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog " + whereCond + ") - [:callto*1] -> (:phonenumber)");
        
        log.debug(33,matchStr.join(" union "));
        rtn = odb.mql(matchStr.join(" union ")); 
    } catch(err){
        //log.error(err)
        return [];
    }
    
    return rtn;
}


 OUTPUT = getPeopleByPhone()
2021/01/26 12:22:03 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 12:22:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:22:03 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 12:22:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:22:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:22:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:22:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:22:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:22:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:22:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:22:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:22:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:22:27 [W] cypher_util.go 762:  not Exist, ignore & continue .
2021/01/26 12:22:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:22:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:23:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:23:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:23:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:23:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:23:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:24:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:24:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:24:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:24:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:24:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:25:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:25:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:25:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:25:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:26:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:26:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:26:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:26:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:26:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:26:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:26:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:26:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:27:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:27:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:27:24 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 12:27:24 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:20, stime:'2020-03-01 00:00:00'};
var whereCond = "where starttimestr>='"+param.stime+"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = null;
    try{
        //var matchStr = "match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog "+whereCond+") - [:callto*1] -> (:phonenumber)";
        var matchStr = "match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog "+whereCond+")";
        log.debug(22,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


// INPUT:电话号码
// OUTPUT: 人

var getPeopleByPhone = function(){
    var rtn = null;
    
    try{
        var matchStr = [];
        // 根据人获取号码
        matchStr.push("match('" + pId + "') <- [:belong*1] - (:phonenumber)");
        // 根据人的手机获取号码
        matchStr.push("('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber)");
        // 根据通话记录获取号码
        matchStr.push("('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog " + whereCond + ")");
        // 根据电话号码获取手机
        matchStr.push("('"+getPhoneByPeople.join("','")+"') - [*1] ->(:mobile)");
        // 根据电话号码和通话记录获取手机
        matchStr.push("('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog " + whereCond + ") - [:callto*1] -> (:phonenumber)");
        
        log.debug(33,matchStr.join(" union "));
        rtn = odb.mql(matchStr.join(" union ")); 
    } catch(err){
        //log.error(err)
        return [];
    }
    
    return rtn;
}


 OUTPUT = getPeopleByPhone()
2021/01/26 12:27:24 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 12:27:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:27:24 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 12:27:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:27:31 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 12:27:31 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:20, stime:'2020-03-01 00:00:00'};
var whereCond = "where starttimestr>='"+param.stime+"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = null;
    try{
        //var matchStr = "match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog "+whereCond+") - [:callto*1] -> (:phonenumber)";
        var matchStr = "match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog "+whereCond+")";
        log.debug(22,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


// INPUT:电话号码
// OUTPUT: 人

var getPeopleByPhone = function(){
    var rtn = null;
    
    try{
        var matchStr = [];
        // 根据人获取号码
        matchStr.push("match('" + pId + "') <- [:belong*1] - (:phonenumber)");
        // 根据人的手机获取号码
        matchStr.push("('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber)");
        // 根据通话记录获取号码
        matchStr.push("('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog " + whereCond + ")");
        // 根据电话号码获取手机
        matchStr.push("('"+getPhoneByPeople.join("','")+"') - [*1] ->(:mobile)");
        // 根据电话号码和通话记录获取手机
        matchStr.push("('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog " + whereCond + ") - [:callto*1] -> (:phonenumber)");
        
        log.debug(33,matchStr.join(" union "));
        rtn = odb.mql(matchStr.join(" union ")); 
    } catch(err){
        //log.error(err)
        return [];
    }
    
    return rtn;
}


 OUTPUT = getPeopleByPhone()
2021/01/26 12:27:31 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 12:27:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:27:32 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 12:27:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:27:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:27:50 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 12:27:50 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:20, stime:'2020-03-01 00:00:00'};
var whereCond = "where starttimestr>='"+param.stime+"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = null;
    try{
        //var matchStr = "match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog "+whereCond+") - [:callto*1] -> (:phonenumber)";
        var matchStr = "match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog "+whereCond+")";
        log.debug(22,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


// INPUT:电话号码
// OUTPUT: 人

var getPeopleByPhone = function(){
    var rtn = null;
    
    try{
        var matchStr = [];
        // 根据人获取号码
        matchStr.push("match('" + pId + "') <- [:belong*1] - (:phonenumber)");
        // 根据人的手机获取号码
        matchStr.push("('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber)");
        // 根据通话记录获取号码
        matchStr.push("('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog " + whereCond + ")");
        // 根据电话号码获取手机
        matchStr.push("('"+getPhoneByPeople.join("','")+"') - [*1] ->(:mobile)");
        // 根据电话号码和通话记录获取手机
        matchStr.push("('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog " + whereCond + ")");
        
        log.debug(33,matchStr.join(" union "));
        rtn = odb.mql(matchStr.join(" union ")); 
    } catch(err){
        //log.error(err)
        return [];
    }
    
    return rtn;
}


 OUTPUT = getPeopleByPhone()
2021/01/26 12:27:50 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 12:27:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:27:51 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 12:27:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:27:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:27:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:28:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:28:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:28:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:28:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:28:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:28:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:28:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:28:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:28:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:28:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:28:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:28:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:29:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:29:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:29:14 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 12:29:14 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:20, stime:'2020-03-01 00:00:00'};
var whereCond = "where starttimestr>='"+param.stime+"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = null;
    try{
        //var matchStr = "match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog "+whereCond+") - [:callto*1] -> (:phonenumber)";
        var matchStr = "match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog "+whereCond+")";
        log.debug(22,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


// INPUT:电话号码
// OUTPUT: 人

var getPeopleByPhone = function(){
    var rtn = null;
    
    try{
        var matchStr = [];
        // 根据人获取号码
        matchStr.push("match('" + pId + "') <- [:belong*1] - (:phonenumber)");
        // 根据人的手机获取号码
        matchStr.push("('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber)");
        // 根据通话记录获取号码
        matchStr.push("('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog " + whereCond + ")");
        // 根据电话号码获取手机
        matchStr.push("('"+getPhoneByPeople.join("','")+"') - [*1] ->(:mobile)");
        // 根据电话号码和通话记录获取手机
        matchStr.push("('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog " + whereCond + ")");
        
        log.debug(33,matchStr.join(" union "));
        rtn = odb.mql(matchStr.join(" union ")); 
    } catch(err){
        //log.error(err)
        return [];
    }
    
    return rtn;
}


 OUTPUT = getPeopleByPhone()
2021/01/26 12:29:14 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 12:29:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:29:15 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 12:29:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:29:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:30:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:30:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:30:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:30:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:30:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:30:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:30:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:30:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:30:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:30:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:30:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:30:34 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 12:30:34 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:20, stime:'2020-03-01 00:00:00'};
var whereCond = "where starttimestr>='"+param.stime+"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = null;
    try{
        //var matchStr = "match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog "+whereCond+") - [:callto*1] -> (:phonenumber)";
        var matchStr = "match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog "+whereCond+")";
        log.debug(22,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


// INPUT:电话号码
// OUTPUT: 人

var getPeopleByPhone = function(){
    var rtn = null;
    
    try{
        var matchStr = [];
        // 根据人获取号码
        matchStr.push("match('" + pId + "') <- [:belong*1] - (:phonenumber)");
        // 根据人的手机获取号码
        matchStr.push("('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber)");
        // 根据通话记录获取号码
        matchStr.push("('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog " + whereCond + ")");
        // 根据电话号码获取手机
        matchStr.push("('"+getPhoneByPeople.join("','")+"') - [*1] ->(:mobile)");
        // 根据电话号码和通话记录获取手机
        matchStr.push("('"+getPhoneByPeople.join("','")+"') <- [*1] - (:/matrix/action/calllog " + whereCond + ")");
        
        log.debug(33,matchStr.join(" union "));
        rtn = odb.mql(matchStr.join(" union ")); 
    } catch(err){
        //log.error(err)
        return [];
    }
    
    return rtn;
}


 OUTPUT = getPeopleByPhone()
2021/01/26 12:30:34 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 12:30:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:30:35 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 12:30:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:30:40 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 12:30:40 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:20, stime:'2020-03-01 00:00:00'};
var whereCond = "where starttimestr>='"+param.stime+"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = null;
    try{
        //var matchStr = "match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog "+whereCond+") - [:callto*1] -> (:phonenumber)";
        var matchStr = "match ('"+getPhoneByPeople.join("','")+"') <- [*1] - (:/matrix/action/calllog "+whereCond+")";
        log.debug(22,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


// INPUT:电话号码
// OUTPUT: 人

var getPeopleByPhone = function(){
    var rtn = null;
    
    try{
        var matchStr = [];
        // 根据人获取号码
        matchStr.push("match('" + pId + "') <- [:belong*1] - (:phonenumber)");
        // 根据人的手机获取号码
        matchStr.push("('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber)");
        // 根据通话记录获取号码
        matchStr.push("('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog " + whereCond + ")");
        // 根据电话号码获取手机
        matchStr.push("('"+getPhoneByPeople.join("','")+"') - [*1] ->(:mobile)");
        // 根据电话号码和通话记录获取手机
        matchStr.push("('"+getPhoneByPeople.join("','")+"') <- [*1] - (:/matrix/action/calllog " + whereCond + ")");
        
        log.debug(33,matchStr.join(" union "));
        rtn = odb.mql(matchStr.join(" union ")); 
    } catch(err){
        //log.error(err)
        return [];
    }
    
    return rtn;
}


 OUTPUT = getPeopleByPhone()
2021/01/26 12:30:40 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 12:30:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:30:41 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 12:30:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:30:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:30:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:30:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:30:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:30:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:30:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:31:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:31:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:31:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:32:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:32:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:32:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:32:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:32:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:32:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:32:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:32:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:33:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:33:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:33:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:33:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:33:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:33:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:33:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:33:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:34:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:34:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:34:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:34:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:34:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:34:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:34:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:34:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:34:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:34:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:35:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:35:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:35:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:35:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:35:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:36:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:36:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:36:37 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 12:36:37 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:20, stime:'2020-03-01 00:00:00'};
var whereCond = "where starttimestr>='"+param.stime+"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = null;
    try{
        //var matchStr = "match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog "+whereCond+") - [:callto*1] -> (:phonenumber)";
        var matchStr = "match ('"+getPhoneByPeople.join("','")+"') <- [*1] - (:/matrix/action/calllog "+whereCond+")";
        log.debug(22,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


// INPUT:电话号码
// OUTPUT: 人

var getPeopleByPhone = function(){
    var rtn = null;
    log.error(getPhoneByPeople)
    try{
        var matchStr = [];
        // 根据人获取号码
        matchStr.push("match('" + pId + "') <- [:belong*1] - (:phonenumber)");
        // 根据人的手机获取号码
        matchStr.push("('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber)");
        // 根据通话记录获取号码
        matchStr.push("('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog " + whereCond + ")");
        // 根据电话号码获取手机
        matchStr.push("('"+getPhoneByPeople.join("','")+"') - [*1] ->(:mobile)");
        // 根据电话号码和通话记录获取手机
        matchStr.push("('"+getPhoneByPeople.join("','")+"') <- [*1] - (:/matrix/action/calllog " + whereCond + ")");
        
        log.debug(33,matchStr.join(" union "));
        rtn = odb.mql(matchStr.join(" union ")); 
    } catch(err){
        //log.error(err)
        return [];
    }
    
    return rtn;
}


 OUTPUT = getPeopleByPhone()
2021/01/26 12:36:37 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 12:36:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:36:38 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 12:36:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:36:39 [E] wjs.go 149: /bizApi/hdim/test/test_sameMobileRecord.js:65:5:  [phonenumber:18695220567 phonenumber:15851047319 phonenumber:15005107680 phonenumber:13270094836]
2021/01/26 12:36:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:36:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:36:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:37:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:37:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:37:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:37:30 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 12:37:30 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:20, stime:'2020-03-01 00:00:00'};
var whereCond = "where starttimestr>='"+param.stime+"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = null;
    try{
        //var matchStr = "match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog "+whereCond+") - [:callto*1] -> (:phonenumber)";
        var matchStr = "match ('"+getPhoneByPeople.join("','")+"') <- [*1] - (:/matrix/action/calllog "+whereCond+")";
        log.debug(22,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


// INPUT:电话号码
// OUTPUT: 人

var getPeopleByPhone = function(){
    var rtn = null;
    log.debug(getPhoneByPeople)
    try{
        var matchStr = [];
        // 根据人获取号码
        matchStr.push("match('" + pId + "') <- [:belong*1] - (:phonenumber)");
        // 根据人的手机获取号码
        matchStr.push("('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber)");
        // 根据通话记录获取号码
        matchStr.push("('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog " + whereCond + ")");
        // 根据电话号码获取手机
        matchStr.push("('"+getPhoneByPeople.join("','")+"') - [*1] ->(:mobile)");
        // 根据电话号码和通话记录获取手机
        matchStr.push("('"+getPhoneByPeople.join("','")+"') <- [*1] - (:/matrix/action/calllog " + whereCond + ")");
        
        log.debug(33,matchStr.join(" union "));
        rtn = odb.mql(matchStr.join(" union ")); 
    } catch(err){
        //log.error(err)
        return [];
    }
    
    return rtn;
}


 OUTPUT = getPeopleByPhone()
2021/01/26 12:37:30 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 12:37:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:37:30 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 12:37:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:37:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:37:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:37:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:38:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:38:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:38:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:38:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:38:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:39:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:39:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:39:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:39:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:39:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:40:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:40:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:41:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:41:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:41:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:41:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:41:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:41:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:41:58 [E] modb.go 90: [UnKnown]: query Timed out!
"[UnKnown]" backtrace:
git.wecise.com/wecise/platform/odb.(*CTernary).RelationRangeLoop:cypher_ternary.go:541
git.wecise.com/wecise/platform/odb.(*CTernary).SubjectEvaluateAndSpread:cypher_ternary.go:368
git.wecise.com/wecise/platform/odb.(*CTernary).EvaluateAndSpread:cypher_ternary.go:223
git.wecise.com/wecise/platform/odb.(*CPhase).Evaluate:cypher_query.go:335
git.wecise.com/wecise/platform/odb.(*Gutil).CypherMatchQuery:cypher_query.go:94
git.wecise.com/wecise/platform/odb.(*MqlSemantics).Cypher:cypher.go:1318
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:275
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/web/routers/modb.Mql:modb.go:87
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375
2021/01/26 12:41:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:42:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:42:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:42:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:42:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:42:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:42:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:43:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:43:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:44:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:44:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:44:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:44:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:45:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:45:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:46:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:46:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:47:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:47:04 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 12:47:04 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:20, stime:'2020-03-01 00:00:00'};
var whereCond = "where starttimestr>='"+param.stime+"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = null;
    try{
        //var matchStr = "match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog "+whereCond+") - [:callto*1] -> (:phonenumber)";
        var matchStr = "match ('"+getPhoneByPeople.join("','")+"') <- [*1] - (:/matrix/action/calllog "+whereCond+")";
        log.debug(22,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
                
        var mql = "select forphone,tophone from /matrix/action/calllog " + whereCond;
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push(v.forphone);
            rtn.push(v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


// INPUT:电话号码
// OUTPUT: 人

var getPeopleByPhone = function(){
    var rtn = null;
    log.debug(getPhoneByPeople)
    try{
        var matchStr = [];
        // 根据人获取号码
        matchStr.push("match('" + pId + "') <- [:belong*1] - (:phonenumber)");
        // 根据人的手机获取号码
        matchStr.push("('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber)");
        // 根据通话记录获取号码
        matchStr.push("('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog " + whereCond + ")");
        // 根据电话号码获取手机
        matchStr.push("('"+getPhoneByPeople.join("','")+"') - [*1] ->(:mobile)");
        // 根据电话号码和通话记录获取手机
        matchStr.push("('"+getPhoneByPeople.join("','")+"') <- [*1] - (:/matrix/action/calllog " + whereCond + ")");
        
        log.debug(33,matchStr.join(" union "));
        rtn = odb.mql(matchStr.join(" union ")); 
    } catch(err){
        //log.error(err)
        return [];
    }
    
    return rtn;
}


 OUTPUT = getPeopleByPhone()
2021/01/26 12:47:04 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 12:47:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:47:05 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 12:47:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:47:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:47:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:47:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:47:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:47:20 [W] cypher_util.go 762: 95599 not Exist, ignore & continue .
2021/01/26 12:47:20 [W] cypher_util.go 762: 15806219393 not Exist, ignore & continue .
2021/01/26 12:47:20 [W] cypher_util.go 762: 18361157818 not Exist, ignore & continue .
2021/01/26 12:47:20 [W] cypher_util.go 762: 13912537418 not Exist, ignore & continue .
2021/01/26 12:47:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:47:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:47:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:47:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:47:56 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_sameMobileRecord.js PUT
2021/01/26 12:47:56 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:20, stime:'2020-03-01 00:00:00'};
var whereCond = "where starttimestr>='"+param.stime+"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = null;
    try{
        //var matchStr = "match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog "+whereCond+") - [:callto*1] -> (:phonenumber)";
        var matchStr = "match ('"+getPhoneByPeople.join("','")+"') <- [*1] - (:/matrix/action/calllog "+whereCond+")";
        log.debug(22,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
                
        var mql = "select forphone,tophone from /matrix/action/calllog " + whereCond;
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.forphone);
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


// INPUT:电话号码
// OUTPUT: 人

var getPeopleByPhone = function(){
    var rtn = null;
    log.debug(getPhoneByPeople)
    try{
        var matchStr = [];
        // 根据人获取号码
        matchStr.push("match('" + pId + "') <- [:belong*1] - (:phonenumber)");
        // 根据人的手机获取号码
        matchStr.push("('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber)");
        // 根据通话记录获取号码
        matchStr.push("('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog " + whereCond + ")");
        // 根据电话号码获取手机
        matchStr.push("('"+getPhoneByPeople.join("','")+"') - [*1] ->(:mobile)");
        // 根据电话号码和通话记录获取手机
        matchStr.push("('"+getPhoneByPeople.join("','")+"') <- [*1] - (:/matrix/action/calllog " + whereCond + ")");
        
        log.debug(33,matchStr.join(" union "));
        rtn = odb.mql(matchStr.join(" union ")); 
    } catch(err){
        //log.error(err)
        return [];
    }
    
    return rtn;
}


 OUTPUT = getPeopleByPhone()
2021/01/26 12:47:56 [I] fs.go 77: Write attr: {"remark":"","ctime":1611547733340,"author":"admin"}
2021/01/26 12:47:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:47:57 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_sameMobileRecord.js POST
2021/01/26 12:48:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:48:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:48:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:48:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:48:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:48:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:48:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:49:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:49:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:50:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:50:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:51:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:51:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:52:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:52:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:53:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:53:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:54:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:54:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:55:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:55:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:56:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:56:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:57:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:57:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:58:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:58:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:58:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:58:48 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 12:58:48 [I] fs.go 56: Write data: null
2021/01/26 12:58:49 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 12:58:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:58:50 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 12:58:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:58:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:58:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:58:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:58:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:58:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:58:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:58:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:58:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:59:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:59:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:59:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:59:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:59:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 12:59:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:00:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:00:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:01:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:01:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:01:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:01:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:01:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:02:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:02:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:03:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:03:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:04:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:04:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:05:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:05:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:06:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:06:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:07:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:07:11 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 13:07:11 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:20, stime:'2020-03-01 00:00:00'};
var whereCond = "where starttimestr>='"+param.stime+"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = null;
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/perbasisinfo:/,"");
        });
        var mql = "select forphone,tophone from /matrix/action/calllog " + whereCond + " and forphone in ('"+forphones.join("','")+"')";
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.forphone);
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


// INPUT:电话号码
// OUTPUT: 人

var getPeopleByPhone = function(){
    var rtn = null;
    log.debug(getPhoneByPeople)
    try{
        var matchStr = [];
        // 根据人获取号码
        matchStr.push("match('" + pId + "') <- [:belong*1] - (:phonenumber)");
        // 根据人的手机获取号码
        matchStr.push("('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber)");
        // 根据通话记录获取号码
        matchStr.push("('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog " + whereCond + ")");
        // 根据电话号码获取手机
        matchStr.push("('"+getPhoneByPeople.join("','")+"') - [*1] ->(:mobile)");
        // 根据电话号码和通话记录获取手机
        matchStr.push("('"+getPhoneByPeople.join("','")+"') <- [*1] - (:/matrix/action/calllog " + whereCond + ")");
        
        log.debug(33,matchStr.join(" union "));
        rtn = odb.mql(matchStr.join(" union ")); 
    } catch(err){
        //log.error(err)
        return [];
    }
    
    return rtn;
}


 OUTPUT = getPeopleByPhone()
2021/01/26 13:07:11 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 13:07:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:07:12 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 13:07:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:07:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:07:34 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 13:07:34 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:20, stime:'2020-03-01 00:00:00'};
var whereCond = "where starttimestr>='"+param.stime+"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = null;
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/perbasisinfo:/,"");
        });
        var mql = "select forphone,tophone from /matrix/action/calllog " + whereCond + " and forphone in ('"+forphones.join("','")+"')";
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.forphone);
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();





 OUTPUT = getPhoneByCalllog
2021/01/26 13:07:34 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 13:07:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:07:34 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 13:07:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:07:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:07:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:07:50 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 13:07:50 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:20, stime:'2020-03-01 00:00:00'};
var whereCond = "where starttimestr>='"+param.stime+"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = null;
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/perbasisinfo:/,"");
        });
        var mql = "select forphone,tophone from /matrix/action/calllog " + whereCond + " and forphone in ('"+forphones.join("','")+"')";
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.forphone);
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();





 OUTPUT = getPhoneByCalllog
2021/01/26 13:07:50 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 13:07:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:07:50 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 13:07:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:08:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:08:07 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 13:08:07 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:20, stime:'2020-03-01 00:00:00'};
var whereCond = "where starttimestr>='"+param.stime+"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = null;
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/perbasisinfo:/,"");
        });
        var mql = "select forphone,tophone from /matrix/action/calllog " + whereCond + " and forphone in ('"+forphones.join("','")+"')";
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.forphone);
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();





 OUTPUT = getPhoneByCalllog
2021/01/26 13:08:07 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 13:08:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:08:08 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 13:08:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:08:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:08:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:08:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:08:28 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 13:08:28 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:20, stime:'2020-03-01 00:00:00'};
var whereCond = "where starttimestr>='"+param.stime+"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = null;
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select forphone,tophone from /matrix/action/calllog " + whereCond + " and forphone in ('"+forphones.join("','")+"')";
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.forphone);
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();





 OUTPUT = getPhoneByCalllog
2021/01/26 13:08:28 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 13:08:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:08:29 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 13:08:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:08:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:08:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:09:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:09:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:10:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:10:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:11:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:11:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:11:24 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 13:11:24 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:20, stime:'2020-03-01 00:00:00'};
var whereCond = " starttimestr>='"+param.stime+"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = null;
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select forphone,tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + ") and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.forphone);
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();





 OUTPUT = getPhoneByCalllog
2021/01/26 13:11:24 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 13:11:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:11:25 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 13:11:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:11:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:11:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:11:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:11:37 [E] modb.go 90: [Parser]:
  After '...  phonenumber
  
  
  ': expected [ 	
  ] or Comment or Dot or BucketExp or As or Comma or CypherCtrl or CypherOP or end of text: {match ('perbasisinfo:320911197112273412') <- [:belong*1] - () return phonenumber union
   ('perbasisinfo:320911197112273412') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) return phonenumber
  
  
  select forphone,tophone from /matrix/action/calllog where forphone in ('15005107680','13270094836','18695220567','15851047319) and  starttimestr>='2020-03-01 00:00:00' limit 20}
"[Parser]" backtrace:
git.wecise.com/wecise/platform/odb.(*Gutil).Parse:query.go:205
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:240
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/web/routers/modb.Mql:modb.go:87
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375
2021/01/26 13:11:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:11:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:11:40 [E] modb.go 90: [Parser]: After '... starttimestr>='': expected Space or Comma or Rparen: {select forphone,tophone from /matrix/action/calllog where forphone in ('15005107680','13270094836','18695220567','15851047319) and  starttimestr>='2020-03-01 00:00:00' limit 20}
"[Parser]" backtrace:
git.wecise.com/wecise/platform/odb.(*Gutil).Parse:query.go:205
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:240
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/web/routers/modb.Mql:modb.go:87
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375
2021/01/26 13:11:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:11:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:12:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:12:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:12:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:12:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:12:17 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 13:12:17 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:20, stime:'2020-03-01 00:00:00'};
var whereCond = " starttimestr>='"+param.stime+"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = null;
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select forphone,tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.forphone);
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();





 OUTPUT = getPhoneByCalllog
2021/01/26 13:12:17 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 13:12:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:12:17 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 13:12:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:12:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:12:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:12:30 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 13:12:30 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:20, stime:'2020-03-01 00:00:00'};
var whereCond = " starttimestr>='"+param.stime+"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = null;
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select forphone,tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.forphone);
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();





 OUTPUT = getPhoneByCalllog
2021/01/26 13:12:30 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 13:12:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:12:31 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 13:12:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:12:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:12:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:12:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:12:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:12:55 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 13:12:55 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:20, stime:'2020-03-01 00:00:00'};
var whereCond = " starttimestr>='"+param.stime+"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = null;
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select forphone,tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.forphone);
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        log.debug(rtn)
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();





 OUTPUT = getPhoneByCalllog
2021/01/26 13:12:55 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 13:12:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:12:56 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 13:12:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:13:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:13:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:13:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:13:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:13:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:13:19 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 13:13:19 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:20, stime:'2020-03-01 00:00:00'};
var whereCond = " starttimestr>='"+param.stime+"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select forphone,tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.forphone);
            rtn.push("phonenumber:"+v.tophone);
        })
        _.uniq(rtn);
        log.debug(rtn)
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();





 OUTPUT = getPhoneByCalllog
2021/01/26 13:13:19 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 13:13:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:13:21 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 13:13:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:13:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:13:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:13:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:13:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:14:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:14:05 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 13:14:05 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:20, stime:'2020-03-01 00:00:00'};
var whereCond = " starttimestr>='"+param.stime+"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select forphone,tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.forphone);
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        log.debug(rtn)
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();





 OUTPUT = getPhoneByCalllog
2021/01/26 13:14:05 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 13:14:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:14:06 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 13:14:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:14:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:14:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:14:22 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 13:14:22 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:20, stime:'2020-03-01 00:00:00'};
var whereCond = " starttimestr>='"+param.stime+"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select forphone,tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.forphone);
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();





 OUTPUT = getPhoneByCalllog
2021/01/26 13:14:22 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 13:14:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:14:23 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 13:14:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:15:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:15:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:16:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:16:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:17:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:17:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:18:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:18:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:19:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:19:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:19:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:19:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:19:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:19:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:19:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:19:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:20:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:20:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:20:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:20:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:20:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:20:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:21:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:21:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:21:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:21:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:21:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:21:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:21:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:22:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:22:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:22:29 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 13:22:29 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:20, stime:'2020-03-01 00:00:00'};
var whereCond = " starttimestr>='"+param.stime+"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select forphone,tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.forphone);
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn = null;
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push(" ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push(" ('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog where "+whereCond+" )");
        
        
    }catch(err){
        
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = getPhoneByCalllog
2021/01/26 13:22:29 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 13:22:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:22:30 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 13:22:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:22:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:22:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:22:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:23:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:23:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:24:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:24:01 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 13:24:01 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:20, stime:'2020-03-01 00:00:00'};
var whereCond = " starttimestr>='"+param.stime+"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select forphone,tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.forphone);
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn = null;
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push(" ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push(" ('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push(" (:perbasisinfo) <- [*] - ('"+getPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        
        rtn = odb.mql(matchStr);
    }catch(err){
        
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 13:24:01 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 13:24:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:24:02 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 13:24:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:24:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:24:35 [I] home.go 65: Go to user home page: /home
2021/01/26 13:24:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:24:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:24:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:24:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:24:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:24:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:24:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:24:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:24:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:24:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:24:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:24:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:24:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:24:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:24:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:24:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:24:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:24:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:24:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:24:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:24:41 [W] query_util.go 869: can't find class for id[biz:数字国网] , search subdix of class!
2021/01/26 13:24:41 [W] cypher_util.go 762: biz:数字国网 not Exist, ignore & continue .
2021/01/26 13:24:41 [W] query_util.go 869: can't find class for id[biz:开发测试] , search subdix of class!
2021/01/26 13:24:41 [W] cypher_util.go 762: biz:开发测试 not Exist, ignore & continue .
2021/01/26 13:24:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:24:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:24:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:24:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:25:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:25:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:25:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:25:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:25:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:25:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:25:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:25:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:25:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:25:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:25:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:25:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:25:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:25:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:25:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:25:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:25:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:25:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:25:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:25:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:25:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:26:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:26:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:26:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:26:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:26:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:26:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:26:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:26:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:26:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:26:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:26:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:26:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:26:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:26:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:26:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:26:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:26:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:26:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:26:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:26:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:26:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:26:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:26:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:26:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:26:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:26:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:26:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:26:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:26:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:26:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:26:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:26:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:26:27 [W] query_util.go 869: can't find class for id[biz:数字国网] , search subdix of class!
2021/01/26 13:26:27 [W] cypher_util.go 762: biz:数字国网 not Exist, ignore & continue .
2021/01/26 13:26:27 [W] query_util.go 869: can't find class for id[biz:开发测试] , search subdix of class!
2021/01/26 13:26:27 [W] cypher_util.go 762: biz:开发测试 not Exist, ignore & continue .
2021/01/26 13:26:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:26:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:26:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:26:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:26:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:26:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:26:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:26:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:27:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:27:04 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 13:27:04 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:20, stime:'2020-03-01 00:00:00'};
var whereCond = " starttimestr>='"+param.stime+"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select forphone,tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.forphone);
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn = null;
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push(" ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push(" ('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push(" (:perbasisinfo) <- [*] - ('"+getPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        
        rtn = odb.mql(matchStr.join(" union "));
    }catch(err){
        
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 13:27:04 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 13:27:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:27:05 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 13:27:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:27:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:27:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:27:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:27:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:27:27 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 13:27:27 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:20, stime:'2020-03-01 00:00:00'};
var whereCond = " starttimestr>='"+param.stime+"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select forphone,tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.forphone);
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn = null;
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push(" ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push(" ('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push(" (:perbasisinfo) <- [*] - ('"+getPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        log.debug(matchStr.join(" union "))
        rtn = odb.mql(matchStr.join(" union "));
    }catch(err){
        
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 13:27:27 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 13:27:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:27:28 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 13:27:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:27:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:27:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:27:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:27:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:27:40 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 13:27:40 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:20, stime:'2020-03-01 00:00:00'};
var whereCond = " starttimestr>='"+param.stime+"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select forphone,tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.forphone);
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn = null;
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push(" ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push(" ('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push(" (:perbasisinfo) <- [*] - ('"+getPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        log.debug(333,matchStr.join(" union "))
        rtn = odb.mql(matchStr.join(" union "));
    }catch(err){
        
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 13:27:40 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 13:27:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:27:41 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 13:27:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:27:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:27:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:27:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:27:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:27:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:28:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:28:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:28:17 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 13:28:17 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:20, stime:'2020-03-01 00:00:00'};
var whereCond = " starttimestr>='"+param.stime+"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select forphone,tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.forphone);
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn = null;
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push(" ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push(" ('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push(" (:perbasisinfo) <- [*] - ('"+getPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        log.debug(333,matchStr.join(" union "))
        rtn = odb.mql(matchStr.join(" union "));
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 13:28:17 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 13:28:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:28:18 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 13:28:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:28:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:28:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:28:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:28:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:28:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:28:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:28:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:29:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:29:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:29:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:29:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:29:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:29:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:29:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:29:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:30:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:30:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:30:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:30:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:30:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:30:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:30:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:30:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:30:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:30:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:30:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:31:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:31:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:31:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:31:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:31:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:31:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:31:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:32:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:32:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:32:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:32:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:32:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:32:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:32:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:32:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:32:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:33:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:33:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:34:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:34:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:34:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:35:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:35:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:35:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:35:55 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 13:35:55 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:20, stime:'2020-03-01 00:00:00'};
var whereCond = " starttimestr>='"+param.stime+"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select forphone,tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.forphone);
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn = null;
    var template = [{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }];
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(v);
            _.extend(template[0].graph.nodes,v.data[0].graph.Nodes);
            _.extend(template[0].graph.edges,v.data[0].graph.Edges);
        })
        return template;
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 13:35:55 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 13:35:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:35:56 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 13:36:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:36:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:36:24 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 13:36:24 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:20, stime:'2020-03-01 00:00:00'};
var whereCond = " starttimestr>='"+param.stime+"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select forphone,tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.forphone);
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  [{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }];
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(v);
            _.extend(rtn[0].graph.nodes,v.data[0].graph.Nodes);
            _.extend(rtn[0].graph.edges,v.data[0].graph.Edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 13:36:24 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 13:36:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:36:25 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 13:36:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:36:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:36:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:36:30 [E] wjs.go 149: /bizApi/hdim/test/test_diagnosis_mobile.js:83:9:  map[message:Cannot access member '0' of undefined]
2021/01/26 13:36:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:37:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:37:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:38:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:38:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:39:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:39:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:39:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:39:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:39:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:39:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:39:56 [E] wjs.go 149: /bizApi/hdim/test/test_diagnosis_mobile.js:83:9:  map[message:Cannot access member '0' of undefined]
2021/01/26 13:40:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:40:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:40:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:40:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:40:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:40:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:40:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:40:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:40:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:40:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:40:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:40:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:40:07 [E] wjs.go 149: /bizApi/hdim/test/test_diagnosis_mobile.js:83:9:  map[message:Cannot access member '0' of undefined]
2021/01/26 13:40:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:40:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:40:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:40:38 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 13:40:38 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:20, stime:'2020-03-01 00:00:00'};
var whereCond = " starttimestr>='"+param.stime+"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select forphone,tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.forphone);
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  [{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }];
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(_.now(),v);
            _.extend(rtn[0].graph.nodes,v.data[0].graph.Nodes);
            _.extend(rtn[0].graph.edges,v.data[0].graph.Edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 13:40:38 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 13:40:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:40:38 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 13:40:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:40:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:40:44 [E] wjs.go 149: /bizApi/hdim/test/test_diagnosis_mobile.js:83:9:  map[message:Cannot access member '0' of undefined]
2021/01/26 13:40:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:41:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:41:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:42:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:42:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:42:05 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 13:42:05 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:20, stime:'2020-03-01 00:00:00'};
var whereCond = " starttimestr>='"+param.stime+"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select forphone,tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.forphone);
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  [{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }];
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(_.now(),v);
            _.concat(rtn[0].graph.nodes,tmp.data[0].graph.Nodes);
            _.extend(rtn[0].graph.edges,tmp.data[0].graph.Edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 13:42:05 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 13:42:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:42:05 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 13:42:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:42:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:42:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:42:06 [E] wjs.go 149: /bizApi/hdim/test/test_diagnosis_mobile.js:83:9:  map[message:'concat' is not a function]
2021/01/26 13:42:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:42:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:42:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:42:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:42:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:42:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:42:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:42:16 [E] wjs.go 149: /bizApi/hdim/test/test_diagnosis_mobile.js:83:9:  map[message:'concat' is not a function]
2021/01/26 13:42:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:42:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:42:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:42:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:42:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:42:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:42:34 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 13:42:34 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:20, stime:'2020-03-01 00:00:00'};
var whereCond = " starttimestr>='"+param.stime+"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select forphone,tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.forphone);
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  [{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }];
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(_.now(),v);
            _.concat(rtn[0].graph.nodes,tmp.data[0].graph.Nodes);
            _.concat(rtn[0].graph.edges,tmp.data[0].graph.Edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 13:42:34 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 13:42:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:42:35 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 13:42:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:42:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:42:38 [E] wjs.go 149: /bizApi/hdim/test/test_diagnosis_mobile.js:83:9:  map[message:'concat' is not a function]
2021/01/26 13:42:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:42:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:43:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:43:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:43:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:43:11 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 13:43:11 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:20, stime:'2020-03-01 00:00:00'};
var whereCond = " starttimestr>='"+param.stime+"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select forphone,tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.forphone);
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  [{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }];
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(_.now(),JSON.stringify(tmp));
            _.concat(rtn[0].graph.nodes,tmp.data[0].graph.Nodes);
            _.concat(rtn[0].graph.edges,tmp.data[0].graph.Edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 13:43:11 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 13:43:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:43:12 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 13:43:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:43:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:43:14 [E] wjs.go 149: /bizApi/hdim/test/test_diagnosis_mobile.js:83:9:  map[message:'concat' is not a function]
2021/01/26 13:43:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:43:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:43:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:43:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:43:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:43:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:43:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:43:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:43:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:43:48 [E] wjs.go 149: /bizApi/hdim/test/test_diagnosis_mobile.js:83:9:  map[message:'concat' is not a function]
2021/01/26 13:44:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:44:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:44:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:44:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:45:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:45:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:46:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:46:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:46:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:46:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:46:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:46:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:47:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:47:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:47:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:47:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:47:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:47:57 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/getGxByNT.js PUT
2021/01/26 13:47:57 [I] fs.go 56: Write data: null
2021/01/26 13:47:58 [I] fs.go 77: Write attr: {"remark":"","ctime":1611640435840,"author":"admin"}
2021/01/26 13:47:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:47:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:47:59 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/getGxByNT.js POST
2021/01/26 13:48:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:48:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:48:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:48:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:48:14 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/getGxByNT.js PUT
2021/01/26 13:48:14 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:20, stime:'2020-03-01 00:00:00'};
var whereCond = "where starttimestr>='"+param.stime+"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = null;
    try{
        //var matchStr = "match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog "+whereCond+") - [:callto*1] -> (:phonenumber)";
        var matchStr = "match ('"+getPhoneByPeople.join("','")+"') <- [*1] - (:/matrix/action/calllog "+whereCond+")";
        log.debug(22,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
                
        var mql = "select forphone,tophone from /matrix/action/calllog " + whereCond;
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.forphone);
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


// INPUT:电话号码
// OUTPUT: 人

var getPeopleByPhone = function(){
    var rtn = null;
    log.debug(getPhoneByPeople)
    try{
        var matchStr = [];
        // 根据人获取号码
        matchStr.push("match('" + pId + "') <- [:belong*1] - (:phonenumber)");
        // 根据人的手机获取号码
        matchStr.push("('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber)");
        // 根据通话记录获取号码
        matchStr.push("('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog " + whereCond + ")");
        // 根据电话号码获取手机
        matchStr.push("('"+getPhoneByPeople.join("','")+"') - [*1] ->(:mobile)");
        // 根据电话号码和通话记录获取手机
        matchStr.push("('"+getPhoneByPeople.join("','")+"') <- [*1] - (:/matrix/action/calllog " + whereCond + ")");
        
        log.debug(33,matchStr.join(" union "));
        rtn = odb.mql(matchStr.join(" union ")); 
    } catch(err){
        //log.error(err)
        return [];
    }
    
    return rtn;
}


 OUTPUT = getPeopleByPhone()
2021/01/26 13:48:14 [I] fs.go 77: Write attr: {"remark":"","ctime":1611640435840,"author":"admin"}
2021/01/26 13:48:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:48:14 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/getGxByNT.js POST
2021/01/26 13:48:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:49:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:49:04 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/getGxByNT.js PUT
2021/01/26 13:49:04 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:20, stime:'2020-03-01 00:00:00'};
var whereCond = "where starttimestr>='"+param.stime+"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    
    log.info("==========查看返回的结果================"+getPhoneByPeople);
    var rtn = null;
    try{
        //var matchStr = "match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog "+whereCond+") - [:callto*1] -> (:phonenumber)";
        var matchStr = "match ('"+getPhoneByPeople.join("','")+"') <- [*1] - (:/matrix/action/calllog "+whereCond+")";
        log.debug(22,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
                
        var mql = "select forphone,tophone from /matrix/action/calllog " + whereCond;
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.forphone);
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


// INPUT:电话号码
// OUTPUT: 人

var getPeopleByPhone = function(){
    var rtn = null;
    log.debug(getPhoneByPeople)
    try{
        var matchStr = [];
        // 根据人获取号码
        matchStr.push("match('" + pId + "') <- [:belong*1] - (:phonenumber)");
        // 根据人的手机获取号码
        matchStr.push("('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber)");
        // 根据通话记录获取号码
        matchStr.push("('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog " + whereCond + ")");
        // 根据电话号码获取手机
        matchStr.push("('"+getPhoneByPeople.join("','")+"') - [*1] ->(:mobile)");
        // 根据电话号码和通话记录获取手机
        matchStr.push("('"+getPhoneByPeople.join("','")+"') <- [*1] - (:/matrix/action/calllog " + whereCond + ")");
        
        log.debug(33,matchStr.join(" union "));
        rtn = odb.mql(matchStr.join(" union ")); 
    } catch(err){
        //log.error(err)
        return [];
    }
    
    return rtn;
}


 OUTPUT = getPeopleByPhone()
2021/01/26 13:49:04 [I] fs.go 77: Write attr: {"remark":"","ctime":1611640435840,"author":"admin"}
2021/01/26 13:49:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:49:05 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/getGxByNT.js POST
2021/01/26 13:49:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:49:06 [I] wjs.go 145: /bizApi/hdim/test/getGxByNT.js:40:5:  ==========查看返回的结果================phonenumber:13270094836,phonenumber:18695220567,phonenumber:15851047319,phonenumber:15005107680
2021/01/26 13:49:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:49:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:49:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:49:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:49:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:49:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:49:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:50:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:50:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:50:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:50:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:50:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:51:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:51:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:51:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:51:58 [E] modb.go 90: [UnKnown]: query Timed out!
"[UnKnown]" backtrace:
git.wecise.com/wecise/platform/odb.(*CTernary).RelationRangeLoop:cypher_ternary.go:541
git.wecise.com/wecise/platform/odb.(*CTernary).SubjectEvaluateAndSpread:cypher_ternary.go:368
git.wecise.com/wecise/platform/odb.(*CTernary).EvaluateAndSpread:cypher_ternary.go:223
git.wecise.com/wecise/platform/odb.(*CPhase).Evaluate:cypher_query.go:335
git.wecise.com/wecise/platform/odb.(*Gutil).CypherMatchQuery:cypher_query.go:94
git.wecise.com/wecise/platform/odb.(*MqlSemantics).Cypher:cypher.go:1318
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:275
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/web/routers/modb.Mql:modb.go:87
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375
2021/01/26 13:51:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:52:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:52:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:52:23 [E] modb.go 90: [UnKnown]: query Timed out!
"[UnKnown]" backtrace:
git.wecise.com/wecise/platform/odb.(*CTernary).RelationRangeLoop:cypher_ternary.go:541
git.wecise.com/wecise/platform/odb.(*CTernary).SubjectEvaluateAndSpread:cypher_ternary.go:368
git.wecise.com/wecise/platform/odb.(*CTernary).EvaluateAndSpread:cypher_ternary.go:223
git.wecise.com/wecise/platform/odb.(*CPhase).Evaluate:cypher_query.go:335
git.wecise.com/wecise/platform/odb.(*Gutil).CypherMatchQuery:cypher_query.go:94
git.wecise.com/wecise/platform/odb.(*MqlSemantics).Cypher:cypher.go:1318
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:275
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/web/routers/modb.Mql:modb.go:87
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375
2021/01/26 13:52:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:52:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:53:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:53:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:54:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:54:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:55:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:55:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:55:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:55:48 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 13:55:48 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:20, stime:'2020-03-01 00:00:00'};
var whereCond = " starttimestr>='"+param.stime+"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select forphone,tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.forphone);
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  [{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }];
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(_.now(),JSON.stringify(tmp));
            _.extend(rtn[0].graph.nodes,tmp.data[0].graph.Nodes);
            _.extend(rtn[0].graph.edges,tmp.data[0].graph.Edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 13:55:48 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 13:55:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:55:49 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 13:55:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:55:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:55:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:56:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:56:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:56:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:56:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:56:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:56:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:56:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:56:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:56:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:56:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:56:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:56:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:56:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:56:21 [W] query_util.go 869: can't find class for id[biz:数字国网] , search subdix of class!
2021/01/26 13:56:21 [W] cypher_util.go 762: biz:数字国网 not Exist, ignore & continue .
2021/01/26 13:56:21 [W] query_util.go 869: can't find class for id[biz:开发测试] , search subdix of class!
2021/01/26 13:56:21 [W] cypher_util.go 762: biz:开发测试 not Exist, ignore & continue .
2021/01/26 13:56:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:56:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:56:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:56:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:56:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:56:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:56:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:56:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:56:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:56:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:56:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:56:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:56:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:56:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:56:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:56:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:56:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:56:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:57:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:57:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:57:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:57:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:57:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:57:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:57:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:57:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:58:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:58:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:59:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 13:59:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:00:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:00:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:00:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:00:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:00:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:00:58 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 14:00:58 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:20, stime:'2020-03-01 00:00:00'};
var whereCond = " starttimestr>='"+param.stime+"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select forphone,tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.forphone);
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(_.now(),JSON.stringify(tmp));
            _.extend(rtn[0].graph.nodes,tmp.data[0].graph.Nodes);
            _.extend(rtn[0].graph.edges,tmp.data[0].graph.Edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 14:00:58 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 14:00:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:00:58 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 14:01:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:01:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:01:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:01:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:01:10 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 14:01:10 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:20, stime:'2020-03-01 00:00:00'};
var whereCond = " starttimestr>='"+param.stime+"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select forphone,tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.forphone);
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(_.now(),JSON.stringify(tmp));
            _.extend(rtn.data[0].graph.nodes,tmp.data[0].graph.Nodes);
            _.extend(rtn.data[0].graph.edges,tmp.data[0].graph.Edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 14:01:10 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 14:01:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:01:11 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 14:01:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:01:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:01:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:01:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:01:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:01:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:01:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:01:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:01:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:01:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:01:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:01:19 [I] modb.go 723: Export class /matrix/entity/unionpayaccount
2021/01/26 14:01:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:01:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:01:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:01:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:01:52 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 14:01:52 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:20, stime:'2020-03-01 00:00:00'};
var whereCond = " starttimestr>='"+param.stime+"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select forphone,tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.forphone);
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(_.now(),v);
            _.extend(rtn.data[0].graph.nodes,tmp.data[0].graph.Nodes);
            _.extend(rtn.data[0].graph.edges,tmp.data[0].graph.Edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 14:01:52 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 14:01:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:01:53 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 14:01:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:01:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:02:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:02:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:02:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:02:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:02:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:02:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:02:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:02:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:03:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:03:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:03:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:03:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:03:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:03:21 [E] modb.go 90: [Parser]:
  After '... belong*1] - ()
  ': expected [ 	
  ] or Comment or CypherRelationPattern or Comma or CypherCtrl or CypherOP or end of text: {match ('perbasisinfo:320911197112273412') <- [:belong*1] - ()
  2021-01-26 14:01:53.796 /bizApi/hdim/test/test_diagnosis_mobile.js:45:9: select forphone,tophone from /matrix/action/calllog where forphone in ('18695220567','15851047319','15005107680','13270094836') and  starttimestr>='2020-03-01 00:00:00' limit 20}
"[Parser]" backtrace:
git.wecise.com/wecise/platform/odb.(*Gutil).Parse:query.go:205
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:240
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/web/routers/modb.Mql:modb.go:87
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375
2021/01/26 14:03:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:03:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:03:30 [E] modb.go 90: [Parser]:
  After '... belong*1] - ()
  ': expected [ 	
  ] or Comment or CypherRelationPattern or Comma or CypherCtrl or CypherOP or end of text: {match ('perbasisinfo:320911197112273412') <- [:belong*1] - ()
  2021-01-26 14:01:53.796 /bizApi/hdim/test/test_diagnosis_mobile.js:45:9: select forphone,tophone from /matrix/action/calllog where forphone in ('18695220567','15851047319','15005107680','13270094836') and  starttimestr>='2020-03-01 00:00:00' limit 20)}
"[Parser]" backtrace:
git.wecise.com/wecise/platform/odb.(*Gutil).Parse:query.go:205
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:240
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/web/routers/modb.Mql:modb.go:87
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375
2021/01/26 14:03:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:03:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:04:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:04:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:04:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:04:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:04:21 [I] auth.go 217: hdim.admin login success for get session.
2021/01/26 14:04:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:04:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:04:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:04:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:04:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:04:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:04:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:04:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:04:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:04:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:04:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:04:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:04:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:04:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:04:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:04:25 [W] query_util.go 869: can't find class for id[biz:数字国网] , search subdix of class!
2021/01/26 14:04:25 [W] cypher_util.go 762: biz:数字国网 not Exist, ignore & continue .
2021/01/26 14:04:25 [W] query_util.go 869: can't find class for id[biz:开发测试] , search subdix of class!
2021/01/26 14:04:25 [W] cypher_util.go 762: biz:开发测试 not Exist, ignore & continue .
2021/01/26 14:04:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:04:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:04:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:04:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:04:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:04:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:04:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:04:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:04:34 [I] wjs.go 145: /bizApi/hdim/getThreeRelaData.js:7:9:  ==============phonenumber:17768490008
2021/01/26 14:04:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:05:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:05:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:05:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:05:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:05:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:05:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:05:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:05:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:05:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:05:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:06:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:06:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:06:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:07:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:07:10 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 14:07:10 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:50, stime:'2020-03-01 00:00:00'};
var whereCond = " starttimestr>='"+param.stime+"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select forphone,tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.forphone);
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(_.now(),v);
            _.extend(rtn.data[0].graph.nodes,tmp.data[0].graph.Nodes);
            _.extend(rtn.data[0].graph.edges,tmp.data[0].graph.Edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 14:07:10 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 14:07:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:07:11 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 14:07:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:07:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:07:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:07:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:07:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:07:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:07:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:07:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:07:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:08:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:08:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:08:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:08:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:08:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:08:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:08:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:08:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:08:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:08:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:08:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:09:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:09:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:09:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:09:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:09:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:09:04 [I] modb.go 723: Export class /matrix/action/unionpaytrans
2021/01/26 14:09:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:09:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:09:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:09:12 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 14:09:12 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:50, stime:'2020-03-01 00:00:00'};
var whereCond = " starttimestr>='"+param.stime+"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select forphone,tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') or tophone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.forphone);
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(_.now(),v);
            _.extend(rtn.data[0].graph.nodes,tmp.data[0].graph.Nodes);
            _.extend(rtn.data[0].graph.edges,tmp.data[0].graph.Edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 14:09:12 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 14:09:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:09:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:09:13 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 14:09:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:09:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:09:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:09:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:09:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:09:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:09:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:09:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:09:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:09:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:10:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:10:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:10:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:10:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:10:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:10:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:10:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:10:52 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 14:10:52 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:50, stime:'2020-01-01 00:00:00'};
var whereCond = " starttimestr>='"+param.stime+"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select forphone,tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') or tophone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.forphone);
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(_.now(),v);
            _.extend(rtn.data[0].graph.nodes,tmp.data[0].graph.Nodes);
            _.extend(rtn.data[0].graph.edges,tmp.data[0].graph.Edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 14:10:52 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 14:10:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:10:53 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 14:10:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:11:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:11:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:11:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:11:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:11:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:12:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:12:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:13:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:13:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:14:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:14:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:14:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:14:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:15:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:15:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:15:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:15:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:16:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:16:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:16:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:16:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:17:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:17:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:18:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:18:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:18:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:18:43 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 14:18:43 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:50, stime:'2020-01-01 00:00:00', etime: '2020-05-18 21:51:45'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select forphone,tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') or tophone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.forphone);
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(_.now(),v);
            _.extend(rtn.data[0].graph.nodes,tmp.data[0].graph.Nodes);
            _.extend(rtn.data[0].graph.edges,tmp.data[0].graph.Edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 14:18:43 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 14:18:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:18:43 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 14:18:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:18:50 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 14:18:50 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:-1, stime:'2020-01-01 00:00:00', etime: '2020-05-18 21:51:45'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select forphone,tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') or tophone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.forphone);
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(_.now(),v);
            _.extend(rtn.data[0].graph.nodes,tmp.data[0].graph.Nodes);
            _.extend(rtn.data[0].graph.edges,tmp.data[0].graph.Edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 14:18:51 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 14:18:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:18:51 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 14:18:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:18:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:19:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:19:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:19:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:19:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:19:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:19:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:20:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:20:12 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 14:20:12 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:-1, stime:'2020-03-01 00:00:00', etime: '2020-05-18 21:51:45'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select forphone,tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') or tophone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.forphone);
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(_.now(),v);
            _.extend(rtn.data[0].graph.nodes,tmp.data[0].graph.Nodes);
            _.extend(rtn.data[0].graph.edges,tmp.data[0].graph.Edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 14:20:12 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 14:20:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:20:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:20:13 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 14:20:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:20:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:20:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:20:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:20:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:20:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:20:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:20:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:20:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:20:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:20:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:20:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:20:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:20:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:20:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:20:31 [W] query_util.go 869: can't find class for id[biz:数字国网] , search subdix of class!
2021/01/26 14:20:31 [W] cypher_util.go 762: biz:数字国网 not Exist, ignore & continue .
2021/01/26 14:20:31 [W] query_util.go 869: can't find class for id[biz:开发测试] , search subdix of class!
2021/01/26 14:20:31 [W] cypher_util.go 762: biz:开发测试 not Exist, ignore & continue .
2021/01/26 14:20:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:20:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:20:33 [I] modb.go 723: Export class /matrix/action/unionpaytrans
2021/01/26 14:20:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:20:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:20:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:20:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:20:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:20:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:20:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:20:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:20:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:21:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:21:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:21:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:21:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:21:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:21:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:21:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:21:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:21:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:21:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:22:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:22:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:22:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:22:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:22:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:22:52 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 14:22:52 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:-1, stime:'2020-03-01 00:00:00', etime: '2020-05-18 21:51:45'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select forphone,tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.forphone);
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(_.now(),v);
            _.extend(rtn.data[0].graph.nodes,tmp.data[0].graph.Nodes);
            _.extend(rtn.data[0].graph.edges,tmp.data[0].graph.Edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 14:22:52 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 14:22:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:22:53 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 14:23:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:23:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:23:32 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 14:23:32 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:-1, stime:'2020-03-01 00:00:00', etime: '2020-05-18 21:51:45'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(_.now(),v);
            _.extend(rtn.data[0].graph.nodes,tmp.data[0].graph.Nodes);
            _.extend(rtn.data[0].graph.edges,tmp.data[0].graph.Edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 14:23:32 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 14:23:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:23:33 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 14:23:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:23:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:23:48 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 14:23:48 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:-1, stime:'2020-03-01 00:00:00', etime: '2020-05-18 21:51:45'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(_.now(),v);
            _.extend(rtn.data[0].graph.nodes,tmp.data[0].graph.Nodes);
            _.extend(rtn.data[0].graph.edges,tmp.data[0].graph.Edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 14:23:48 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 14:23:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:23:49 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 14:23:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:24:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:24:03 [I] cache.go 349: Refresh cache {field,class,bulk,tsdb,bitlog}...
2021/01/26 14:24:03 [I] cache.go 370: Refresh cache: DateFields, AllFields, LoptionFields, Fields.
2021/01/26 14:24:03 [I] cache.go 380: Refresh cache: tsdb.
2021/01/26 14:24:03 [I] cache.go 390: Refresh cache: bitlog.
2021/01/26 14:24:03 [I] cache.go 400: Refresh cache: Classes, ClassFields, ClassTTL.
2021/01/26 14:24:03 [I] cache.go 411: Refresh cache: enum.
2021/01/26 14:24:03 [I] cache.go 469: Refresh cache: FieldCap.
2021/01/26 14:24:03 [I] cache.go 492: ------Finish Cache------
2021/01/26 14:24:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:24:05 [I] util.go 276: Send schema change notify, cache type: field,class,bulk,tsdb,bitlog, change value: int_454_279_244980139
2021/01/26 14:24:06 [I] util.go 209: Receive schema change notify.
2021/01/26 14:24:06 [I] util.go 209: Receive schema change notify.
2021/01/26 14:24:06 [I] util.go 209: Receive schema change notify.
2021/01/26 14:24:06 [I] util.go 219: Refresh cache type: field,class,bulk,tsdb,bitlog
2021/01/26 14:24:06 [I] util.go 219: Refresh cache type: field,class,bulk,tsdb,bitlog
2021/01/26 14:24:06 [I] cache.go 349: Refresh cache {field,class,bulk,tsdb,bitlog}...
2021/01/26 14:24:06 [I] cache.go 370: Refresh cache: DateFields, AllFields, LoptionFields, Fields.
2021/01/26 14:24:06 [I] util.go 219: Refresh cache type: field,class,bulk,tsdb,bitlog
2021/01/26 14:24:06 [I] cache.go 349: Refresh cache {field,class,bulk,tsdb,bitlog}...
2021/01/26 14:24:06 [I] util.go 231:  is self, skip, don't refresh .
2021/01/26 14:24:06 [I] cache.go 370: Refresh cache: DateFields, AllFields, LoptionFields, Fields.
2021/01/26 14:24:06 [I] cache.go 380: Refresh cache: tsdb.
2021/01/26 14:24:06 [I] cache.go 380: Refresh cache: tsdb.
2021/01/26 14:24:06 [I] cache.go 390: Refresh cache: bitlog.
2021/01/26 14:24:06 [I] cache.go 400: Refresh cache: Classes, ClassFields, ClassTTL.
2021/01/26 14:24:06 [I] cache.go 390: Refresh cache: bitlog.
2021/01/26 14:24:06 [I] cache.go 400: Refresh cache: Classes, ClassFields, ClassTTL.
2021/01/26 14:24:06 [I] cache.go 411: Refresh cache: enum.
2021/01/26 14:24:06 [I] cache.go 411: Refresh cache: enum.
2021/01/26 14:24:06 [I] cache.go 469: Refresh cache: FieldCap.
2021/01/26 14:24:06 [I] cache.go 469: Refresh cache: FieldCap.
2021/01/26 14:24:06 [I] cache.go 492: ------Finish Cache------
2021/01/26 14:24:06 [I] cache.go 492: ------Finish Cache------
2021/01/26 14:24:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:24:08 [I] cache.go 349: Refresh cache {field,class,bulk,tsdb,bitlog}...
2021/01/26 14:24:08 [I] cache.go 370: Refresh cache: DateFields, AllFields, LoptionFields, Fields.
2021/01/26 14:24:09 [I] cache.go 380: Refresh cache: tsdb.
2021/01/26 14:24:09 [I] cache.go 390: Refresh cache: bitlog.
2021/01/26 14:24:09 [I] cache.go 400: Refresh cache: Classes, ClassFields, ClassTTL.
2021/01/26 14:24:09 [I] cache.go 411: Refresh cache: enum.
2021/01/26 14:24:09 [I] cache.go 469: Refresh cache: FieldCap.
2021/01/26 14:24:09 [I] cache.go 492: ------Finish Cache------
2021/01/26 14:24:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:24:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:24:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:24:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:24:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:24:10 [I] util.go 276: Send schema change notify, cache type: field,class,bulk,tsdb,bitlog, change value: int_454_280_250050930
2021/01/26 14:24:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:24:11 [I] util.go 209: Receive schema change notify.
2021/01/26 14:24:11 [I] util.go 209: Receive schema change notify.
2021/01/26 14:24:11 [I] util.go 209: Receive schema change notify.
2021/01/26 14:24:11 [I] util.go 219: Refresh cache type: field,class,bulk,tsdb,bitlog
2021/01/26 14:24:11 [I] util.go 231:  is self, skip, don't refresh .
2021/01/26 14:24:11 [I] util.go 219: Refresh cache type: field,class,bulk,tsdb,bitlog
2021/01/26 14:24:11 [I] cache.go 349: Refresh cache {field,class,bulk,tsdb,bitlog}...
2021/01/26 14:24:11 [I] cache.go 370: Refresh cache: DateFields, AllFields, LoptionFields, Fields.
2021/01/26 14:24:11 [I] util.go 219: Refresh cache type: field,class,bulk,tsdb,bitlog
2021/01/26 14:24:11 [I] cache.go 349: Refresh cache {field,class,bulk,tsdb,bitlog}...
2021/01/26 14:24:11 [I] cache.go 370: Refresh cache: DateFields, AllFields, LoptionFields, Fields.
2021/01/26 14:24:11 [I] cache.go 380: Refresh cache: tsdb.
2021/01/26 14:24:11 [I] cache.go 390: Refresh cache: bitlog.
2021/01/26 14:24:11 [I] cache.go 400: Refresh cache: Classes, ClassFields, ClassTTL.
2021/01/26 14:24:11 [I] cache.go 380: Refresh cache: tsdb.
2021/01/26 14:24:11 [I] cache.go 390: Refresh cache: bitlog.
2021/01/26 14:24:11 [I] cache.go 411: Refresh cache: enum.
2021/01/26 14:24:11 [I] cache.go 400: Refresh cache: Classes, ClassFields, ClassTTL.
2021/01/26 14:24:11 [I] cache.go 469: Refresh cache: FieldCap.
2021/01/26 14:24:11 [I] cache.go 492: ------Finish Cache------
2021/01/26 14:24:11 [I] cache.go 411: Refresh cache: enum.
2021/01/26 14:24:11 [I] cache.go 469: Refresh cache: FieldCap.
2021/01/26 14:24:11 [I] cache.go 492: ------Finish Cache------
2021/01/26 14:24:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:24:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:24:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:24:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:24:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:24:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:24:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:24:12 [W] query_util.go 869: can't find class for id[biz:数字国网] , search subdix of class!
2021/01/26 14:24:12 [W] cypher_util.go 762: biz:数字国网 not Exist, ignore & continue .
2021/01/26 14:24:12 [W] query_util.go 869: can't find class for id[biz:开发测试] , search subdix of class!
2021/01/26 14:24:12 [W] cypher_util.go 762: biz:开发测试 not Exist, ignore & continue .
2021/01/26 14:24:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:24:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:24:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:24:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:24:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:24:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:24:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:24:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:24:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:24:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:24:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:24:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:25:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:25:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:25:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:25:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:25:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:25:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:25:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:25:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:26:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:26:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:27:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:27:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:28:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:28:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:28:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:28:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:28:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:28:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:28:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:28:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:28:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:28:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:28:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:28:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:28:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:28:35 [W] query_util.go 869: can't find class for id[biz:数字国网] , search subdix of class!
2021/01/26 14:28:35 [W] cypher_util.go 762: biz:数字国网 not Exist, ignore & continue .
2021/01/26 14:28:35 [W] query_util.go 869: can't find class for id[biz:开发测试] , search subdix of class!
2021/01/26 14:28:35 [W] cypher_util.go 762: biz:开发测试 not Exist, ignore & continue .
2021/01/26 14:28:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:28:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:28:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:28:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:28:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:28:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:28:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:28:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:28:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:28:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:28:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:28:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:28:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:28:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:29:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:29:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:29:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:30:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:30:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:30:24 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 14:30:24 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:-1, stime:'2020-03-01 00:00:00', etime: '2020-05-18 21:51:45'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:13046513888");//+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(_.now(),v);
            _.extend(rtn.data[0].graph.nodes,tmp.data[0].graph.Nodes);
            _.extend(rtn.data[0].graph.edges,tmp.data[0].graph.Edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 14:30:24 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 14:30:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:30:25 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 14:30:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:30:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:30:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:30:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:30:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:30:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:30:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:30:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:30:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:30:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:30:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:30:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:30:34 [W] query_util.go 869: can't find class for id[biz:数字国网] , search subdix of class!
2021/01/26 14:30:34 [W] cypher_util.go 762: biz:数字国网 not Exist, ignore & continue .
2021/01/26 14:30:34 [W] query_util.go 869: can't find class for id[biz:开发测试] , search subdix of class!
2021/01/26 14:30:34 [W] cypher_util.go 762: biz:开发测试 not Exist, ignore & continue .
2021/01/26 14:30:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:30:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:30:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:30:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:30:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:30:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:30:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:30:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:31:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:31:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:32:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:32:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:32:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:32:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:32:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:32:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:32:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:32:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:32:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:32:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:32:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:32:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:32:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:32:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:32:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:32:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:33:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:33:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:33:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:33:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:33:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:33:29 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 14:33:29 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-05-18 21:51:45'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:13046513888");//+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(_.now(),v);
            _.extend(rtn.data[0].graph.nodes,tmp.data[0].graph.Nodes);
            _.extend(rtn.data[0].graph.edges,tmp.data[0].graph.Edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 14:33:29 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 14:33:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:33:30 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 14:33:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:33:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:33:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:33:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:33:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:33:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:33:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:33:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:34:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:34:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:34:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:34:16 [W] cypher_util.go 762: 2 not Exist, ignore & continue .
2021/01/26 14:34:16 [W] cypher_util.go 762: 2 not Exist, ignore & continue .
2021/01/26 14:34:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:34:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:34:19 [W] cypher_util.go 762: 2 not Exist, ignore & continue .
2021/01/26 14:34:19 [W] cypher_util.go 762: 2 not Exist, ignore & continue .
2021/01/26 14:34:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:34:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:34:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:34:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:34:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:34:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:34:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:34:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:35:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:35:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:35:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:35:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:35:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:36:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:36:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:36:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:36:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:36:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:36:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:36:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:36:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:36:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:36:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:36:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:36:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:36:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:36:15 [W] query_util.go 869: can't find class for id[biz:数字国网] , search subdix of class!
2021/01/26 14:36:15 [W] cypher_util.go 762: biz:数字国网 not Exist, ignore & continue .
2021/01/26 14:36:15 [W] query_util.go 869: can't find class for id[biz:开发测试] , search subdix of class!
2021/01/26 14:36:15 [W] cypher_util.go 762: biz:开发测试 not Exist, ignore & continue .
2021/01/26 14:36:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:36:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:36:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:36:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:36:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:37:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:37:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:37:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:37:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:37:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:37:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:37:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:37:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:37:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:37:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:37:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:37:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:37:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:37:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:37:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:37:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:38:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:38:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:38:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:38:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:38:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:39:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:39:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:39:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:39:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:40:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:40:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:40:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:40:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:40:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:40:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:41:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:41:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:41:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:41:58 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 14:41:58 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-05-18 21:51:45'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:13046513888");//+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') - [:bycall*1] -> (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(_.now(),v);
            _.extend(rtn.data[0].graph.nodes,tmp.data[0].graph.Nodes);
            _.extend(rtn.data[0].graph.edges,tmp.data[0].graph.Edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 14:41:58 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 14:41:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:41:59 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 14:42:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:42:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:42:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:42:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:42:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:42:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:42:13 [E] wjs.go 149: /bizApi/hdim/test/test_diagnosis_mobile.js:84:9:  map[message:Cannot access member 'graph' of undefined]
2021/01/26 14:42:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:42:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:42:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:42:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:42:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:43:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:43:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:43:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:43:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:43:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:43:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:43:18 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 14:43:18 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-05-18 21:51:45'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:13046513888");//+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(_.now(),v);
            _.extend(rtn.data[0].graph.nodes,tmp.data[0].graph.Nodes);
            _.extend(rtn.data[0].graph.edges,tmp.data[0].graph.Edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 14:43:18 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 14:43:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:43:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:43:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:43:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:43:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:43:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:43:19 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 14:43:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:43:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:43:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:43:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:43:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:43:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:43:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:43:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:43:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:43:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:43:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:43:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:43:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:43:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:43:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:43:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:43:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:43:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:43:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:43:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:43:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:44:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:44:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:44:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:44:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:44:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:44:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:44:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:45:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:45:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:45:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:45:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:45:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:45:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:45:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:45:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:45:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:45:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:46:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:46:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:46:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:46:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:46:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:47:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:47:07 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 14:47:07 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-05-18 21:51:45'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:13046513888");//+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(_.now(),v);
            _.union(rtn.data[0].graph.nodes,tmp.data[0].graph.Nodes);
            _.union(rtn.data[0].graph.edges,tmp.data[0].graph.Edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 14:47:07 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 14:47:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:47:08 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 14:47:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:47:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:47:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:47:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:47:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:47:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:48:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:48:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:48:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:48:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:48:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:48:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:48:50 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 14:48:50 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-05-18 21:51:45'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:13046513888");//+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(_.now(),v);
            _.extend([],rtn.data[0].graph.nodes,tmp.data[0].graph.Nodes);
            _.extend([],rtn.data[0].graph.edges,tmp.data[0].graph.Edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 14:48:50 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 14:48:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:48:51 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 14:48:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:48:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:48:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:49:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:49:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:49:18 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 14:49:18 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-05-18 21:51:45'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:13046513888");//+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(_.now(),v);
            rtn.data[0].graph.nodes = _.extend(rtn.data[0].graph.nodes,tmp.data[0].graph.Nodes);
            rtn.data[0].graph.edges =_.extend(rtn.data[0].graph.edges,tmp.data[0].graph.Edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 14:49:18 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 14:49:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:49:19 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 14:49:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:49:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:49:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:49:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:49:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:49:58 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 14:49:58 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-05-18 21:51:45'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:13046513888");//+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(_.now(),v);
            _.extend(rtn.data[0].graph.nodes,[],tmp.data[0].graph.Nodes);
            _.extend(rtn.data[0].graph.edges,[],tmp.data[0].graph.Edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 14:49:58 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 14:49:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:49:59 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 14:50:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:50:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:50:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:50:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:50:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:50:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:51:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:51:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:51:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:51:14 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 14:51:14 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-05-18 21:51:45'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:13046513888");//+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(_.now(),v);
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                rtn.data[0].graph.nodes.push(n);
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            // _.extend(rtn.data[0].graph.nodes,tmp.data[0].graph.Nodes);
            // _.extend(rtn.data[0].graph.edges,tmp.data[0].graph.Edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 14:51:14 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 14:51:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:51:15 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 14:51:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:51:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:51:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:51:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:51:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:52:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:52:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:53:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:53:10 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 14:53:10 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-05-18 21:51:45'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:13046513888");//+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(_.now(),v);
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                rtn.data[0].graph.nodes.push(n);
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 14:53:10 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 14:53:11 [E] batch.go 73: cql =[INSERT INTO object JSON ? DEFAULT UNSET], params=[[{"_tokens":{"_fields":"\u0000/matrix/filesystem\u00002021-01-26\u00002021-01-26 04:58:48\u00002021-01-26 06:53:10\u0000/script/bizApi/hdim/test\u0000{\"remark\":\"\",\"ctime\":1611637481113,\"author\":\"admin\"}\u0000js\u0000admin\u0000/script/bizApi/hdim/test/test_diagnosis_mobile.js\u0000test_diagnosis_mobile.js\u00006376632034106499724\u00000\u00001611643991528","_raw":""},"class":"/matrix/filesystem","day":"2021-01-26","id":"6376632034106499724","list_bigint_0":[-127168106978462951],"list_bigint_1":[],"map_varchar_set_0":null,"map_varchar_set_1":null,"map_varchar_set_10":null,"map_varchar_set_11":null,"map_varchar_set_12":null,"map_varchar_set_13":null,"map_varchar_set_14":null,"map_varchar_set_15":null,"map_varchar_set_16":null,"map_varchar_set_19":null,"map_varchar_set_2":null,"map_varchar_set_20":null,"map_varchar_set_21":null,"map_varchar_set_22":null,"map_varchar_set_23":null,"map_varchar_set_24":null,"map_varchar_set_25":null,"map_varchar_set_26":null,"map_varchar_set_27":null,"map_varchar_set_3":null,"map_varchar_set_30":null,"map_varchar_set_31":null,"map_varchar_set_4":null,"map_varchar_set_5":null,"map_varchar_set_6":null,"map_varchar_set_7":null,"map_varchar_set_8":null,"map_varchar_set_9":null,"name":"test_diagnosis_mobile.js","smallint_0":0,"tags":[],"timestamp_2":"2021-01-26T06:53:10.9Z","timestamp_3":"2021-01-26T04:58:48.628Z","varchar_19":"/script/bizApi/hdim/test","varchar_2":"admin","varchar_20":"/script/bizApi/hdim/test/test_diagnosis_mobile.js","varchar_33":"js","varchar_34":"{\"remark\":\"\",\"ctime\":1611637481113,\"author\":\"admin\"}","varchar_394":null,"varchar_396":null,"vtime":1611643991528}]], err=[Error decoding JSON value for timestamp_2: Unable to coerce '2021-01-26T06:53:10.9Z' to a formatted date (long)]
2021/01/26 14:53:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:53:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:53:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:53:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:53:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:53:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:53:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:53:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:53:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:53:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:53:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:54:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:54:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:54:28 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 14:54:28 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId ='perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:13046513888");//+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(_.now(),v);
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                rtn.data[0].graph.nodes.push(n);
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 14:54:28 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 14:54:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:54:29 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 14:54:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:54:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:54:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:54:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:54:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:54:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:54:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:54:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:54:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:54:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:54:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:54:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:54:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:54:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:55:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:55:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:55:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:55:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:55:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:55:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:55:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:55:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:55:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:55:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:55:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:55:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:55:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:55:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:55:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:55:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:55:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:55:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:55:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:55:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:55:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:55:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:55:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:55:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:55:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:55:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:55:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:55:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:55:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:55:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:55:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:55:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:55:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:55:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:55:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:55:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:55:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:55:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:55:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:55:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:55:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:55:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:55:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:55:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:55:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:55:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:55:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:55:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:56:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:56:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:57:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:57:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:58:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:58:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:58:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:58:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:58:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:58:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:58:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:58:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:58:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:58:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:58:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:58:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:58:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:58:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:58:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:58:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:58:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 14:59:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:00:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:00:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:00:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:00:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:00:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:00:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:00:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:00:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:00:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:00:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:00:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:00:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:00:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:00:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:00:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:00:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:00:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:00:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:00:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:00:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:00:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:00:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:00:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:00:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:00:49 [W] query_util.go 869: can't find class for id[biz:数字国网] , search subdix of class!
2021/01/26 15:00:49 [W] cypher_util.go 762: biz:数字国网 not Exist, ignore & continue .
2021/01/26 15:00:49 [W] query_util.go 869: can't find class for id[biz:开发测试] , search subdix of class!
2021/01/26 15:00:49 [W] cypher_util.go 762: biz:开发测试 not Exist, ignore & continue .
2021/01/26 15:00:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:00:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:00:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:00:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:00:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:00:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:01:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:01:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:01:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:01:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:01:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:01:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:02:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:02:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:02:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:02:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:02:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:02:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:02:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:02:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:02:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:02:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:02:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:02:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:02:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:02:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:02:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:02:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:02:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:02:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:02:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:02:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:02:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:02:34 [W] query_util.go 869: can't find class for id[biz:数字国网] , search subdix of class!
2021/01/26 15:02:34 [W] cypher_util.go 762: biz:数字国网 not Exist, ignore & continue .
2021/01/26 15:02:34 [W] query_util.go 869: can't find class for id[biz:开发测试] , search subdix of class!
2021/01/26 15:02:34 [W] cypher_util.go 762: biz:开发测试 not Exist, ignore & continue .
2021/01/26 15:02:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:02:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:02:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:02:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:02:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:02:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:02:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:03:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:04:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:04:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:04:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:04:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:05:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:05:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:06:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:06:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:06:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:07:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:07:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:08:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:08:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:09:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:09:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:09:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:09:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:09:34 [W] cypher_util.go 762: 3 not Exist, ignore & continue .
2021/01/26 15:09:37 [E] cypher_query.go 1104: vname ==> a []
2021/01/26 15:09:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:09:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:09:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:09:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:10:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:10:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:10:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:10:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:10:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:10:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:10:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:10:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:10:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:10:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:10:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:10:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:11:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:11:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:11:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:11:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:11:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:11:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:11:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:12:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:12:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:12:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:12:49 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 15:12:49 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId = decodeURIComponent(INPUT);//'perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:13046513888");//+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(_.now(),v);
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                rtn.data[0].graph.nodes.push(n);
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 15:12:49 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 15:12:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:12:50 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 15:12:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:13:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:13:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:13:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:13:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:13:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:13:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:13:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:13:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:13:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:13:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:13:23 [E] wjs.go 149: /bizApi/hdim/test/test_diagnosis_mobile.js:90:9:  map[message:Cannot access member 'graph' of undefined]
2021/01/26 15:13:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:13:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:13:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:13:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:13:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:13:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:13:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:13:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:13:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:13:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:13:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:13:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:13:41 [E] wjs.go 149: /bizApi/hdim/test/test_diagnosis_mobile.js:90:9:  map[message:Cannot access member 'graph' of undefined]
2021/01/26 15:13:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:14:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:14:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:14:31 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 15:14:31 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId = decodeURIComponent(INPUT);//'perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            //rtn.push("phonenumber:13046513888")
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(_.now(),v);
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                rtn.data[0].graph.nodes.push(n);
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 15:14:31 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 15:14:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:14:32 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 15:14:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:14:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:14:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:14:36 [E] wjs.go 149: /bizApi/hdim/test/test_diagnosis_mobile.js:91:9:  map[message:Cannot access member 'graph' of undefined]
2021/01/26 15:14:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:14:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:14:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:14:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:14:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:14:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:14:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:14:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:14:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:14:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:14:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:14:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:14:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:14:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:14:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:14:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:14:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:14:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:14:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:14:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:14:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:14:59 [W] query_util.go 869: can't find class for id[biz:数字国网] , search subdix of class!
2021/01/26 15:14:59 [W] cypher_util.go 762: biz:数字国网 not Exist, ignore & continue .
2021/01/26 15:14:59 [W] query_util.go 869: can't find class for id[biz:开发测试] , search subdix of class!
2021/01/26 15:14:59 [W] cypher_util.go 762: biz:开发测试 not Exist, ignore & continue .
2021/01/26 15:15:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:15:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:15:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:15:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:15:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:15:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:15:15 [E] wjs.go 149: /bizApi/hdim/test/test_diagnosis_mobile.js:91:9:  map[message:Cannot access member 'graph' of undefined]
2021/01/26 15:15:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:16:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:16:04 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 15:16:04 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
//var pId = decodeURIComponent(INPUT);
var PId = 'perbasisinfo:320911197112273412';

var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            //rtn.push("phonenumber:13046513888")
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(_.now(),v);
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                rtn.data[0].graph.nodes.push(n);
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 15:16:04 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 15:16:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:16:04 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 15:16:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:16:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:16:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:16:11 [E] wjs.go 149: /bizApi/hdim/test/test_diagnosis_mobile.js:30:9:  map[message:'pId' is not defined]
2021/01/26 15:16:11 [E] wjs.go 149: /bizApi/hdim/test/test_diagnosis_mobile.js:93:9:  map[message:'pId' is not defined]
2021/01/26 15:16:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:16:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:16:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:16:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:16:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:16:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:16:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:16:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:16:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:16:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:16:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:16:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:16:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:16:40 [E] wjs.go 149: /bizApi/hdim/test/test_diagnosis_mobile.js:30:9:  map[message:'pId' is not defined]
2021/01/26 15:16:40 [E] wjs.go 149: /bizApi/hdim/test/test_diagnosis_mobile.js:93:9:  map[message:'pId' is not defined]
2021/01/26 15:16:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:17:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:17:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:17:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:17:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:17:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:17:21 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 15:17:21 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
//var pId = decodeURIComponent(INPUT);
var pId = 'perbasisinfo:320911197112273412';

var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            //rtn.push("phonenumber:13046513888")
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(_.now(),v);
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                rtn.data[0].graph.nodes.push(n);
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 15:17:21 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 15:17:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:17:21 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 15:17:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:17:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:17:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:17:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:17:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:17:42 [W] cypher_util.go 762: 3 not Exist, ignore & continue .
2021/01/26 15:17:42 [W] cypher_util.go 762: 3 not Exist, ignore & continue .
2021/01/26 15:17:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:17:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:17:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:17:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:17:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:17:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:17:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:17:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:17:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:17:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:17:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:17:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:17:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:17:51 [W] cypher_util.go 762: 59 not Exist, ignore & continue .
2021/01/26 15:17:51 [W] cypher_util.go 762: 59 not Exist, ignore & continue .
2021/01/26 15:18:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:18:10 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 15:18:10 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId = decodeURIComponent(INPUT);
//var pId = 'perbasisinfo:320911197112273412';

var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            //rtn.push("phonenumber:13046513888")
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(_.now(),v);
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                rtn.data[0].graph.nodes.push(n);
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 15:18:10 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 15:18:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:18:11 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 15:18:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:18:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:18:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:18:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:18:16 [W] cypher_util.go 762: 3 not Exist, ignore & continue .
2021/01/26 15:18:16 [W] cypher_util.go 762: 3 not Exist, ignore & continue .
2021/01/26 15:18:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:18:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:18:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:18:21 [E] wjs.go 149: /bizApi/hdim/test/test_diagnosis_mobile.js:93:9:  map[message:Cannot access member 'graph' of undefined]
2021/01/26 15:18:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:18:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:18:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:18:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:18:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:18:54 [E] wjs.go 149: /bizApi/hdim/test/test_diagnosis_mobile.js:93:9:  map[message:Cannot access member 'graph' of undefined]
2021/01/26 15:19:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:19:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:19:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:19:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:19:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:19:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:19:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:19:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:19:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:19:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:19:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:19:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:19:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:19:24 [E] wjs.go 149: /bizApi/hdim/test/test_diagnosis_mobile.js:93:9:  map[message:Cannot access member 'graph' of undefined]
2021/01/26 15:19:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:19:41 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 15:19:41 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId = INPUT;//decodeURIComponent(INPUT);
//var pId = 'perbasisinfo:320911197112273412';

var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            //rtn.push("phonenumber:13046513888")
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(_.now(),v);
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                rtn.data[0].graph.nodes.push(n);
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 15:19:41 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 15:19:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:19:42 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 15:19:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:19:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:19:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:19:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:19:45 [E] wjs.go 149: /bizApi/hdim/test/test_diagnosis_mobile.js:93:9:  map[message:Cannot access member 'graph' of undefined]
2021/01/26 15:20:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:20:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:20:27 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 15:20:27 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId = decodeURIComponent(INPUT);
log.debug(pId)
//var pId = 'perbasisinfo:320911197112273412';

var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            //rtn.push("phonenumber:13046513888")
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(_.now(),v);
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                rtn.data[0].graph.nodes.push(n);
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 15:20:27 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 15:20:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:20:28 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 15:20:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:20:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:20:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:20:32 [E] wjs.go 149: /bizApi/hdim/test/test_diagnosis_mobile.js:94:9:  map[message:Cannot access member 'graph' of undefined]
2021/01/26 15:20:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:20:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:20:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:20:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:20:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:20:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:20:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:20:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:20:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:20:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:20:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:20:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:20:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:20:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:20:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:20:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:20:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:20:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:20:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:21:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:21:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:21:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:21:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:21:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:21:23 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 15:21:23 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId = decodeURIComponent(INPUT);
log.debug(111,pId)
//var pId = 'perbasisinfo:320911197112273412';

var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            //rtn.push("phonenumber:13046513888")
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(_.now(),v);
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                rtn.data[0].graph.nodes.push(n);
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 15:21:23 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 15:21:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:21:23 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 15:21:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:21:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:21:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:21:28 [E] wjs.go 149: /bizApi/hdim/test/test_diagnosis_mobile.js:94:9:  map[message:Cannot access member 'graph' of undefined]
2021/01/26 15:21:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:21:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:21:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:21:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:21:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:21:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:21:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:22:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:22:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:22:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:22:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:22:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:22:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:22:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:22:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:23:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:23:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:23:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:23:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:24:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:24:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:24:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:24:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:24:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:24:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:24:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:24:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:24:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:24:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:24:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:24:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:24:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:24:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:24:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:24:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:24:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:24:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:24:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:24:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:25:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:25:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:25:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:26:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:26:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:26:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:26:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:26:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:26:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:26:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:26:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:26:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:27:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:27:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:28:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:28:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:28:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:29:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:29:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:29:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:30:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:30:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:30:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:31:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:31:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:32:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:32:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:33:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:33:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:33:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:33:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:34:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:34:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:35:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:35:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:36:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:36:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:37:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:37:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:38:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:38:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:39:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:39:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:39:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:39:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:39:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:39:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:39:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:39:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:39:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:39:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:40:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:40:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:40:06 [I] wjs.go 145: /matrix/fs/action-by-delete.js:16:9:  DELETE FROM /matrix/consolelog/scriptjs WHERE id in ('', '')  with version
2021/01/26 15:40:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:40:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:40:09 [I] wjs.go 145: /matrix/fs/action-by-delete.js:16:9:  DELETE FROM /matrix/consolelog/scriptjs WHERE id in ('', '')  with version
2021/01/26 15:40:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:40:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:40:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:40:13 [I] wjs.go 145: /matrix/fs/action-by-delete.js:16:9:  DELETE FROM /matrix/consolelog/scriptjs WHERE id in ('', '')  with version
2021/01/26 15:40:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:40:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:40:15 [I] wjs.go 145: /matrix/fs/action-by-delete.js:16:9:  DELETE FROM /matrix/consolelog/scriptjs WHERE id in ('', '')  with version
2021/01/26 15:40:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:40:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:40:16 [I] wjs.go 145: /matrix/fs/action-by-delete.js:16:9:  DELETE FROM /matrix/consolelog/scriptjs WHERE id in ('', '')  with version
2021/01/26 15:40:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:40:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:40:17 [I] wjs.go 145: /matrix/fs/action-by-delete.js:16:9:  DELETE FROM /matrix/consolelog/scriptjs WHERE id in ('', '')  with version
2021/01/26 15:40:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:40:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:40:17 [I] wjs.go 145: /matrix/fs/action-by-delete.js:16:9:  DELETE FROM /matrix/consolelog/scriptjs WHERE id in ('', '')  with version
2021/01/26 15:40:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:40:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:40:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:40:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:40:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:40:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:40:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:41:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:41:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:41:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:41:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:41:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:41:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:41:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:41:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:42:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:42:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:42:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:42:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:42:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:42:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:42:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:42:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:42:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:43:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:43:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:43:01 [I] auth.go 133: hdim.admin login success. Redirect to uri: /
2021/01/26 15:43:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:43:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:43:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:43:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:43:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:43:03 [I] auth.go 217: hdim.admin login success for get session.
2021/01/26 15:43:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:43:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:43:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:43:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:43:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:43:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:43:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:43:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:43:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:43:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:43:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:43:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:43:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:43:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:43:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:43:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:43:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:43:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:43:07 [W] query_util.go 869: can't find class for id[biz:数字国网] , search subdix of class!
2021/01/26 15:43:07 [W] cypher_util.go 762: biz:数字国网 not Exist, ignore & continue .
2021/01/26 15:43:07 [W] query_util.go 869: can't find class for id[biz:开发测试] , search subdix of class!
2021/01/26 15:43:07 [W] cypher_util.go 762: biz:开发测试 not Exist, ignore & continue .
2021/01/26 15:43:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:43:07 [W] query_util.go 869: can't find class for id[biz:数字国网] , search subdix of class!
2021/01/26 15:43:07 [W] cypher_util.go 762: biz:数字国网 not Exist, ignore & continue .
2021/01/26 15:43:07 [W] query_util.go 869: can't find class for id[biz:开发测试] , search subdix of class!
2021/01/26 15:43:07 [W] cypher_util.go 762: biz:开发测试 not Exist, ignore & continue .
2021/01/26 15:43:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:43:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:43:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:43:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:43:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:43:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:43:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:43:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:43:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:43:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:43:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:43:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:43:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:43:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:43:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:43:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:43:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:43:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:43:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:43:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:44:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:44:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:44:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:44:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:44:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:44:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:44:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:44:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:44:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:44:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:44:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:44:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:44:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:44:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:44:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:44:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:44:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:45:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:45:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:45:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:45:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:45:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:45:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:45:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:45:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:46:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:46:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:46:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:46:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:46:37 [I] wjs.go 145: /bizApi/hdim/getOneRelaData.js:7:9:  ==============phonenumber:18695220567
2021/01/26 15:46:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:46:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:47:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:47:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:48:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:48:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:48:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:48:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:48:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:49:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:49:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:50:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:50:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:50:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:50:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:50:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:50:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:50:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:50:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:50:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:50:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:50:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:51:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:51:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:52:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:52:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:52:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:52:33 [W] cypher_util.go 762: 3 not Exist, ignore & continue .
2021/01/26 15:52:33 [W] cypher_util.go 762: 3 not Exist, ignore & continue .
2021/01/26 15:52:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:52:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:52:41 [W] cypher_util.go 762: 3 not Exist, ignore & continue .
2021/01/26 15:52:41 [W] cypher_util.go 762: 3 not Exist, ignore & continue .
2021/01/26 15:52:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:53:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:53:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:53:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:53:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:53:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:53:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:54:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:54:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:54:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:54:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:55:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:55:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:56:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:56:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:57:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:57:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:58:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:58:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:58:06 [W] cypher_util.go 762: 3 not Exist, ignore & continue .
2021/01/26 15:58:06 [W] cypher_util.go 762: 3 not Exist, ignore & continue .
2021/01/26 15:58:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:58:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:58:12 [W] cypher_util.go 762: 3 not Exist, ignore & continue .
2021/01/26 15:58:12 [W] cypher_util.go 762: 3 not Exist, ignore & continue .
2021/01/26 15:58:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:58:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:59:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 15:59:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:00:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:00:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:00:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:00:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:00:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:00:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:00:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:00:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:00:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:01:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:01:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:01:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:01:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:02:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:02:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:02:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:02:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:03:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:03:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:04:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:04:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:04:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:04:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:04:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:04:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:05:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:05:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:05:02 [W] cypher_util.go 762: 14 not Exist, ignore & continue .
2021/01/26 16:05:02 [W] cypher_util.go 762: 14 not Exist, ignore & continue .
2021/01/26 16:05:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:05:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:05:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:05:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:05:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:05:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:05:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:05:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:05:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:05:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:05:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:05:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:05:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:05:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:05:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:06:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:06:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:06:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:06:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:06:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:06:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:06:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:06:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:06:23 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:12:9:   match("phonenumber:15005107680") <- [*1] - (:/matrix/action/calllog where  ((starttimestr >="2020-05-25 00:00:00" and starttimestr <="2020-05-25 23:59:59")    or (starttimestr >="2020-06-14 00:00:00" and starttimestr <="2020-06-14 23:59:59")) and (tophone =15005107680 or forphone =15005107680 ))
2021/01/26 16:06:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:06:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:06:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:06:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:06:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:06:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:06:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:06:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:06:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:06:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:06:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:06:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:06:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:06:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:06:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:07:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:07:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:07:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:07:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:07:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:07:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:07:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:07:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:07:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:07:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:07:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:07:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:07:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:07:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:07:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:07:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:07:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:07:51 [E] wjs.go 149: /bizApi/hdim/test/test_diagnosis_mobile.js:94:9:  map[message:Cannot access member 'graph' of undefined]
2021/01/26 16:08:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:08:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:08:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:08:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:08:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:08:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:08:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:08:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:08:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:08:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:08:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:08:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:08:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:08:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:09:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:09:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:09:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:09:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:09:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:09:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:09:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:09:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:09:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:09:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:09:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:09:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:09:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:09:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:09:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:09:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:09:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:09:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:09:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:09:31 [I] wjs.go 145: /bizApi/hdim/getOneRelaData.js:7:9:  ==============phonenumber:13046513888
2021/01/26 16:09:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:10:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:10:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:11:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:11:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:11:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:11:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:12:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:12:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:13:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:13:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:14:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:14:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:15:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:15:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:15:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:15:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:15:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:15:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:15:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:15:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:15:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:15:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:15:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:15:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:15:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:15:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:15:52 [W] query_util.go 869: can't find class for id[biz:数字国网] , search subdix of class!
2021/01/26 16:15:52 [W] cypher_util.go 762: biz:数字国网 not Exist, ignore & continue .
2021/01/26 16:15:52 [W] query_util.go 869: can't find class for id[biz:开发测试] , search subdix of class!
2021/01/26 16:15:52 [W] cypher_util.go 762: biz:开发测试 not Exist, ignore & continue .
2021/01/26 16:15:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:16:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:16:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:16:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:16:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:16:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:16:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:16:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:16:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:16:26 [E] wjs.go 149: /bizApi/hdim/test/test_diagnosis_mobile.js:94:9:  map[message:Cannot access member 'graph' of undefined]
2021/01/26 16:16:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:16:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:16:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:16:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:16:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:16:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:16:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:16:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:16:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:16:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:16:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:16:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:16:39 [E] wjs.go 149: /bizApi/hdim/test/test_diagnosis_mobile.js:94:9:  map[message:Cannot access member 'graph' of undefined]
2021/01/26 16:16:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:16:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:16:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:16:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:16:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:16:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:17:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:17:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:17:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:17:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:17:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:17:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:17:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:17:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:17:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:17:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:17:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:17:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:17:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:17:16 [W] query_util.go 869: can't find class for id[biz:数字国网] , search subdix of class!
2021/01/26 16:17:16 [W] cypher_util.go 762: biz:数字国网 not Exist, ignore & continue .
2021/01/26 16:17:16 [W] query_util.go 869: can't find class for id[biz:开发测试] , search subdix of class!
2021/01/26 16:17:16 [W] cypher_util.go 762: biz:开发测试 not Exist, ignore & continue .
2021/01/26 16:17:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:17:48 [I] auth.go 217: hdim.admin login success for get session.
2021/01/26 16:17:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:17:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:17:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:17:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:17:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:17:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:17:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:17:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:17:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:17:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:17:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:17:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:17:52 [W] query_util.go 869: can't find class for id[biz:数字国网] , search subdix of class!
2021/01/26 16:17:52 [W] cypher_util.go 762: biz:数字国网 not Exist, ignore & continue .
2021/01/26 16:17:52 [W] query_util.go 869: can't find class for id[biz:开发测试] , search subdix of class!
2021/01/26 16:17:52 [W] cypher_util.go 762: biz:开发测试 not Exist, ignore & continue .
2021/01/26 16:18:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:18:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:18:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:18:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:18:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:18:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:18:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:18:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:18:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:19:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:19:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:19:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:19:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:19:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:19:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:19:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:19:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:19:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:19:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:19:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:19:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:19:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:19:22 [W] query_util.go 869: can't find class for id[biz:数字国网] , search subdix of class!
2021/01/26 16:19:22 [W] cypher_util.go 762: biz:数字国网 not Exist, ignore & continue .
2021/01/26 16:19:22 [W] query_util.go 869: can't find class for id[biz:开发测试] , search subdix of class!
2021/01/26 16:19:22 [W] cypher_util.go 762: biz:开发测试 not Exist, ignore & continue .
2021/01/26 16:19:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:19:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:19:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:19:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:19:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:19:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:19:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:19:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:19:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:19:44 [E] wjs.go 149: /bizApi/hdim/test/test_diagnosis_mobile.js:94:9:  map[message:Cannot access member 'graph' of undefined]
2021/01/26 16:19:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:19:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:19:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:19:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:19:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:19:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:20:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:20:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:20:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:20:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:20:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:20:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:20:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:20:22 [E] wjs.go 149: /bizApi/hdim/test/test_diagnosis_mobile.js:94:9:  map[message:Cannot access member 'graph' of undefined]
2021/01/26 16:20:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:20:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:20:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:20:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:20:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:20:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:20:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:20:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:20:45 [I] wjs.go 145: /bizApi/hdim/getOneRelaData.js:7:9:  ==============phonenumber:15005107680
2021/01/26 16:20:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:20:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:20:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:20:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:20:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:20:54 [E] wjs.go 149: /bizApi/hdim/test/test_diagnosis_mobile.js:94:9:  map[message:Cannot access member 'graph' of undefined]
2021/01/26 16:20:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:21:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:21:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:21:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:21:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:21:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:21:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:21:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:21:53 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 16:21:53 [I] fs.go 56: Write data: var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
//var pId = decodeURIComponent(INPUT);
log.debug(111,pId)
//var pId = 'perbasisinfo:320911197112273412';

var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            //rtn.push("phonenumber:13046513888")
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(_.now(),v);
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                rtn.data[0].graph.nodes.push(n);
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 16:21:53 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 16:21:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:21:54 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 16:22:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:22:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:22:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:22:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:22:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:22:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:23:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:23:04 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/getDuanD.js PUT
2021/01/26 16:23:04 [I] fs.go 56: Write data: // 生成需要查询的时间范围
// 参数为天数 如：30代表以当前日期往前推30天
//从前台接收值
//var input = INPUT;
var input = "15005107680"; 
var date1=odb.mql(" select min(starttimestr)as mindate from /matrix/action/calllog where (forphone='"+input+"' or tophone='"+input+"')").data[0].mindate.slice(0,10); 
 
var date2=odb.mql(" select max(starttimestr)as maxdate from /matrix/action/calllog where (forphone='"+input+"' or tophone='"+input+"')").data[0].maxdate.slice(0,10); 
  
var days=daysDifference(new Date(date1),new Date(date2));
 
 log.info("计算出时间差，开始时间："+date1+"===结束时间===="+date2+"====时间差====="+days);
  function daysDifference(d0, d1) {
      var diff = new Date(+d1).setHours(12) - new Date(+d0).setHours(12);
      return Math.round(diff/8.64e7);
    }

var allDates = (function(count) {
    var rtn = [];
    try {
        for (var i = 0; i <= count; i++) {
            var dateTime=new Date(date1);
            dateTime=dateTime.setDate(dateTime.getDate()+i);
            dateTime=new Date(dateTime); 
            var nB = dateTime.toJSON().slice(0,10) ;
            var nE = dateTime.toJSON().slice(0,10);
            rtn.push({bTime: nB, eTime: nE});
        }
    } catch(err) {
        log.error(err);
        rtn = [];
    }

    return rtn;
})(days);


// 根据allDate，查询每个人的断档日期
var interruptDates = function(){ 
    var rtn = null;
    var cont=0;//获取数据库中的返回条数
    var index=1;//记录第几次断档
    var bdd=false;//记录是否断档
    var ddSj=[];//记录断档数组
    var ddsta=null;//这边记录下断档的开始时间
    var ddcount=0;//记录每次断档的天数 
    var lastDay=null;//记录最后一次的时间
    var befDay=null;
    var lastAddDay=null;//记录最后一次的时间再加一天
    try{
        var mql = "";
         odb.mql("delete from /matrix/action/broken where phone='"+input+"'")
        _.forEach(allDates,function(v){
           
         cont= odb.mql(" select count(*) as cnt from /matrix/action/calllog where  starttimestr >='" + v.bTime+ ' 00:00:00' + "' and starttimestr <='" + v.eTime + ' 23:59:59' + "' and (forphone='"+input+"')").data[0].cnt; 
         //log.info("==数量"+cont+"==日期"+v.bTime);
         if(cont <= 0){ 
             if(bdd==false){ 
                var dateTime=new Date(v.bTime);
                dateTime=dateTime.setDate(dateTime.getDate()-1);
                dateTime=new Date(dateTime); 
                befDay = dateTime.toJSON().slice(0,10) ; 
                ddsta=v.bTime;//只有在检测到是第一次断档的时候，加入个开始时间，在检测到有通话后会恢复为空
             } 
             ddcount++; 
             bdd=true;
             lastDay=v.bTime;
         }if(cont >0 && bdd==true){
              if(ddcount>=3){
                   
                var dateTimeo=new Date(lastDay);
                    dateTimeo=dateTimeo.setDate(dateTimeo.getDate()+1);
                    dateTimeo=new Date(dateTimeo); 
                    lastAddDay = dateTimeo.toJSON().slice(0,10) ; 
                var dd = {'index':index,'phone':input,'date':ddsta+"~"+ lastDay,"cs":ddcount,"befday":befDay,"lastday":lastAddDay}; 
                    odb.mql("insert into /matrix/action/broken  set index='"+index+"',phone='"+input+"',dates='"+ddsta+"~"+ lastDay+"',days='"+ddcount+"',id='broken:"+input+""+index+"',name='断档天数:"+ddcount+"天',brok='phonenumber:"+input+"',befday='"+befDay+"',lastday='"+lastAddDay+"'");
                     index++;
                    
                ddSj.push(dd);
              }
              
               ddcount=0; 
               ddsta=null;
             
               bdd=false;
         }
        
        })
        // log.info("==ddcount"+ddcount+"==bdd==="+bdd);
        if( bdd==true){
            
             if(ddcount>=3){
                var dateTimet=new Date(lastDay);
                    dateTimet=dateTimet.setDate(dateTimet.getDate()+1);
                    dateTimet=new Date(dateTimet); 
                    lastAddDay = dateTimet.toJSON().slice(0,10) ; 
                var dd = {'index':index,'phone':input,'date':ddsta+"~"+ lastDay,"cs":ddcount,"befday":befDay,"lastday":lastAddDay}; 
                     odb.mql("insert into /matrix/action/broken  set index='"+index+"',phone='"+input+"',dates='"+ddsta+"~"+ lastDay+"',days='"+ddcount+"',id='broken:"+input+""          +index+"',name='断档天数:"+ddcount+"天',brok='phonenumber:"+input+"',befday='"+befDay+"',lastday='"+lastAddDay+"'");
                ddSj.push(dd);
             }
        }
    }catch(err){
        log.error(err);
    }
    
   return  odb.mql("match('phonenumber:"+input+"')<-[:brok*1]-()");
     
};

OUTPUT = interruptDates();

2021/01/26 16:23:04 [I] fs.go 77: Write attr: {"remark":"","ctime":1611108661175,"author":"admin"}
2021/01/26 16:23:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:23:05 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/getDuanD.js POST
2021/01/26 16:23:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:23:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:23:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:23:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:23:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:23:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:23:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:23:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:23:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:23:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:23:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:23:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:23:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:23:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:23:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:23:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:23:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:23:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:23:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:23:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:24:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:24:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:24:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:24:12 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/getDuanD.js PUT
2021/01/26 16:24:12 [I] fs.go 56: Write data: // 生成需要查询的时间范围
// 参数为天数 如：30代表以当前日期往前推30天
//从前台接收值
//var input = INPUT;
var input = "15005107680"; 
var date1=odb.mql(" select min(starttimestr)as mindate from /matrix/action/calllog where (forphone='"+input+"' or tophone='"+input+"')").data[0].mindate.slice(0,10); 
 
var date2=odb.mql(" select max(starttimestr)as maxdate from /matrix/action/calllog where (forphone='"+input+"' or tophone='"+input+"')").data[0].maxdate.slice(0,10); 
  
var days=daysDifference(new Date(date1),new Date(date2));
 
 log.info("计算出时间差，开始时间："+date1+"===结束时间===="+date2+"====时间差====="+days);
  function daysDifference(d0, d1) {
      var diff = new Date(+d1).setHours(12) - new Date(+d0).setHours(12);
      return Math.round(diff/8.64e7);
    }

var allDates = (function(count) {
    var rtn = [];
    try {
        for (var i = 0; i <= count; i++) {
            var dateTime=new Date(date1);
            dateTime=dateTime.setDate(dateTime.getDate()+i);
            dateTime=new Date(dateTime); 
            var nB = dateTime.toJSON().slice(0,10) ;
            var nE = dateTime.toJSON().slice(0,10);
            rtn.push({bTime: nB, eTime: nE});
        }
    } catch(err) {
        log.error(err);
        rtn = [];
    }

    return rtn;
})(days);


// 根据allDate，查询每个人的断档日期
var interruptDates = function(){ 
    var rtn = null;
    var cont=0;//获取数据库中的返回条数
    var index=1;//记录第几次断档
    var bdd=false;//记录是否断档
    var ddSj=[];//记录断档数组
    var ddsta=null;//这边记录下断档的开始时间
    var ddcount=0;//记录每次断档的天数 
    var lastDay=null;//记录最后一次的时间
    var befDay=null;
    var lastAddDay=null;//记录最后一次的时间再加一天
    try{
        var mql = "";
         odb.mql("delete from /matrix/action/broken where phone='"+input+"'")
        _.forEach(allDates,function(v){
           
         cont= odb.mql(" select count(*) as cnt from /matrix/action/calllog where  starttimestr >='" + v.bTime+ ' 00:00:00' + "' and starttimestr <='" + v.eTime + ' 23:59:59' + "' and (forphone='"+input+"')").data[0].cnt; 
         //log.info("==数量"+cont+"==日期"+v.bTime);
         if(cont <= 0){ 
             if(bdd==false){ 
                var dateTime=new Date(v.bTime);
                dateTime=dateTime.setDate(dateTime.getDate()-1);
                dateTime=new Date(dateTime); 
                befDay = dateTime.toJSON().slice(0,10) ; 
                ddsta=v.bTime;//只有在检测到是第一次断档的时候，加入个开始时间，在检测到有通话后会恢复为空
             } 
             ddcount++; 
             bdd=true;
             lastDay=v.bTime;
         }if(cont >0 && bdd==true){
              if(ddcount>=3){
                   
                var dateTimeo=new Date(lastDay);
                    dateTimeo=dateTimeo.setDate(dateTimeo.getDate()+1);
                    dateTimeo=new Date(dateTimeo); 
                    lastAddDay = dateTimeo.toJSON().slice(0,10) ; 
                var dd = {'index':index,'phone':input,'date':ddsta+"~"+ lastDay,"cs":ddcount,"befday":befDay,"lastday":lastAddDay}; 
                    odb.mql("insert into /matrix/action/broken  set index='"+index+"',phone='"+input+"',dates='"+ddsta+"~"+ lastDay+"',days='"+ddcount+"',id='broken:"+input+""+index+"',name='断档天数:"+ddcount+"天',brok='phonenumber:"+input+"',befday='"+befDay+"',lastday='"+lastAddDay+"'");
                     index++;
                    
                ddSj.push(dd);
              }
              
               ddcount=0; 
               ddsta=null;
             
               bdd=false;
         }
        
        })
        // log.info("==ddcount"+ddcount+"==bdd==="+bdd);
        if( bdd==true){
            
             if(ddcount>=3){
                var dateTimet=new Date(lastDay);
                    dateTimet=dateTimet.setDate(dateTimet.getDate()+1);
                    dateTimet=new Date(dateTimet); 
                    lastAddDay = dateTimet.toJSON().slice(0,10) ; 
                var dd = {'index':index,'phone':input,'date':ddsta+"~"+ lastDay,"cs":ddcount,"befday":befDay,"lastday":lastAddDay}; 
                     odb.mql("insert into /matrix/action/broken  set index='"+index+"',phone='"+input+"',dates='"+ddsta+"~"+ lastDay+"',days='"+ddcount+"',id='broken:"+input+""          +index+"',name='断档天数:"+ddcount+"天',brok='phonenumber:"+input+"',befday='"+befDay+"',lastday='"+lastAddDay+"'");
                ddSj.push(dd);
             }
        }
    }catch(err){
        log.error(err);
    }
   
   return  odb.mql(" match ('phonenumber:"+input+"') <- [:brok*1] - ()");
     
};

OUTPUT = interruptDates();

2021/01/26 16:24:12 [I] fs.go 77: Write attr: {"remark":"","ctime":1611108661175,"author":"admin"}
2021/01/26 16:24:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:24:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:24:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:24:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:24:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:24:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:24:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:24:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:24:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:24:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:24:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:24:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:24:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:24:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:24:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:24:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:24:12 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/getDuanD.js POST
2021/01/26 16:24:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:24:16 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/getDuanD.js PUT
2021/01/26 16:24:16 [I] fs.go 56: Write data: // 生成需要查询的时间范围
// 参数为天数 如：30代表以当前日期往前推30天
//从前台接收值
//var input = INPUT;
var input = "15005107680"; 
var date1=odb.mql(" select min(starttimestr)as mindate from /matrix/action/calllog where (forphone='"+input+"' or tophone='"+input+"')").data[0].mindate.slice(0,10); 
 
var date2=odb.mql(" select max(starttimestr)as maxdate from /matrix/action/calllog where (forphone='"+input+"' or tophone='"+input+"')").data[0].maxdate.slice(0,10); 
  
var days=daysDifference(new Date(date1),new Date(date2));
 
 log.info("计算出时间差，开始时间："+date1+"===结束时间===="+date2+"====时间差====="+days);
  function daysDifference(d0, d1) {
      var diff = new Date(+d1).setHours(12) - new Date(+d0).setHours(12);
      return Math.round(diff/8.64e7);
    }

var allDates = (function(count) {
    var rtn = [];
    try {
        for (var i = 0; i <= count; i++) {
            var dateTime=new Date(date1);
            dateTime=dateTime.setDate(dateTime.getDate()+i);
            dateTime=new Date(dateTime); 
            var nB = dateTime.toJSON().slice(0,10) ;
            var nE = dateTime.toJSON().slice(0,10);
            rtn.push({bTime: nB, eTime: nE});
        }
    } catch(err) {
        log.error(err);
        rtn = [];
    }

    return rtn;
})(days);


// 根据allDate，查询每个人的断档日期
var interruptDates = function(){ 
    var rtn = null;
    var cont=0;//获取数据库中的返回条数
    var index=1;//记录第几次断档
    var bdd=false;//记录是否断档
    var ddSj=[];//记录断档数组
    var ddsta=null;//这边记录下断档的开始时间
    var ddcount=0;//记录每次断档的天数 
    var lastDay=null;//记录最后一次的时间
    var befDay=null;
    var lastAddDay=null;//记录最后一次的时间再加一天
    try{
        var mql = "";
         odb.mql("delete from /matrix/action/broken where phone='"+input+"'")
        _.forEach(allDates,function(v){
           
         cont= odb.mql(" select count(*) as cnt from /matrix/action/calllog where  starttimestr >='" + v.bTime+ ' 00:00:00' + "' and starttimestr <='" + v.eTime + ' 23:59:59' + "' and (forphone='"+input+"')").data[0].cnt; 
         //log.info("==数量"+cont+"==日期"+v.bTime);
         if(cont <= 0){ 
             if(bdd==false){ 
                var dateTime=new Date(v.bTime);
                dateTime=dateTime.setDate(dateTime.getDate()-1);
                dateTime=new Date(dateTime); 
                befDay = dateTime.toJSON().slice(0,10) ; 
                ddsta=v.bTime;//只有在检测到是第一次断档的时候，加入个开始时间，在检测到有通话后会恢复为空
             } 
             ddcount++; 
             bdd=true;
             lastDay=v.bTime;
         }if(cont >0 && bdd==true){
              if(ddcount>=3){
                   
                var dateTimeo=new Date(lastDay);
                    dateTimeo=dateTimeo.setDate(dateTimeo.getDate()+1);
                    dateTimeo=new Date(dateTimeo); 
                    lastAddDay = dateTimeo.toJSON().slice(0,10) ; 
                var dd = {'index':index,'phone':input,'date':ddsta+"~"+ lastDay,"cs":ddcount,"befday":befDay,"lastday":lastAddDay}; 
                    odb.mql("insert into /matrix/action/broken  set index='"+index+"',phone='"+input+"',dates='"+ddsta+"~"+ lastDay+"',days='"+ddcount+"',id='broken:"+input+""+index+"',name='断档天数:"+ddcount+"天',brok='phonenumber:"+input+"',befday='"+befDay+"',lastday='"+lastAddDay+"'");
                     index++;
                    
                ddSj.push(dd);
              }
              
               ddcount=0; 
               ddsta=null;
             
               bdd=false;
         }
        
        })
        // log.info("==ddcount"+ddcount+"==bdd==="+bdd);
        if( bdd==true){
            
             if(ddcount>=3){
                var dateTimet=new Date(lastDay);
                    dateTimet=dateTimet.setDate(dateTimet.getDate()+1);
                    dateTimet=new Date(dateTimet); 
                    lastAddDay = dateTimet.toJSON().slice(0,10) ; 
                var dd = {'index':index,'phone':input,'date':ddsta+"~"+ lastDay,"cs":ddcount,"befday":befDay,"lastday":lastAddDay}; 
                     odb.mql("insert into /matrix/action/broken  set index='"+index+"',phone='"+input+"',dates='"+ddsta+"~"+ lastDay+"',days='"+ddcount+"',id='broken:"+input+""          +index+"',name='断档天数:"+ddcount+"天',brok='phonenumber:"+input+"',befday='"+befDay+"',lastday='"+lastAddDay+"'");
                ddSj.push(dd);
             }
        }
    }catch(err){
        log.error(err);
    }
   
   return odb.mql(" match ('phonenumber:"+input+"') <- [:brok*1] - ()");
     
};

OUTPUT = interruptDates();

2021/01/26 16:24:16 [I] fs.go 77: Write attr: {"remark":"","ctime":1611108661175,"author":"admin"}
2021/01/26 16:24:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:24:17 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/getDuanD.js POST
2021/01/26 16:24:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:24:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:24:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:24:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:25:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:25:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:25:21 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/getDuanD.js PUT
2021/01/26 16:25:21 [I] fs.go 56: Write data: // 生成需要查询的时间范围
// 参数为天数 如：30代表以当前日期往前推30天
//从前台接收值
//var input = INPUT;
var input = "15005107680"; 
var date1=odb.mql(" select min(starttimestr)as mindate from /matrix/action/calllog where (forphone='"+input+"' or tophone='"+input+"')").data[0].mindate.slice(0,10); 
 
var date2=odb.mql(" select max(starttimestr)as maxdate from /matrix/action/calllog where (forphone='"+input+"' or tophone='"+input+"')").data[0].maxdate.slice(0,10); 
  
var days=daysDifference(new Date(date1),new Date(date2));
 
 log.info("计算出时间差，开始时间："+date1+"===结束时间===="+date2+"====时间差====="+days);
  function daysDifference(d0, d1) {
      var diff = new Date(+d1).setHours(12) - new Date(+d0).setHours(12);
      return Math.round(diff/8.64e7);
    }

var allDates = (function(count) {
    var rtn = [];
    try {
        for (var i = 0; i <= count; i++) {
            var dateTime=new Date(date1);
            dateTime=dateTime.setDate(dateTime.getDate()+i);
            dateTime=new Date(dateTime); 
            var nB = dateTime.toJSON().slice(0,10) ;
            var nE = dateTime.toJSON().slice(0,10);
            rtn.push({bTime: nB, eTime: nE});
        }
    } catch(err) {
        log.error(err);
        rtn = [];
    }

    return rtn;
})(days);


// 根据allDate，查询每个人的断档日期
var interruptDates = function(){ 
    var rtn = null;
    var cont=0;//获取数据库中的返回条数
    var index=1;//记录第几次断档
    var bdd=false;//记录是否断档
    var ddSj=[];//记录断档数组
    var ddsta=null;//这边记录下断档的开始时间
    var ddcount=0;//记录每次断档的天数 
    var lastDay=null;//记录最后一次的时间
    var befDay=null;
    var lastAddDay=null;//记录最后一次的时间再加一天
    try{
        var mql = "";
         odb.mql("delete from /matrix/action/broken where phone='"+input+"'")
        _.forEach(allDates,function(v){
           
         cont= odb.mql(" select count(*) as cnt from /matrix/action/calllog where  starttimestr >='" + v.bTime+ ' 00:00:00' + "' and starttimestr <='" + v.eTime + ' 23:59:59' + "' and (forphone='"+input+"')").data[0].cnt; 
         //log.info("==数量"+cont+"==日期"+v.bTime);
         if(cont <= 0){ 
             if(bdd==false){ 
                var dateTime=new Date(v.bTime);
                dateTime=dateTime.setDate(dateTime.getDate()-1);
                dateTime=new Date(dateTime); 
                befDay = dateTime.toJSON().slice(0,10) ; 
                ddsta=v.bTime;//只有在检测到是第一次断档的时候，加入个开始时间，在检测到有通话后会恢复为空
             } 
             ddcount++; 
             bdd=true;
             lastDay=v.bTime;
         }if(cont >0 && bdd==true){
              if(ddcount>=3){
                   
                var dateTimeo=new Date(lastDay);
                    dateTimeo=dateTimeo.setDate(dateTimeo.getDate()+1);
                    dateTimeo=new Date(dateTimeo); 
                    lastAddDay = dateTimeo.toJSON().slice(0,10) ; 
                var dd = {'index':index,'phone':input,'date':ddsta+"~"+ lastDay,"cs":ddcount,"befday":befDay,"lastday":lastAddDay}; 
                    odb.mql("insert into /matrix/action/broken  set index='"+index+"',phone='"+input+"',dates='"+ddsta+"~"+ lastDay+"',days='"+ddcount+"',id='broken:"+input+""+index+"',name='断档天数:"+ddcount+"天',brok='phonenumber:"+input+"',befday='"+befDay+"',lastday='"+lastAddDay+"'");
                     index++;
                    
                ddSj.push(dd);
              }
              
               ddcount=0; 
               ddsta=null;
             
               bdd=false;
         }
        
        })
        // log.info("==ddcount"+ddcount+"==bdd==="+bdd);
        if( bdd==true){
            
             if(ddcount>=3){
                var dateTimet=new Date(lastDay);
                    dateTimet=dateTimet.setDate(dateTimet.getDate()+1);
                    dateTimet=new Date(dateTimet); 
                    lastAddDay = dateTimet.toJSON().slice(0,10) ; 
                var dd = {'index':index,'phone':input,'date':ddsta+"~"+ lastDay,"cs":ddcount,"befday":befDay,"lastday":lastAddDay}; 
                     odb.mql("insert into /matrix/action/broken  set index='"+index+"',phone='"+input+"',dates='"+ddsta+"~"+ lastDay+"',days='"+ddcount+"',id='broken:"+input+""          +index+"',name='断档天数:"+ddcount+"天',brok='phonenumber:"+input+"',befday='"+befDay+"',lastday='"+lastAddDay+"'");
                ddSj.push(dd);
             }
        }
    }catch(err){
        log.error(err);
    }
   
   return odb.mql(" match ('phonenumber:"+input+"') <- [:brok*1] - ()");
     
};

OUTPUT = {
    "type": "breaktool",
    "data": {
            "break": interruptDates()
    }
}  

2021/01/26 16:25:21 [I] fs.go 77: Write attr: {"remark":"","ctime":1611108661175,"author":"admin"}
2021/01/26 16:25:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:25:22 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/getDuanD.js POST
2021/01/26 16:25:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:25:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:25:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:26:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:26:06 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/getDuanD.js PUT
2021/01/26 16:26:06 [I] fs.go 56: Write data: // 生成需要查询的时间范围
// 参数为天数 如：30代表以当前日期往前推30天
//从前台接收值
//var input = INPUT;
var input = "15005107680"; 
var phonenumber=odb.mql(" select min(starttimestr)as mindate from /matrix/action/calllog where id="+input+").data[0].mindate.slice(0,10);
var date1=odb.mql(" select min(starttimestr)as mindate from /matrix/action/calllog where (forphone='"+input+"' or tophone='"+input+"')").data[0].mindate.slice(0,10); 
 
var date2=odb.mql(" select max(starttimestr)as maxdate from /matrix/action/calllog where (forphone='"+input+"' or tophone='"+input+"')").data[0].maxdate.slice(0,10); 
  
var days=daysDifference(new Date(date1),new Date(date2));
 
 log.info("计算出时间差，开始时间："+date1+"===结束时间===="+date2+"====时间差====="+days);
  function daysDifference(d0, d1) {
      var diff = new Date(+d1).setHours(12) - new Date(+d0).setHours(12);
      return Math.round(diff/8.64e7);
    }

var allDates = (function(count) {
    var rtn = [];
    try {
        for (var i = 0; i <= count; i++) {
            var dateTime=new Date(date1);
            dateTime=dateTime.setDate(dateTime.getDate()+i);
            dateTime=new Date(dateTime); 
            var nB = dateTime.toJSON().slice(0,10) ;
            var nE = dateTime.toJSON().slice(0,10);
            rtn.push({bTime: nB, eTime: nE});
        }
    } catch(err) {
        log.error(err);
        rtn = [];
    }

    return rtn;
})(days);


// 根据allDate，查询每个人的断档日期
var interruptDates = function(){ 
    var rtn = null;
    var cont=0;//获取数据库中的返回条数
    var index=1;//记录第几次断档
    var bdd=false;//记录是否断档
    var ddSj=[];//记录断档数组
    var ddsta=null;//这边记录下断档的开始时间
    var ddcount=0;//记录每次断档的天数 
    var lastDay=null;//记录最后一次的时间
    var befDay=null;
    var lastAddDay=null;//记录最后一次的时间再加一天
    try{
        var mql = "";
         odb.mql("delete from /matrix/action/broken where phone='"+input+"'")
        _.forEach(allDates,function(v){
           
         cont= odb.mql(" select count(*) as cnt from /matrix/action/calllog where  starttimestr >='" + v.bTime+ ' 00:00:00' + "' and starttimestr <='" + v.eTime + ' 23:59:59' + "' and (forphone='"+input+"')").data[0].cnt; 
         //log.info("==数量"+cont+"==日期"+v.bTime);
         if(cont <= 0){ 
             if(bdd==false){ 
                var dateTime=new Date(v.bTime);
                dateTime=dateTime.setDate(dateTime.getDate()-1);
                dateTime=new Date(dateTime); 
                befDay = dateTime.toJSON().slice(0,10) ; 
                ddsta=v.bTime;//只有在检测到是第一次断档的时候，加入个开始时间，在检测到有通话后会恢复为空
             } 
             ddcount++; 
             bdd=true;
             lastDay=v.bTime;
         }if(cont >0 && bdd==true){
              if(ddcount>=3){
                   
                var dateTimeo=new Date(lastDay);
                    dateTimeo=dateTimeo.setDate(dateTimeo.getDate()+1);
                    dateTimeo=new Date(dateTimeo); 
                    lastAddDay = dateTimeo.toJSON().slice(0,10) ; 
                var dd = {'index':index,'phone':input,'date':ddsta+"~"+ lastDay,"cs":ddcount,"befday":befDay,"lastday":lastAddDay}; 
                    odb.mql("insert into /matrix/action/broken  set index='"+index+"',phone='"+input+"',dates='"+ddsta+"~"+ lastDay+"',days='"+ddcount+"',id='broken:"+input+""+index+"',name='断档天数:"+ddcount+"天',brok='phonenumber:"+input+"',befday='"+befDay+"',lastday='"+lastAddDay+"'");
                     index++;
                    
                ddSj.push(dd);
              }
              
               ddcount=0; 
               ddsta=null;
             
               bdd=false;
         }
        
        })
        // log.info("==ddcount"+ddcount+"==bdd==="+bdd);
        if( bdd==true){
            
             if(ddcount>=3){
                var dateTimet=new Date(lastDay);
                    dateTimet=dateTimet.setDate(dateTimet.getDate()+1);
                    dateTimet=new Date(dateTimet); 
                    lastAddDay = dateTimet.toJSON().slice(0,10) ; 
                var dd = {'index':index,'phone':input,'date':ddsta+"~"+ lastDay,"cs":ddcount,"befday":befDay,"lastday":lastAddDay}; 
                     odb.mql("insert into /matrix/action/broken  set index='"+index+"',phone='"+input+"',dates='"+ddsta+"~"+ lastDay+"',days='"+ddcount+"',id='broken:"+input+""          +index+"',name='断档天数:"+ddcount+"天',brok='phonenumber:"+input+"',befday='"+befDay+"',lastday='"+lastAddDay+"'");
                ddSj.push(dd);
             }
        }
    }catch(err){
        log.error(err);
    }
   
   return odb.mql(" match ('phonenumber:"+input+"') <- [:brok*1] - ()");
     
};

OUTPUT = {
    "type": "breaktool",
    "data": {
            "break": interruptDates()
    }
}  

2021/01/26 16:26:06 [I] fs.go 77: Write attr: {"remark":"","ctime":1611108661175,"author":"admin"}
2021/01/26 16:26:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:26:06 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/getDuanD.js POST
2021/01/26 16:26:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:26:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:26:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:26:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:26:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:26:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:26:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:26:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:26:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:26:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:26:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:26:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:26:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:26:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:26:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:26:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:26:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:26:50 [W] query_util.go 869: can't find class for id[biz:数字国网] , search subdix of class!
2021/01/26 16:26:50 [W] cypher_util.go 762: biz:数字国网 not Exist, ignore & continue .
2021/01/26 16:26:50 [W] query_util.go 869: can't find class for id[biz:开发测试] , search subdix of class!
2021/01/26 16:26:50 [W] cypher_util.go 762: biz:开发测试 not Exist, ignore & continue .
2021/01/26 16:26:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:26:54 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/getDuanD.js PUT
2021/01/26 16:26:54 [I] fs.go 56: Write data: // 生成需要查询的时间范围
// 参数为天数 如：30代表以当前日期往前推30天
//从前台接收值
//var input = INPUT;
var input = "15005107680"; 
var phonenumber=odb.mql(" select phonenumber from /matrix/entity/phonenumber where id="+input+").data[0].mindate;
var date1=odb.mql(" select min(starttimestr)as mindate from /matrix/action/calllog where (forphone='"+input+"' or tophone='"+input+"')").data[0].mindate.slice(0,10); 
 
var date2=odb.mql(" select max(starttimestr)as maxdate from /matrix/action/calllog where (forphone='"+input+"' or tophone='"+input+"')").data[0].maxdate.slice(0,10); 
  
var days=daysDifference(new Date(date1),new Date(date2));
 
 log.info("计算出时间差，开始时间："+date1+"===结束时间===="+date2+"====时间差====="+days);
  function daysDifference(d0, d1) {
      var diff = new Date(+d1).setHours(12) - new Date(+d0).setHours(12);
      return Math.round(diff/8.64e7);
    }

var allDates = (function(count) {
    var rtn = [];
    try {
        for (var i = 0; i <= count; i++) {
            var dateTime=new Date(date1);
            dateTime=dateTime.setDate(dateTime.getDate()+i);
            dateTime=new Date(dateTime); 
            var nB = dateTime.toJSON().slice(0,10) ;
            var nE = dateTime.toJSON().slice(0,10);
            rtn.push({bTime: nB, eTime: nE});
        }
    } catch(err) {
        log.error(err);
        rtn = [];
    }

    return rtn;
})(days);


// 根据allDate，查询每个人的断档日期
var interruptDates = function(){ 
    var rtn = null;
    var cont=0;//获取数据库中的返回条数
    var index=1;//记录第几次断档
    var bdd=false;//记录是否断档
    var ddSj=[];//记录断档数组
    var ddsta=null;//这边记录下断档的开始时间
    var ddcount=0;//记录每次断档的天数 
    var lastDay=null;//记录最后一次的时间
    var befDay=null;
    var lastAddDay=null;//记录最后一次的时间再加一天
    try{
        var mql = "";
         odb.mql("delete from /matrix/action/broken where phone='"+input+"'")
        _.forEach(allDates,function(v){
           
         cont= odb.mql(" select count(*) as cnt from /matrix/action/calllog where  starttimestr >='" + v.bTime+ ' 00:00:00' + "' and starttimestr <='" + v.eTime + ' 23:59:59' + "' and (forphone='"+input+"')").data[0].cnt; 
         //log.info("==数量"+cont+"==日期"+v.bTime);
         if(cont <= 0){ 
             if(bdd==false){ 
                var dateTime=new Date(v.bTime);
                dateTime=dateTime.setDate(dateTime.getDate()-1);
                dateTime=new Date(dateTime); 
                befDay = dateTime.toJSON().slice(0,10) ; 
                ddsta=v.bTime;//只有在检测到是第一次断档的时候，加入个开始时间，在检测到有通话后会恢复为空
             } 
             ddcount++; 
             bdd=true;
             lastDay=v.bTime;
         }if(cont >0 && bdd==true){
              if(ddcount>=3){
                   
                var dateTimeo=new Date(lastDay);
                    dateTimeo=dateTimeo.setDate(dateTimeo.getDate()+1);
                    dateTimeo=new Date(dateTimeo); 
                    lastAddDay = dateTimeo.toJSON().slice(0,10) ; 
                var dd = {'index':index,'phone':input,'date':ddsta+"~"+ lastDay,"cs":ddcount,"befday":befDay,"lastday":lastAddDay}; 
                    odb.mql("insert into /matrix/action/broken  set index='"+index+"',phone='"+input+"',dates='"+ddsta+"~"+ lastDay+"',days='"+ddcount+"',id='broken:"+input+""+index+"',name='断档天数:"+ddcount+"天',brok='phonenumber:"+input+"',befday='"+befDay+"',lastday='"+lastAddDay+"'");
                     index++;
                    
                ddSj.push(dd);
              }
              
               ddcount=0; 
               ddsta=null;
             
               bdd=false;
         }
        
        })
        // log.info("==ddcount"+ddcount+"==bdd==="+bdd);
        if( bdd==true){
            
             if(ddcount>=3){
                var dateTimet=new Date(lastDay);
                    dateTimet=dateTimet.setDate(dateTimet.getDate()+1);
                    dateTimet=new Date(dateTimet); 
                    lastAddDay = dateTimet.toJSON().slice(0,10) ; 
                var dd = {'index':index,'phone':input,'date':ddsta+"~"+ lastDay,"cs":ddcount,"befday":befDay,"lastday":lastAddDay}; 
                     odb.mql("insert into /matrix/action/broken  set index='"+index+"',phone='"+input+"',dates='"+ddsta+"~"+ lastDay+"',days='"+ddcount+"',id='broken:"+input+""          +index+"',name='断档天数:"+ddcount+"天',brok='phonenumber:"+input+"',befday='"+befDay+"',lastday='"+lastAddDay+"'");
                ddSj.push(dd);
             }
        }
    }catch(err){
        log.error(err);
    }
   
   return odb.mql(" match ('phonenumber:"+input+"') <- [:brok*1] - ()");
     
};

OUTPUT = {
    "type": "breaktool",
    "data": {
            "break": interruptDates()
    }
}  

2021/01/26 16:26:54 [I] fs.go 77: Write attr: {"remark":"","ctime":1611108661175,"author":"admin"}
2021/01/26 16:26:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:26:55 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/getDuanD.js POST
2021/01/26 16:26:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:26:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:26:59 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/getDuanD.js PUT
2021/01/26 16:26:59 [I] fs.go 56: Write data: // 生成需要查询的时间范围
// 参数为天数 如：30代表以当前日期往前推30天
//从前台接收值
//var input = INPUT;
var input = "15005107680"; 
var phonenumber=odb.mql(" select phonenumber from /matrix/entity/phonenumber where id="+input+").data[0].phonenumber;
var date1=odb.mql(" select min(starttimestr)as mindate from /matrix/action/calllog where (forphone='"+input+"' or tophone='"+input+"')").data[0].mindate.slice(0,10); 
 
var date2=odb.mql(" select max(starttimestr)as maxdate from /matrix/action/calllog where (forphone='"+input+"' or tophone='"+input+"')").data[0].maxdate.slice(0,10); 
  
var days=daysDifference(new Date(date1),new Date(date2));
 
 log.info("计算出时间差，开始时间："+date1+"===结束时间===="+date2+"====时间差====="+days);
  function daysDifference(d0, d1) {
      var diff = new Date(+d1).setHours(12) - new Date(+d0).setHours(12);
      return Math.round(diff/8.64e7);
    }

var allDates = (function(count) {
    var rtn = [];
    try {
        for (var i = 0; i <= count; i++) {
            var dateTime=new Date(date1);
            dateTime=dateTime.setDate(dateTime.getDate()+i);
            dateTime=new Date(dateTime); 
            var nB = dateTime.toJSON().slice(0,10) ;
            var nE = dateTime.toJSON().slice(0,10);
            rtn.push({bTime: nB, eTime: nE});
        }
    } catch(err) {
        log.error(err);
        rtn = [];
    }

    return rtn;
})(days);


// 根据allDate，查询每个人的断档日期
var interruptDates = function(){ 
    var rtn = null;
    var cont=0;//获取数据库中的返回条数
    var index=1;//记录第几次断档
    var bdd=false;//记录是否断档
    var ddSj=[];//记录断档数组
    var ddsta=null;//这边记录下断档的开始时间
    var ddcount=0;//记录每次断档的天数 
    var lastDay=null;//记录最后一次的时间
    var befDay=null;
    var lastAddDay=null;//记录最后一次的时间再加一天
    try{
        var mql = "";
         odb.mql("delete from /matrix/action/broken where phone='"+input+"'")
        _.forEach(allDates,function(v){
           
         cont= odb.mql(" select count(*) as cnt from /matrix/action/calllog where  starttimestr >='" + v.bTime+ ' 00:00:00' + "' and starttimestr <='" + v.eTime + ' 23:59:59' + "' and (forphone='"+input+"')").data[0].cnt; 
         //log.info("==数量"+cont+"==日期"+v.bTime);
         if(cont <= 0){ 
             if(bdd==false){ 
                var dateTime=new Date(v.bTime);
                dateTime=dateTime.setDate(dateTime.getDate()-1);
                dateTime=new Date(dateTime); 
                befDay = dateTime.toJSON().slice(0,10) ; 
                ddsta=v.bTime;//只有在检测到是第一次断档的时候，加入个开始时间，在检测到有通话后会恢复为空
             } 
             ddcount++; 
             bdd=true;
             lastDay=v.bTime;
         }if(cont >0 && bdd==true){
              if(ddcount>=3){
                   
                var dateTimeo=new Date(lastDay);
                    dateTimeo=dateTimeo.setDate(dateTimeo.getDate()+1);
                    dateTimeo=new Date(dateTimeo); 
                    lastAddDay = dateTimeo.toJSON().slice(0,10) ; 
                var dd = {'index':index,'phone':input,'date':ddsta+"~"+ lastDay,"cs":ddcount,"befday":befDay,"lastday":lastAddDay}; 
                    odb.mql("insert into /matrix/action/broken  set index='"+index+"',phone='"+input+"',dates='"+ddsta+"~"+ lastDay+"',days='"+ddcount+"',id='broken:"+input+""+index+"',name='断档天数:"+ddcount+"天',brok='phonenumber:"+input+"',befday='"+befDay+"',lastday='"+lastAddDay+"'");
                     index++;
                    
                ddSj.push(dd);
              }
              
               ddcount=0; 
               ddsta=null;
             
               bdd=false;
         }
        
        })
        // log.info("==ddcount"+ddcount+"==bdd==="+bdd);
        if( bdd==true){
            
             if(ddcount>=3){
                var dateTimet=new Date(lastDay);
                    dateTimet=dateTimet.setDate(dateTimet.getDate()+1);
                    dateTimet=new Date(dateTimet); 
                    lastAddDay = dateTimet.toJSON().slice(0,10) ; 
                var dd = {'index':index,'phone':input,'date':ddsta+"~"+ lastDay,"cs":ddcount,"befday":befDay,"lastday":lastAddDay}; 
                     odb.mql("insert into /matrix/action/broken  set index='"+index+"',phone='"+input+"',dates='"+ddsta+"~"+ lastDay+"',days='"+ddcount+"',id='broken:"+input+""          +index+"',name='断档天数:"+ddcount+"天',brok='phonenumber:"+input+"',befday='"+befDay+"',lastday='"+lastAddDay+"'");
                ddSj.push(dd);
             }
        }
    }catch(err){
        log.error(err);
    }
   
   return odb.mql(" match ('phonenumber:"+input+"') <- [:brok*1] - ()");
     
};

OUTPUT = {
    "type": "breaktool",
    "data": {
            "break": interruptDates()
    }
}  

2021/01/26 16:26:59 [I] fs.go 77: Write attr: {"remark":"","ctime":1611108661175,"author":"admin"}
2021/01/26 16:26:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:26:59 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/getDuanD.js POST
2021/01/26 16:27:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:27:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:27:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:27:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:27:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:27:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:27:18 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/getDuanD.js PUT
2021/01/26 16:27:18 [I] fs.go 56: Write data: // 生成需要查询的时间范围
// 参数为天数 如：30代表以当前日期往前推30天
//从前台接收值
var input = INPUT;
//var input = "15005107680"; 
var phonenumber=odb.mql(" select phonenumber from /matrix/entity/phonenumber where id="+input+"").data[0].phonenumber;
var date1=odb.mql(" select min(starttimestr)as mindate from /matrix/action/calllog where (forphone='"+input+"' or tophone='"+input+"')").data[0].mindate.slice(0,10); 
 
var date2=odb.mql(" select max(starttimestr)as maxdate from /matrix/action/calllog where (forphone='"+input+"' or tophone='"+input+"')").data[0].maxdate.slice(0,10); 
  
var days=daysDifference(new Date(date1),new Date(date2));
 
 log.info("计算出时间差，开始时间："+date1+"===结束时间===="+date2+"====时间差====="+days);
  function daysDifference(d0, d1) {
      var diff = new Date(+d1).setHours(12) - new Date(+d0).setHours(12);
      return Math.round(diff/8.64e7);
    }

var allDates = (function(count) {
    var rtn = [];
    try {
        for (var i = 0; i <= count; i++) {
            var dateTime=new Date(date1);
            dateTime=dateTime.setDate(dateTime.getDate()+i);
            dateTime=new Date(dateTime); 
            var nB = dateTime.toJSON().slice(0,10) ;
            var nE = dateTime.toJSON().slice(0,10);
            rtn.push({bTime: nB, eTime: nE});
        }
    } catch(err) {
        log.error(err);
        rtn = [];
    }

    return rtn;
})(days);


// 根据allDate，查询每个人的断档日期
var interruptDates = function(){ 
    var rtn = null;
    var cont=0;//获取数据库中的返回条数
    var index=1;//记录第几次断档
    var bdd=false;//记录是否断档
    var ddSj=[];//记录断档数组
    var ddsta=null;//这边记录下断档的开始时间
    var ddcount=0;//记录每次断档的天数 
    var lastDay=null;//记录最后一次的时间
    var befDay=null;
    var lastAddDay=null;//记录最后一次的时间再加一天
    try{
        var mql = "";
         odb.mql("delete from /matrix/action/broken where phone='"+input+"'")
        _.forEach(allDates,function(v){
           
         cont= odb.mql(" select count(*) as cnt from /matrix/action/calllog where  starttimestr >='" + v.bTime+ ' 00:00:00' + "' and starttimestr <='" + v.eTime + ' 23:59:59' + "' and (forphone='"+input+"')").data[0].cnt; 
         //log.info("==数量"+cont+"==日期"+v.bTime);
         if(cont <= 0){ 
             if(bdd==false){ 
                var dateTime=new Date(v.bTime);
                dateTime=dateTime.setDate(dateTime.getDate()-1);
                dateTime=new Date(dateTime); 
                befDay = dateTime.toJSON().slice(0,10) ; 
                ddsta=v.bTime;//只有在检测到是第一次断档的时候，加入个开始时间，在检测到有通话后会恢复为空
             } 
             ddcount++; 
             bdd=true;
             lastDay=v.bTime;
         }if(cont >0 && bdd==true){
              if(ddcount>=3){
                   
                var dateTimeo=new Date(lastDay);
                    dateTimeo=dateTimeo.setDate(dateTimeo.getDate()+1);
                    dateTimeo=new Date(dateTimeo); 
                    lastAddDay = dateTimeo.toJSON().slice(0,10) ; 
                var dd = {'index':index,'phone':input,'date':ddsta+"~"+ lastDay,"cs":ddcount,"befday":befDay,"lastday":lastAddDay}; 
                    odb.mql("insert into /matrix/action/broken  set index='"+index+"',phone='"+input+"',dates='"+ddsta+"~"+ lastDay+"',days='"+ddcount+"',id='broken:"+input+""+index+"',name='断档天数:"+ddcount+"天',brok='phonenumber:"+input+"',befday='"+befDay+"',lastday='"+lastAddDay+"'");
                     index++;
                    
                ddSj.push(dd);
              }
              
               ddcount=0; 
               ddsta=null;
             
               bdd=false;
         }
        
        })
        // log.info("==ddcount"+ddcount+"==bdd==="+bdd);
        if( bdd==true){
            
             if(ddcount>=3){
                var dateTimet=new Date(lastDay);
                    dateTimet=dateTimet.setDate(dateTimet.getDate()+1);
                    dateTimet=new Date(dateTimet); 
                    lastAddDay = dateTimet.toJSON().slice(0,10) ; 
                var dd = {'index':index,'phone':input,'date':ddsta+"~"+ lastDay,"cs":ddcount,"befday":befDay,"lastday":lastAddDay}; 
                     odb.mql("insert into /matrix/action/broken  set index='"+index+"',phone='"+input+"',dates='"+ddsta+"~"+ lastDay+"',days='"+ddcount+"',id='broken:"+input+""          +index+"',name='断档天数:"+ddcount+"天',brok='phonenumber:"+input+"',befday='"+befDay+"',lastday='"+lastAddDay+"'");
                ddSj.push(dd);
             }
        }
    }catch(err){
        log.error(err);
    }
   
   return odb.mql(" match ('phonenumber:"+input+"') <- [:brok*1] - ()");
     
};

OUTPUT = {
    "type": "breaktool",
    "data": {
            "break": interruptDates()
    }
}  

2021/01/26 16:27:18 [I] fs.go 77: Write attr: {"remark":"","ctime":1611108661175,"author":"admin"}
2021/01/26 16:27:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:27:19 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/getDuanD.js POST
2021/01/26 16:27:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:27:23 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/getDuanD.js PUT
2021/01/26 16:27:23 [I] fs.go 56: Write data: // 生成需要查询的时间范围
// 参数为天数 如：30代表以当前日期往前推30天
//从前台接收值
var input = INPUT;
//var input = "15005107680"; 
var phonenumber=odb.mql("select phonenumber from /matrix/entity/phonenumber where id="+input+"").data[0].phonenumber;
var date1=odb.mql(" select min(starttimestr)as mindate from /matrix/action/calllog where (forphone='"+input+"' or tophone='"+input+"')").data[0].mindate.slice(0,10); 
 
var date2=odb.mql(" select max(starttimestr)as maxdate from /matrix/action/calllog where (forphone='"+input+"' or tophone='"+input+"')").data[0].maxdate.slice(0,10); 
  
var days=daysDifference(new Date(date1),new Date(date2));
 
 log.info("计算出时间差，开始时间："+date1+"===结束时间===="+date2+"====时间差====="+days);
  function daysDifference(d0, d1) {
      var diff = new Date(+d1).setHours(12) - new Date(+d0).setHours(12);
      return Math.round(diff/8.64e7);
    }

var allDates = (function(count) {
    var rtn = [];
    try {
        for (var i = 0; i <= count; i++) {
            var dateTime=new Date(date1);
            dateTime=dateTime.setDate(dateTime.getDate()+i);
            dateTime=new Date(dateTime); 
            var nB = dateTime.toJSON().slice(0,10) ;
            var nE = dateTime.toJSON().slice(0,10);
            rtn.push({bTime: nB, eTime: nE});
        }
    } catch(err) {
        log.error(err);
        rtn = [];
    }

    return rtn;
})(days);


// 根据allDate，查询每个人的断档日期
var interruptDates = function(){ 
    var rtn = null;
    var cont=0;//获取数据库中的返回条数
    var index=1;//记录第几次断档
    var bdd=false;//记录是否断档
    var ddSj=[];//记录断档数组
    var ddsta=null;//这边记录下断档的开始时间
    var ddcount=0;//记录每次断档的天数 
    var lastDay=null;//记录最后一次的时间
    var befDay=null;
    var lastAddDay=null;//记录最后一次的时间再加一天
    try{
        var mql = "";
         odb.mql("delete from /matrix/action/broken where phone='"+input+"'")
        _.forEach(allDates,function(v){
           
         cont= odb.mql(" select count(*) as cnt from /matrix/action/calllog where  starttimestr >='" + v.bTime+ ' 00:00:00' + "' and starttimestr <='" + v.eTime + ' 23:59:59' + "' and (forphone='"+input+"')").data[0].cnt; 
         //log.info("==数量"+cont+"==日期"+v.bTime);
         if(cont <= 0){ 
             if(bdd==false){ 
                var dateTime=new Date(v.bTime);
                dateTime=dateTime.setDate(dateTime.getDate()-1);
                dateTime=new Date(dateTime); 
                befDay = dateTime.toJSON().slice(0,10) ; 
                ddsta=v.bTime;//只有在检测到是第一次断档的时候，加入个开始时间，在检测到有通话后会恢复为空
             } 
             ddcount++; 
             bdd=true;
             lastDay=v.bTime;
         }if(cont >0 && bdd==true){
              if(ddcount>=3){
                   
                var dateTimeo=new Date(lastDay);
                    dateTimeo=dateTimeo.setDate(dateTimeo.getDate()+1);
                    dateTimeo=new Date(dateTimeo); 
                    lastAddDay = dateTimeo.toJSON().slice(0,10) ; 
                var dd = {'index':index,'phone':input,'date':ddsta+"~"+ lastDay,"cs":ddcount,"befday":befDay,"lastday":lastAddDay}; 
                    odb.mql("insert into /matrix/action/broken  set index='"+index+"',phone='"+input+"',dates='"+ddsta+"~"+ lastDay+"',days='"+ddcount+"',id='broken:"+input+""+index+"',name='断档天数:"+ddcount+"天',brok='phonenumber:"+input+"',befday='"+befDay+"',lastday='"+lastAddDay+"'");
                     index++;
                    
                ddSj.push(dd);
              }
              
               ddcount=0; 
               ddsta=null;
             
               bdd=false;
         }
        
        })
        // log.info("==ddcount"+ddcount+"==bdd==="+bdd);
        if( bdd==true){
            
             if(ddcount>=3){
                var dateTimet=new Date(lastDay);
                    dateTimet=dateTimet.setDate(dateTimet.getDate()+1);
                    dateTimet=new Date(dateTimet); 
                    lastAddDay = dateTimet.toJSON().slice(0,10) ; 
                var dd = {'index':index,'phone':input,'date':ddsta+"~"+ lastDay,"cs":ddcount,"befday":befDay,"lastday":lastAddDay}; 
                     odb.mql("insert into /matrix/action/broken  set index='"+index+"',phone='"+input+"',dates='"+ddsta+"~"+ lastDay+"',days='"+ddcount+"',id='broken:"+input+""          +index+"',name='断档天数:"+ddcount+"天',brok='phonenumber:"+input+"',befday='"+befDay+"',lastday='"+lastAddDay+"'");
                ddSj.push(dd);
             }
        }
    }catch(err){
        log.error(err);
    }
   
   return odb.mql(" match ('phonenumber:"+input+"') <- [:brok*1] - ()");
     
};

OUTPUT = {
    "type": "breaktool",
    "data": {
            "break": interruptDates()
    }
}  

2021/01/26 16:27:23 [I] fs.go 77: Write attr: {"remark":"","ctime":1611108661175,"author":"admin"}
2021/01/26 16:27:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:27:24 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/getDuanD.js POST
2021/01/26 16:27:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:27:36 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/getDuanD.js PUT
2021/01/26 16:27:36 [I] fs.go 56: Write data: // 生成需要查询的时间范围
// 参数为天数 如：30代表以当前日期往前推30天
//从前台接收值
var input = INPUT;
//var input = "15005107680"; 
var phonenumber=odb.mql("select phonenumber from /matrix/entity/phonenumber where id="+input+"").data[0].phonenumber;
var date1=odb.mql(" select min(starttimestr)as mindate from /matrix/action/calllog where (forphone='"+phonenumber+"' or tophone='"+phonenumber+"')").data[0].mindate.slice(0,10); 
 
var date2=odb.mql(" select max(starttimestr)as maxdate from /matrix/action/calllog where (forphone='"+phonenumber+"' or tophone='"+phonenumber+"')").data[0].maxdate.slice(0,10); 
  
var days=daysDifference(new Date(date1),new Date(date2));
 
 log.info("计算出时间差，开始时间："+date1+"===结束时间===="+date2+"====时间差====="+days);
  function daysDifference(d0, d1) {
      var diff = new Date(+d1).setHours(12) - new Date(+d0).setHours(12);
      return Math.round(diff/8.64e7);
    }

var allDates = (function(count) {
    var rtn = [];
    try {
        for (var i = 0; i <= count; i++) {
            var dateTime=new Date(date1);
            dateTime=dateTime.setDate(dateTime.getDate()+i);
            dateTime=new Date(dateTime); 
            var nB = dateTime.toJSON().slice(0,10) ;
            var nE = dateTime.toJSON().slice(0,10);
            rtn.push({bTime: nB, eTime: nE});
        }
    } catch(err) {
        log.error(err);
        rtn = [];
    }

    return rtn;
})(days);


// 根据allDate，查询每个人的断档日期
var interruptDates = function(){ 
    var rtn = null;
    var cont=0;//获取数据库中的返回条数
    var index=1;//记录第几次断档
    var bdd=false;//记录是否断档
    var ddSj=[];//记录断档数组
    var ddsta=null;//这边记录下断档的开始时间
    var ddcount=0;//记录每次断档的天数 
    var lastDay=null;//记录最后一次的时间
    var befDay=null;
    var lastAddDay=null;//记录最后一次的时间再加一天
    try{
        var mql = "";
         odb.mql("delete from /matrix/action/broken where phone='"+input+"'")
        _.forEach(allDates,function(v){
           
         cont= odb.mql(" select count(*) as cnt from /matrix/action/calllog where  starttimestr >='" + v.bTime+ ' 00:00:00' + "' and starttimestr <='" + v.eTime + ' 23:59:59' + "' and (forphone='"+input+"')").data[0].cnt; 
         //log.info("==数量"+cont+"==日期"+v.bTime);
         if(cont <= 0){ 
             if(bdd==false){ 
                var dateTime=new Date(v.bTime);
                dateTime=dateTime.setDate(dateTime.getDate()-1);
                dateTime=new Date(dateTime); 
                befDay = dateTime.toJSON().slice(0,10) ; 
                ddsta=v.bTime;//只有在检测到是第一次断档的时候，加入个开始时间，在检测到有通话后会恢复为空
             } 
             ddcount++; 
             bdd=true;
             lastDay=v.bTime;
         }if(cont >0 && bdd==true){
              if(ddcount>=3){
                   
                var dateTimeo=new Date(lastDay);
                    dateTimeo=dateTimeo.setDate(dateTimeo.getDate()+1);
                    dateTimeo=new Date(dateTimeo); 
                    lastAddDay = dateTimeo.toJSON().slice(0,10) ; 
                var dd = {'index':index,'phone':input,'date':ddsta+"~"+ lastDay,"cs":ddcount,"befday":befDay,"lastday":lastAddDay}; 
                    odb.mql("insert into /matrix/action/broken  set index='"+index+"',phone='"+input+"',dates='"+ddsta+"~"+ lastDay+"',days='"+ddcount+"',id='broken:"+input+""+index+"',name='断档天数:"+ddcount+"天',brok='phonenumber:"+input+"',befday='"+befDay+"',lastday='"+lastAddDay+"'");
                     index++;
                    
                ddSj.push(dd);
              }
              
               ddcount=0; 
               ddsta=null;
             
               bdd=false;
         }
        
        })
        // log.info("==ddcount"+ddcount+"==bdd==="+bdd);
        if( bdd==true){
            
             if(ddcount>=3){
                var dateTimet=new Date(lastDay);
                    dateTimet=dateTimet.setDate(dateTimet.getDate()+1);
                    dateTimet=new Date(dateTimet); 
                    lastAddDay = dateTimet.toJSON().slice(0,10) ; 
                var dd = {'index':index,'phone':input,'date':ddsta+"~"+ lastDay,"cs":ddcount,"befday":befDay,"lastday":lastAddDay}; 
                     odb.mql("insert into /matrix/action/broken  set index='"+index+"',phone='"+input+"',dates='"+ddsta+"~"+ lastDay+"',days='"+ddcount+"',id='broken:"+input+""          +index+"',name='断档天数:"+ddcount+"天',brok='phonenumber:"+input+"',befday='"+befDay+"',lastday='"+lastAddDay+"'");
                ddSj.push(dd);
             }
        }
    }catch(err){
        log.error(err);
    }
   
   return odb.mql(" match ('phonenumber:"+input+"') <- [:brok*1] - ()");
     
};

OUTPUT = {
    "type": "breaktool",
    "data": {
            "break": interruptDates()
    }
}  

2021/01/26 16:27:36 [I] fs.go 77: Write attr: {"remark":"","ctime":1611108661175,"author":"admin"}
2021/01/26 16:27:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:27:37 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/getDuanD.js POST
2021/01/26 16:27:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:27:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:27:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:27:43 [W] cypher_util.go 762: 5 not Exist, ignore & continue .
2021/01/26 16:27:43 [W] cypher_util.go 762: 5 not Exist, ignore & continue .
2021/01/26 16:27:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:27:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:27:54 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/getDuanD.js PUT
2021/01/26 16:27:54 [I] fs.go 56: Write data: // 生成需要查询的时间范围
// 参数为天数 如：30代表以当前日期往前推30天
//从前台接收值
var input = INPUT;
//var input = "15005107680"; 
var phonenumber=odb.mql("select phonenumber from /matrix/entity/phonenumber where id="+input+"").data[0].phonenumber;
var date1=odb.mql(" select min(starttimestr)as mindate from /matrix/action/calllog where (forphone='"+phonenumber+"' or tophone='"+phonenumber+"')").data[0].mindate.slice(0,10); 
 
var date2=odb.mql(" select max(starttimestr)as maxdate from /matrix/action/calllog where (forphone='"+phonenumber+"' or tophone='"+phonenumber+"')").data[0].maxdate.slice(0,10); 
  
var days=daysDifference(new Date(date1),new Date(date2));
 
 log.info("计算出时间差，开始时间："+date1+"===结束时间===="+date2+"====时间差====="+days);
  function daysDifference(d0, d1) {
      var diff = new Date(+d1).setHours(12) - new Date(+d0).setHours(12);
      return Math.round(diff/8.64e7);
    }

var allDates = (function(count) {
    var rtn = [];
    try {
        for (var i = 0; i <= count; i++) {
            var dateTime=new Date(date1);
            dateTime=dateTime.setDate(dateTime.getDate()+i);
            dateTime=new Date(dateTime); 
            var nB = dateTime.toJSON().slice(0,10) ;
            var nE = dateTime.toJSON().slice(0,10);
            rtn.push({bTime: nB, eTime: nE});
        }
    } catch(err) {
        log.error(err);
        rtn = [];
    }

    return rtn;
})(days);


// 根据allDate，查询每个人的断档日期
var interruptDates = function(){ 
    var rtn = null;
    var cont=0;//获取数据库中的返回条数
    var index=1;//记录第几次断档
    var bdd=false;//记录是否断档
    var ddSj=[];//记录断档数组
    var ddsta=null;//这边记录下断档的开始时间
    var ddcount=0;//记录每次断档的天数 
    var lastDay=null;//记录最后一次的时间
    var befDay=null;
    var lastAddDay=null;//记录最后一次的时间再加一天
    try{
        var mql = "";
         odb.mql("delete from /matrix/action/broken where phone='"+phonenumber+"'")
        _.forEach(allDates,function(v){
           
         cont= odb.mql(" select count(*) as cnt from /matrix/action/calllog where  starttimestr >='" + v.bTime+ ' 00:00:00' + "' and starttimestr <='" + v.eTime + ' 23:59:59' + "' and (forphone='"+phonenumber+"')").data[0].cnt; 
         //log.info("==数量"+cont+"==日期"+v.bTime);
         if(cont <= 0){ 
             if(bdd==false){ 
                var dateTime=new Date(v.bTime);
                dateTime=dateTime.setDate(dateTime.getDate()-1);
                dateTime=new Date(dateTime); 
                befDay = dateTime.toJSON().slice(0,10) ; 
                ddsta=v.bTime;//只有在检测到是第一次断档的时候，加入个开始时间，在检测到有通话后会恢复为空
             } 
             ddcount++; 
             bdd=true;
             lastDay=v.bTime;
         }if(cont >0 && bdd==true){
              if(ddcount>=3){
                   
                var dateTimeo=new Date(lastDay);
                    dateTimeo=dateTimeo.setDate(dateTimeo.getDate()+1);
                    dateTimeo=new Date(dateTimeo); 
                    lastAddDay = dateTimeo.toJSON().slice(0,10) ; 
                var dd = {'index':index,'phone':input,'date':ddsta+"~"+ lastDay,"cs":ddcount,"befday":befDay,"lastday":lastAddDay}; 
                    odb.mql("insert into /matrix/action/broken  set index='"+index+"',phone='"+input+"',dates='"+ddsta+"~"+ lastDay+"',days='"+ddcount+"',id='broken:"+input+""+index+"',name='断档天数:"+ddcount+"天',brok='phonenumber:"+input+"',befday='"+befDay+"',lastday='"+lastAddDay+"'");
                     index++;
                    
                ddSj.push(dd);
              }
              
               ddcount=0; 
               ddsta=null;
             
               bdd=false;
         }
        
        })
        // log.info("==ddcount"+ddcount+"==bdd==="+bdd);
        if( bdd==true){
            
             if(ddcount>=3){
                var dateTimet=new Date(lastDay);
                    dateTimet=dateTimet.setDate(dateTimet.getDate()+1);
                    dateTimet=new Date(dateTimet); 
                    lastAddDay = dateTimet.toJSON().slice(0,10) ; 
                var dd = {'index':index,'phone':input,'date':ddsta+"~"+ lastDay,"cs":ddcount,"befday":befDay,"lastday":lastAddDay}; 
                     odb.mql("insert into /matrix/action/broken  set index='"+index+"',phone='"+input+"',dates='"+ddsta+"~"+ lastDay+"',days='"+ddcount+"',id='broken:"+input+""          +index+"',name='断档天数:"+ddcount+"天',brok='phonenumber:"+input+"',befday='"+befDay+"',lastday='"+lastAddDay+"'");
                ddSj.push(dd);
             }
        }
    }catch(err){
        log.error(err);
    }
   
   return odb.mql(" match ('phonenumber:"+input+"') <- [:brok*1] - ()");
     
};

OUTPUT = {
    "type": "breaktool",
    "data": {
            "break": interruptDates()
    }
}  

2021/01/26 16:27:54 [I] fs.go 77: Write attr: {"remark":"","ctime":1611108661175,"author":"admin"}
2021/01/26 16:27:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:27:55 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/getDuanD.js POST
2021/01/26 16:28:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:28:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:28:37 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/getDuanD.js PUT
2021/01/26 16:28:37 [I] fs.go 56: Write data: // 生成需要查询的时间范围
// 参数为天数 如：30代表以当前日期往前推30天
//从前台接收值
var input = INPUT;
//var input = "15005107680"; 
var phonenumber=odb.mql("select phonenumber from /matrix/entity/phonenumber where id="+input+"").data[0].phonenumber;
var date1=odb.mql(" select min(starttimestr)as mindate from /matrix/action/calllog where (forphone='"+phonenumber+"' or tophone='"+phonenumber+"')").data[0].mindate.slice(0,10); 
 
var date2=odb.mql(" select max(starttimestr)as maxdate from /matrix/action/calllog where (forphone='"+phonenumber+"' or tophone='"+phonenumber+"')").data[0].maxdate.slice(0,10); 
  
var days=daysDifference(new Date(date1),new Date(date2));
 
 log.info("计算出时间差，开始时间："+date1+"===结束时间===="+date2+"====时间差====="+days);
  function daysDifference(d0, d1) {
      var diff = new Date(+d1).setHours(12) - new Date(+d0).setHours(12);
      return Math.round(diff/8.64e7);
    }

var allDates = (function(count) {
    var rtn = [];
    try {
        for (var i = 0; i <= count; i++) {
            var dateTime=new Date(date1);
            dateTime=dateTime.setDate(dateTime.getDate()+i);
            dateTime=new Date(dateTime); 
            var nB = dateTime.toJSON().slice(0,10) ;
            var nE = dateTime.toJSON().slice(0,10);
            rtn.push({bTime: nB, eTime: nE});
        }
    } catch(err) {
        log.error(err);
        rtn = [];
    }

    return rtn;
})(days);


// 根据allDate，查询每个人的断档日期
var interruptDates = function(){ 
    var rtn = null;
    var cont=0;//获取数据库中的返回条数
    var index=1;//记录第几次断档
    var bdd=false;//记录是否断档
    var ddSj=[];//记录断档数组
    var ddsta=null;//这边记录下断档的开始时间
    var ddcount=0;//记录每次断档的天数 
    var lastDay=null;//记录最后一次的时间
    var befDay=null;
    var lastAddDay=null;//记录最后一次的时间再加一天
    try{
        var mql = "";
         odb.mql("delete from /matrix/action/broken where phone='"+phonenumber+"'")
        _.forEach(allDates,function(v){
           
         cont= odb.mql(" select count(*) as cnt from /matrix/action/calllog where  starttimestr >='" + v.bTime+ ' 00:00:00' + "' and starttimestr <='" + v.eTime + ' 23:59:59' + "' and (forphone='"+phonenumber+"')").data[0].cnt; 
         //log.info("==数量"+cont+"==日期"+v.bTime);
         if(cont <= 0){ 
             if(bdd==false){ 
                var dateTime=new Date(v.bTime);
                dateTime=dateTime.setDate(dateTime.getDate()-1);
                dateTime=new Date(dateTime); 
                befDay = dateTime.toJSON().slice(0,10) ; 
                ddsta=v.bTime;//只有在检测到是第一次断档的时候，加入个开始时间，在检测到有通话后会恢复为空
             } 
             ddcount++; 
             bdd=true;
             lastDay=v.bTime;
         }if(cont >0 && bdd==true){
              if(ddcount>=3){
                   
                var dateTimeo=new Date(lastDay);
                    dateTimeo=dateTimeo.setDate(dateTimeo.getDate()+1);
                    dateTimeo=new Date(dateTimeo); 
                    lastAddDay = dateTimeo.toJSON().slice(0,10) ; 
                var dd = {'index':index,'phone':input,'date':ddsta+"~"+ lastDay,"cs":ddcount,"befday":befDay,"lastday":lastAddDay}; 
                    odb.mql("insert into /matrix/action/broken  set index='"+index+"',phone='"+phonenumber+"',dates='"+ddsta+"~"+ lastDay+"',days='"+ddcount+"',id='broken:"+phonenumber+""+index+"',name='断档天数:"+ddcount+"天',brok='phonenumber:"+phonenumber+"',befday='"+befDay+"',lastday='"+lastAddDay+"'");
                     index++;
                    
                ddSj.push(dd);
              }
              
               ddcount=0; 
               ddsta=null;
             
               bdd=false;
         }
        
        })
        // log.info("==ddcount"+ddcount+"==bdd==="+bdd);
        if( bdd==true){
            
             if(ddcount>=3){
                var dateTimet=new Date(lastDay);
                    dateTimet=dateTimet.setDate(dateTimet.getDate()+1);
                    dateTimet=new Date(dateTimet); 
                    lastAddDay = dateTimet.toJSON().slice(0,10) ; 
                var dd = {'index':index,'phone':phonenumber,'date':ddsta+"~"+ lastDay,"cs":ddcount,"befday":befDay,"lastday":lastAddDay}; 
                     odb.mql("insert into /matrix/action/broken  set index='"+index+"',phone='"+phonenumber+"',dates='"+ddsta+"~"+ lastDay+"',days='"+ddcount+"',id='broken:"+phonenumber+""+index+"',name='断档天数:"+ddcount+"天',brok='phonenumber:"+phonenumber+"',befday='"+befDay+"',lastday='"+lastAddDay+"'");
                ddSj.push(dd);
             }
        }
    }catch(err){
        log.error(err);
    }
   
   return odb.mql(" match ('phonenumber:"+input+"') <- [:brok*1] - ()");
     
};

OUTPUT = {
    "type": "breaktool",
    "data": {
            "break": interruptDates()
    }
}  

2021/01/26 16:28:37 [I] fs.go 77: Write attr: {"remark":"","ctime":1611108661175,"author":"admin"}
2021/01/26 16:28:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:28:37 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/getDuanD.js POST
2021/01/26 16:28:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:28:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:28:54 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/getDuanD.js PUT
2021/01/26 16:28:54 [I] fs.go 56: Write data: // 生成需要查询的时间范围
// 参数为天数 如：30代表以当前日期往前推30天
//从前台接收值
var input = INPUT;
//var input = "15005107680"; 
var phonenumber=odb.mql("select phonenumber from /matrix/entity/phonenumber where id="+input+"").data[0].phonenumber;
var date1=odb.mql(" select min(starttimestr)as mindate from /matrix/action/calllog where (forphone='"+phonenumber+"' or tophone='"+phonenumber+"')").data[0].mindate.slice(0,10); 
 
var date2=odb.mql(" select max(starttimestr)as maxdate from /matrix/action/calllog where (forphone='"+phonenumber+"' or tophone='"+phonenumber+"')").data[0].maxdate.slice(0,10); 
  
var days=daysDifference(new Date(date1),new Date(date2));
 
 log.info("计算出时间差，开始时间："+date1+"===结束时间===="+date2+"====时间差====="+days);
  function daysDifference(d0, d1) {
      var diff = new Date(+d1).setHours(12) - new Date(+d0).setHours(12);
      return Math.round(diff/8.64e7);
    }

var allDates = (function(count) {
    var rtn = [];
    try {
        for (var i = 0; i <= count; i++) {
            var dateTime=new Date(date1);
            dateTime=dateTime.setDate(dateTime.getDate()+i);
            dateTime=new Date(dateTime); 
            var nB = dateTime.toJSON().slice(0,10) ;
            var nE = dateTime.toJSON().slice(0,10);
            rtn.push({bTime: nB, eTime: nE});
        }
    } catch(err) {
        log.error(err);
        rtn = [];
    }

    return rtn;
})(days);


// 根据allDate，查询每个人的断档日期
var interruptDates = function(){ 
    var rtn = null;
    var cont=0;//获取数据库中的返回条数
    var index=1;//记录第几次断档
    var bdd=false;//记录是否断档
    var ddSj=[];//记录断档数组
    var ddsta=null;//这边记录下断档的开始时间
    var ddcount=0;//记录每次断档的天数 
    var lastDay=null;//记录最后一次的时间
    var befDay=null;
    var lastAddDay=null;//记录最后一次的时间再加一天
    try{
        var mql = "";
         odb.mql("delete from /matrix/action/broken where phone='"+phonenumber+"'")
        _.forEach(allDates,function(v){
           
         cont= odb.mql(" select count(*) as cnt from /matrix/action/calllog where  starttimestr >='" + v.bTime+ ' 00:00:00' + "' and starttimestr <='" + v.eTime + ' 23:59:59' + "' and (forphone='"+phonenumber+"')").data[0].cnt; 
         //log.info("==数量"+cont+"==日期"+v.bTime);
         if(cont <= 0){ 
             if(bdd==false){ 
                var dateTime=new Date(v.bTime);
                dateTime=dateTime.setDate(dateTime.getDate()-1);
                dateTime=new Date(dateTime); 
                befDay = dateTime.toJSON().slice(0,10) ; 
                ddsta=v.bTime;//只有在检测到是第一次断档的时候，加入个开始时间，在检测到有通话后会恢复为空
             } 
             ddcount++; 
             bdd=true;
             lastDay=v.bTime;
         }if(cont >0 && bdd==true){
              if(ddcount>=3){
                   
                var dateTimeo=new Date(lastDay);
                    dateTimeo=dateTimeo.setDate(dateTimeo.getDate()+1);
                    dateTimeo=new Date(dateTimeo); 
                    lastAddDay = dateTimeo.toJSON().slice(0,10) ; 
                var dd = {'index':index,'phone':input,'date':ddsta+"~"+ lastDay,"cs":ddcount,"befday":befDay,"lastday":lastAddDay}; 
                    odb.mql("insert into /matrix/action/broken  set index='"+index+"',phone='"+phonenumber+"',dates='"+ddsta+"~"+ lastDay+"',days='"+ddcount+"',id='broken:"+phonenumber+""+index+"',name='断档天数:"+ddcount+"天',brok='phonenumber:"+phonenumber+"',befday='"+befDay+"',lastday='"+lastAddDay+"'");
                     index++;
                    
                ddSj.push(dd);
              }
              
               ddcount=0; 
               ddsta=null;
             
               bdd=false;
         }
        
        })
        // log.info("==ddcount"+ddcount+"==bdd==="+bdd);
        if( bdd==true){
            
             if(ddcount>=3){
                var dateTimet=new Date(lastDay);
                    dateTimet=dateTimet.setDate(dateTimet.getDate()+1);
                    dateTimet=new Date(dateTimet); 
                    lastAddDay = dateTimet.toJSON().slice(0,10) ; 
                var dd = {'index':index,'phone':phonenumber,'date':ddsta+"~"+ lastDay,"cs":ddcount,"befday":befDay,"lastday":lastAddDay}; 
                     odb.mql("insert into /matrix/action/broken  set index='"+index+"',phone='"+phonenumber+"',dates='"+ddsta+"~"+ lastDay+"',days='"+ddcount+"',id='broken:"+phonenumber+""+index+"',name='断档天数:"+ddcount+"天',brok='phonenumber:"+phonenumber+"',befday='"+befDay+"',lastday='"+lastAddDay+"'");
                ddSj.push(dd);
             }
        }
    }catch(err){
        log.error(err);
    }
   
   return odb.mql(" match ('phonenumber:"+phonenumber+"') <- [:brok*1] - ()");
     
};

OUTPUT = {
    "type": "breaktool",
    "data": {
            "break": interruptDates()
    }
}  

2021/01/26 16:28:54 [I] fs.go 77: Write attr: {"remark":"","ctime":1611108661175,"author":"admin"}
2021/01/26 16:28:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:28:55 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/getDuanD.js POST
2021/01/26 16:29:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:29:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:29:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:29:54 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/getDuanD.js PUT
2021/01/26 16:29:54 [I] fs.go 56: Write data: // 生成需要查询的时间范围
// 参数为天数 如：30代表以当前日期往前推30天
//从前台接收值
var input = INPUT;
//var input = "15005107680"; 
var phonenumber=odb.mql("select phonenumber from /matrix/entity/phonenumber where id="+input+"").data[0].phonenumber;
var date1=odb.mql(" select min(starttimestr)as mindate from /matrix/action/calllog where (forphone='"+phonenumber+"' or tophone='"+phonenumber+"')").data[0].mindate.slice(0,10); 
 
var date2=odb.mql(" select max(starttimestr)as maxdate from /matrix/action/calllog where (forphone='"+phonenumber+"' or tophone='"+phonenumber+"')").data[0].maxdate.slice(0,10); 
  
var days=daysDifference(new Date(date1),new Date(date2));
 
 log.info("计算出时间差，开始时间："+date1+"===结束时间===="+date2+"====时间差====="+days);
  function daysDifference(d0, d1) {
      var diff = new Date(+d1).setHours(12) - new Date(+d0).setHours(12);
      return Math.round(diff/8.64e7);
    }

var allDates = (function(count) {
    var rtn = [];
    try {
        for (var i = 0; i <= count; i++) {
            var dateTime=new Date(date1);
            dateTime=dateTime.setDate(dateTime.getDate()+i);
            dateTime=new Date(dateTime); 
            var nB = dateTime.toJSON().slice(0,10) ;
            var nE = dateTime.toJSON().slice(0,10);
            rtn.push({bTime: nB, eTime: nE});
        }
    } catch(err) {
        log.error(err);
        rtn = [];
    }

    return rtn;
})(days);


// 根据allDate，查询每个人的断档日期
var interruptDates = function(){ 
    var rtn = null;
    var cont=0;//获取数据库中的返回条数
    var index=1;//记录第几次断档
    var bdd=false;//记录是否断档
    var ddSj=[];//记录断档数组
    var ddsta=null;//这边记录下断档的开始时间
    var ddcount=0;//记录每次断档的天数 
    var lastDay=null;//记录最后一次的时间
    var befDay=null;
    var lastAddDay=null;//记录最后一次的时间再加一天
    try{
        var mql = "";
         odb.mql("delete from /matrix/action/broken where phone='"+phonenumber+"'")
        _.forEach(allDates,function(v){
           
         cont= odb.mql(" select count(*) as cnt from /matrix/action/calllog where  starttimestr >='" + v.bTime+ ' 00:00:00' + "' and starttimestr <='" + v.eTime + ' 23:59:59' + "' and (forphone='"+phonenumber+"')").data[0].cnt; 
         //log.info("==数量"+cont+"==日期"+v.bTime);
         if(cont <= 0){ 
             if(bdd==false){ 
                var dateTime=new Date(v.bTime);
                dateTime=dateTime.setDate(dateTime.getDate()-1);
                dateTime=new Date(dateTime); 
                befDay = dateTime.toJSON().slice(0,10) ; 
                ddsta=v.bTime;//只有在检测到是第一次断档的时候，加入个开始时间，在检测到有通话后会恢复为空
             } 
             ddcount++; 
             bdd=true;
             lastDay=v.bTime;
         }if(cont >0 && bdd==true){
              if(ddcount>=3){
                   
                var dateTimeo=new Date(lastDay);
                    dateTimeo=dateTimeo.setDate(dateTimeo.getDate()+1);
                    dateTimeo=new Date(dateTimeo); 
                    lastAddDay = dateTimeo.toJSON().slice(0,10) ; 
                var dd = {'index':index,'phone':phonenumber,'date':ddsta+"~"+ lastDay,"cs":ddcount,"befday":befDay,"lastday":lastAddDay}; 
                    odb.mql("insert into /matrix/action/broken  set index='"+index+"',phone='"+phonenumber+"',dates='"+ddsta+"~"+ lastDay+"',days='"+ddcount+"',id='broken:"+phonenumber+""+index+"',name='断档天数:"+ddcount+"天',brok='phonenumber:"+phonenumber+"',befday='"+befDay+"',lastday='"+lastAddDay+"'");
                     index++;
                    
                ddSj.push(dd);
              }
              
               ddcount=0; 
               ddsta=null;
             
               bdd=false;
         }
        
        })
        // log.info("==ddcount"+ddcount+"==bdd==="+bdd);
        if( bdd==true){
            
             if(ddcount>=3){
                var dateTimet=new Date(lastDay);
                    dateTimet=dateTimet.setDate(dateTimet.getDate()+1);
                    dateTimet=new Date(dateTimet); 
                    lastAddDay = dateTimet.toJSON().slice(0,10) ; 
                var dd = {'index':index,'phone':phonenumber,'date':ddsta+"~"+ lastDay,"cs":ddcount,"befday":befDay,"lastday":lastAddDay}; 
                     odb.mql("insert into /matrix/action/broken  set index='"+index+"',phone='"+phonenumber+"',dates='"+ddsta+"~"+ lastDay+"',days='"+ddcount+"',id='broken:"+phonenumber+""+index+"',name='断档天数:"+ddcount+"天',brok='phonenumber:"+phonenumber+"',befday='"+befDay+"',lastday='"+lastAddDay+"'");
                ddSj.push(dd);
             }
        }
    }catch(err){
        log.error(err);
    }
   
   return odb.mql(" match ('phonenumber:"+phonenumber+"') <- [:brok*1] - ()");
     
};

OUTPUT = {
    "type": "breaktool",
    "data": {
            "break": interruptDates()
    }
}  

2021/01/26 16:29:54 [I] fs.go 77: Write attr: {"remark":"","ctime":1611108661175,"author":"admin"}
2021/01/26 16:29:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:29:54 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/getDuanD.js POST
2021/01/26 16:30:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:30:04 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/getDuanD.js PUT
2021/01/26 16:30:04 [I] fs.go 56: Write data: // 生成需要查询的时间范围
// 参数为天数 如：30代表以当前日期往前推30天
//从前台接收值
var input = INPUT;
//var input = "phonenumber:15005107680"; 
var phonenumber=odb.mql("select phonenumber from /matrix/entity/phonenumber where id="+input+"").data[0].phonenumber;
var date1=odb.mql(" select min(starttimestr)as mindate from /matrix/action/calllog where (forphone='"+phonenumber+"' or tophone='"+phonenumber+"')").data[0].mindate.slice(0,10); 
 
var date2=odb.mql(" select max(starttimestr)as maxdate from /matrix/action/calllog where (forphone='"+phonenumber+"' or tophone='"+phonenumber+"')").data[0].maxdate.slice(0,10); 
  
var days=daysDifference(new Date(date1),new Date(date2));
 
 log.info("计算出时间差，开始时间："+date1+"===结束时间===="+date2+"====时间差====="+days);
  function daysDifference(d0, d1) {
      var diff = new Date(+d1).setHours(12) - new Date(+d0).setHours(12);
      return Math.round(diff/8.64e7);
    }

var allDates = (function(count) {
    var rtn = [];
    try {
        for (var i = 0; i <= count; i++) {
            var dateTime=new Date(date1);
            dateTime=dateTime.setDate(dateTime.getDate()+i);
            dateTime=new Date(dateTime); 
            var nB = dateTime.toJSON().slice(0,10) ;
            var nE = dateTime.toJSON().slice(0,10);
            rtn.push({bTime: nB, eTime: nE});
        }
    } catch(err) {
        log.error(err);
        rtn = [];
    }

    return rtn;
})(days);


// 根据allDate，查询每个人的断档日期
var interruptDates = function(){ 
    var rtn = null;
    var cont=0;//获取数据库中的返回条数
    var index=1;//记录第几次断档
    var bdd=false;//记录是否断档
    var ddSj=[];//记录断档数组
    var ddsta=null;//这边记录下断档的开始时间
    var ddcount=0;//记录每次断档的天数 
    var lastDay=null;//记录最后一次的时间
    var befDay=null;
    var lastAddDay=null;//记录最后一次的时间再加一天
    try{
        var mql = "";
         odb.mql("delete from /matrix/action/broken where phone='"+phonenumber+"'")
        _.forEach(allDates,function(v){
           
         cont= odb.mql(" select count(*) as cnt from /matrix/action/calllog where  starttimestr >='" + v.bTime+ ' 00:00:00' + "' and starttimestr <='" + v.eTime + ' 23:59:59' + "' and (forphone='"+phonenumber+"')").data[0].cnt; 
         //log.info("==数量"+cont+"==日期"+v.bTime);
         if(cont <= 0){ 
             if(bdd==false){ 
                var dateTime=new Date(v.bTime);
                dateTime=dateTime.setDate(dateTime.getDate()-1);
                dateTime=new Date(dateTime); 
                befDay = dateTime.toJSON().slice(0,10) ; 
                ddsta=v.bTime;//只有在检测到是第一次断档的时候，加入个开始时间，在检测到有通话后会恢复为空
             } 
             ddcount++; 
             bdd=true;
             lastDay=v.bTime;
         }if(cont >0 && bdd==true){
              if(ddcount>=3){
                   
                var dateTimeo=new Date(lastDay);
                    dateTimeo=dateTimeo.setDate(dateTimeo.getDate()+1);
                    dateTimeo=new Date(dateTimeo); 
                    lastAddDay = dateTimeo.toJSON().slice(0,10) ; 
                var dd = {'index':index,'phone':phonenumber,'date':ddsta+"~"+ lastDay,"cs":ddcount,"befday":befDay,"lastday":lastAddDay}; 
                    odb.mql("insert into /matrix/action/broken  set index='"+index+"',phone='"+phonenumber+"',dates='"+ddsta+"~"+ lastDay+"',days='"+ddcount+"',id='broken:"+phonenumber+""+index+"',name='断档天数:"+ddcount+"天',brok='phonenumber:"+phonenumber+"',befday='"+befDay+"',lastday='"+lastAddDay+"'");
                     index++;
                    
                ddSj.push(dd);
              }
              
               ddcount=0; 
               ddsta=null;
             
               bdd=false;
         }
        
        })
        // log.info("==ddcount"+ddcount+"==bdd==="+bdd);
        if( bdd==true){
            
             if(ddcount>=3){
                var dateTimet=new Date(lastDay);
                    dateTimet=dateTimet.setDate(dateTimet.getDate()+1);
                    dateTimet=new Date(dateTimet); 
                    lastAddDay = dateTimet.toJSON().slice(0,10) ; 
                var dd = {'index':index,'phone':phonenumber,'date':ddsta+"~"+ lastDay,"cs":ddcount,"befday":befDay,"lastday":lastAddDay}; 
                     odb.mql("insert into /matrix/action/broken  set index='"+index+"',phone='"+phonenumber+"',dates='"+ddsta+"~"+ lastDay+"',days='"+ddcount+"',id='broken:"+phonenumber+""+index+"',name='断档天数:"+ddcount+"天',brok='phonenumber:"+phonenumber+"',befday='"+befDay+"',lastday='"+lastAddDay+"'");
                ddSj.push(dd);
             }
        }
    }catch(err){
        log.error(err);
    }
   
   return odb.mql(" match ('phonenumber:"+phonenumber+"') <- [:brok*1] - ()");
     
};

OUTPUT = {
    "type": "breaktool",
    "data": {
            "break": interruptDates()
    }
}  

2021/01/26 16:30:04 [I] fs.go 77: Write attr: {"remark":"","ctime":1611108661175,"author":"admin"}
2021/01/26 16:30:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:30:04 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/getDuanD.js POST
2021/01/26 16:30:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:30:08 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/getDuanD.js PUT
2021/01/26 16:30:08 [I] fs.go 56: Write data: // 生成需要查询的时间范围
// 参数为天数 如：30代表以当前日期往前推30天
//从前台接收值
//var input = INPUT;
var input = "phonenumber:15005107680"; 
var phonenumber=odb.mql("select phonenumber from /matrix/entity/phonenumber where id="+input+"").data[0].phonenumber;
var date1=odb.mql(" select min(starttimestr)as mindate from /matrix/action/calllog where (forphone='"+phonenumber+"' or tophone='"+phonenumber+"')").data[0].mindate.slice(0,10); 
 
var date2=odb.mql(" select max(starttimestr)as maxdate from /matrix/action/calllog where (forphone='"+phonenumber+"' or tophone='"+phonenumber+"')").data[0].maxdate.slice(0,10); 
  
var days=daysDifference(new Date(date1),new Date(date2));
 
 log.info("计算出时间差，开始时间："+date1+"===结束时间===="+date2+"====时间差====="+days);
  function daysDifference(d0, d1) {
      var diff = new Date(+d1).setHours(12) - new Date(+d0).setHours(12);
      return Math.round(diff/8.64e7);
    }

var allDates = (function(count) {
    var rtn = [];
    try {
        for (var i = 0; i <= count; i++) {
            var dateTime=new Date(date1);
            dateTime=dateTime.setDate(dateTime.getDate()+i);
            dateTime=new Date(dateTime); 
            var nB = dateTime.toJSON().slice(0,10) ;
            var nE = dateTime.toJSON().slice(0,10);
            rtn.push({bTime: nB, eTime: nE});
        }
    } catch(err) {
        log.error(err);
        rtn = [];
    }

    return rtn;
})(days);


// 根据allDate，查询每个人的断档日期
var interruptDates = function(){ 
    var rtn = null;
    var cont=0;//获取数据库中的返回条数
    var index=1;//记录第几次断档
    var bdd=false;//记录是否断档
    var ddSj=[];//记录断档数组
    var ddsta=null;//这边记录下断档的开始时间
    var ddcount=0;//记录每次断档的天数 
    var lastDay=null;//记录最后一次的时间
    var befDay=null;
    var lastAddDay=null;//记录最后一次的时间再加一天
    try{
        var mql = "";
         odb.mql("delete from /matrix/action/broken where phone='"+phonenumber+"'")
        _.forEach(allDates,function(v){
           
         cont= odb.mql(" select count(*) as cnt from /matrix/action/calllog where  starttimestr >='" + v.bTime+ ' 00:00:00' + "' and starttimestr <='" + v.eTime + ' 23:59:59' + "' and (forphone='"+phonenumber+"')").data[0].cnt; 
         //log.info("==数量"+cont+"==日期"+v.bTime);
         if(cont <= 0){ 
             if(bdd==false){ 
                var dateTime=new Date(v.bTime);
                dateTime=dateTime.setDate(dateTime.getDate()-1);
                dateTime=new Date(dateTime); 
                befDay = dateTime.toJSON().slice(0,10) ; 
                ddsta=v.bTime;//只有在检测到是第一次断档的时候，加入个开始时间，在检测到有通话后会恢复为空
             } 
             ddcount++; 
             bdd=true;
             lastDay=v.bTime;
         }if(cont >0 && bdd==true){
              if(ddcount>=3){
                   
                var dateTimeo=new Date(lastDay);
                    dateTimeo=dateTimeo.setDate(dateTimeo.getDate()+1);
                    dateTimeo=new Date(dateTimeo); 
                    lastAddDay = dateTimeo.toJSON().slice(0,10) ; 
                var dd = {'index':index,'phone':phonenumber,'date':ddsta+"~"+ lastDay,"cs":ddcount,"befday":befDay,"lastday":lastAddDay}; 
                    odb.mql("insert into /matrix/action/broken  set index='"+index+"',phone='"+phonenumber+"',dates='"+ddsta+"~"+ lastDay+"',days='"+ddcount+"',id='broken:"+phonenumber+""+index+"',name='断档天数:"+ddcount+"天',brok='phonenumber:"+phonenumber+"',befday='"+befDay+"',lastday='"+lastAddDay+"'");
                     index++;
                    
                ddSj.push(dd);
              }
              
               ddcount=0; 
               ddsta=null;
             
               bdd=false;
         }
        
        })
        // log.info("==ddcount"+ddcount+"==bdd==="+bdd);
        if( bdd==true){
            
             if(ddcount>=3){
                var dateTimet=new Date(lastDay);
                    dateTimet=dateTimet.setDate(dateTimet.getDate()+1);
                    dateTimet=new Date(dateTimet); 
                    lastAddDay = dateTimet.toJSON().slice(0,10) ; 
                var dd = {'index':index,'phone':phonenumber,'date':ddsta+"~"+ lastDay,"cs":ddcount,"befday":befDay,"lastday":lastAddDay}; 
                     odb.mql("insert into /matrix/action/broken  set index='"+index+"',phone='"+phonenumber+"',dates='"+ddsta+"~"+ lastDay+"',days='"+ddcount+"',id='broken:"+phonenumber+""+index+"',name='断档天数:"+ddcount+"天',brok='phonenumber:"+phonenumber+"',befday='"+befDay+"',lastday='"+lastAddDay+"'");
                ddSj.push(dd);
             }
        }
    }catch(err){
        log.error(err);
    }
   
   return odb.mql(" match ('phonenumber:"+phonenumber+"') <- [:brok*1] - ()");
     
};

OUTPUT = {
    "type": "breaktool",
    "data": {
            "break": interruptDates()
    }
}  

2021/01/26 16:30:08 [I] fs.go 77: Write attr: {"remark":"","ctime":1611108661175,"author":"admin"}
2021/01/26 16:30:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:30:09 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/getDuanD.js POST
2021/01/26 16:30:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:30:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:30:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:30:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:30:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:30:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:30:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:30:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:30:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:30:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:30:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:30:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:30:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:31:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:31:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:31:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:31:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:31:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:31:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:31:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:31:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:31:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:31:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:31:09 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/getDuanD.js PUT
2021/01/26 16:31:09 [I] fs.go 56: Write data: // 生成需要查询的时间范围
// 参数为天数 如：30代表以当前日期往前推30天
//从前台接收值
//var input = INPUT;
var input = "phonenumber:15005107680"; 
var phonenumber=odb.mql("select phonenumber from /matrix/entity/phonenumber where id='"+input+"'").data[0].phonenumber;
var date1=odb.mql(" select min(starttimestr)as mindate from /matrix/action/calllog where (forphone='"+phonenumber+"' or tophone='"+phonenumber+"')").data[0].mindate.slice(0,10); 
 
var date2=odb.mql(" select max(starttimestr)as maxdate from /matrix/action/calllog where (forphone='"+phonenumber+"' or tophone='"+phonenumber+"')").data[0].maxdate.slice(0,10); 
  
var days=daysDifference(new Date(date1),new Date(date2));
 
 log.info("计算出时间差，开始时间："+date1+"===结束时间===="+date2+"====时间差====="+days);
  function daysDifference(d0, d1) {
      var diff = new Date(+d1).setHours(12) - new Date(+d0).setHours(12);
      return Math.round(diff/8.64e7);
    }

var allDates = (function(count) {
    var rtn = [];
    try {
        for (var i = 0; i <= count; i++) {
            var dateTime=new Date(date1);
            dateTime=dateTime.setDate(dateTime.getDate()+i);
            dateTime=new Date(dateTime); 
            var nB = dateTime.toJSON().slice(0,10) ;
            var nE = dateTime.toJSON().slice(0,10);
            rtn.push({bTime: nB, eTime: nE});
        }
    } catch(err) {
        log.error(err);
        rtn = [];
    }

    return rtn;
})(days);


// 根据allDate，查询每个人的断档日期
var interruptDates = function(){ 
    var rtn = null;
    var cont=0;//获取数据库中的返回条数
    var index=1;//记录第几次断档
    var bdd=false;//记录是否断档
    var ddSj=[];//记录断档数组
    var ddsta=null;//这边记录下断档的开始时间
    var ddcount=0;//记录每次断档的天数 
    var lastDay=null;//记录最后一次的时间
    var befDay=null;
    var lastAddDay=null;//记录最后一次的时间再加一天
    try{
        var mql = "";
         odb.mql("delete from /matrix/action/broken where phone='"+phonenumber+"'")
        _.forEach(allDates,function(v){
           
         cont= odb.mql(" select count(*) as cnt from /matrix/action/calllog where  starttimestr >='" + v.bTime+ ' 00:00:00' + "' and starttimestr <='" + v.eTime + ' 23:59:59' + "' and (forphone='"+phonenumber+"')").data[0].cnt; 
         //log.info("==数量"+cont+"==日期"+v.bTime);
         if(cont <= 0){ 
             if(bdd==false){ 
                var dateTime=new Date(v.bTime);
                dateTime=dateTime.setDate(dateTime.getDate()-1);
                dateTime=new Date(dateTime); 
                befDay = dateTime.toJSON().slice(0,10) ; 
                ddsta=v.bTime;//只有在检测到是第一次断档的时候，加入个开始时间，在检测到有通话后会恢复为空
             } 
             ddcount++; 
             bdd=true;
             lastDay=v.bTime;
         }if(cont >0 && bdd==true){
              if(ddcount>=3){
                   
                var dateTimeo=new Date(lastDay);
                    dateTimeo=dateTimeo.setDate(dateTimeo.getDate()+1);
                    dateTimeo=new Date(dateTimeo); 
                    lastAddDay = dateTimeo.toJSON().slice(0,10) ; 
                var dd = {'index':index,'phone':phonenumber,'date':ddsta+"~"+ lastDay,"cs":ddcount,"befday":befDay,"lastday":lastAddDay}; 
                    odb.mql("insert into /matrix/action/broken  set index='"+index+"',phone='"+phonenumber+"',dates='"+ddsta+"~"+ lastDay+"',days='"+ddcount+"',id='broken:"+phonenumber+""+index+"',name='断档天数:"+ddcount+"天',brok='phonenumber:"+phonenumber+"',befday='"+befDay+"',lastday='"+lastAddDay+"'");
                     index++;
                    
                ddSj.push(dd);
              }
              
               ddcount=0; 
               ddsta=null;
             
               bdd=false;
         }
        
        })
        // log.info("==ddcount"+ddcount+"==bdd==="+bdd);
        if( bdd==true){
            
             if(ddcount>=3){
                var dateTimet=new Date(lastDay);
                    dateTimet=dateTimet.setDate(dateTimet.getDate()+1);
                    dateTimet=new Date(dateTimet); 
                    lastAddDay = dateTimet.toJSON().slice(0,10) ; 
                var dd = {'index':index,'phone':phonenumber,'date':ddsta+"~"+ lastDay,"cs":ddcount,"befday":befDay,"lastday":lastAddDay}; 
                     odb.mql("insert into /matrix/action/broken  set index='"+index+"',phone='"+phonenumber+"',dates='"+ddsta+"~"+ lastDay+"',days='"+ddcount+"',id='broken:"+phonenumber+""+index+"',name='断档天数:"+ddcount+"天',brok='phonenumber:"+phonenumber+"',befday='"+befDay+"',lastday='"+lastAddDay+"'");
                ddSj.push(dd);
             }
        }
    }catch(err){
        log.error(err);
    }
   
   return odb.mql(" match ('phonenumber:"+phonenumber+"') <- [:brok*1] - ()");
     
};

OUTPUT = {
    "type": "breaktool",
    "data": {
            "break": interruptDates()
    }
}  

2021/01/26 16:31:09 [I] fs.go 77: Write attr: {"remark":"","ctime":1611108661175,"author":"admin"}
2021/01/26 16:31:10 [E] batch.go 73: cql =[INSERT INTO object JSON ? DEFAULT UNSET], params=[[{"_tokens":{"_fields":"\u00002021-01-26 08:31:09\u0000{\"remark\":\"\",\"ctime\":1611108661175,\"author\":\"admin\"}\u00009610905026310214342\u0000/matrix/filesystem\u0000js\u00002021-01-20 02:05:11\u0000/script/bizApi/hdim/test/getDuanD.js\u0000/script/bizApi/hdim/test\u00002021-01-26\u00000\u0000admin\u0000getDuanD.js\u00001611649870200","_raw":""},"class":"/matrix/filesystem","day":"2021-01-26","id":"9610905026310214342","list_bigint_0":[1501671079079062657],"list_bigint_1":[],"map_varchar_set_0":null,"map_varchar_set_1":null,"map_varchar_set_10":null,"map_varchar_set_11":null,"map_varchar_set_12":null,"map_varchar_set_13":null,"map_varchar_set_14":null,"map_varchar_set_15":null,"map_varchar_set_16":null,"map_varchar_set_19":null,"map_varchar_set_2":null,"map_varchar_set_20":null,"map_varchar_set_21":null,"map_varchar_set_22":null,"map_varchar_set_23":null,"map_varchar_set_24":null,"map_varchar_set_25":null,"map_varchar_set_26":null,"map_varchar_set_27":null,"map_varchar_set_3":null,"map_varchar_set_30":null,"map_varchar_set_31":null,"map_varchar_set_4":null,"map_varchar_set_5":null,"map_varchar_set_6":null,"map_varchar_set_7":null,"map_varchar_set_8":null,"map_varchar_set_9":null,"name":"getDuanD.js","smallint_0":0,"tags":[],"timestamp_2":"2021-01-26T08:31:09.6Z","timestamp_3":"2021-01-20T02:05:11.092Z","varchar_19":"/script/bizApi/hdim/test","varchar_2":"admin","varchar_20":"/script/bizApi/hdim/test/getDuanD.js","varchar_33":"js","varchar_34":"{\"remark\":\"\",\"ctime\":1611108661175,\"author\":\"admin\"}","varchar_394":null,"varchar_396":null,"vtime":1611649870200}]], err=[Error decoding JSON value for timestamp_2: Unable to coerce '2021-01-26T08:31:09.6Z' to a formatted date (long)]
2021/01/26 16:31:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:31:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:31:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:31:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:31:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:31:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:31:31 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 16:31:31 [I] fs.go 56: Write data: //var input = decodeURIComponent(INPUT);

// perbasisinfo 人员
var pId = decodeURIComponent(INPUT);
log.debug(111,pId)
//var pId = 'perbasisinfo:320911197112273412';

var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            //rtn.push("phonenumber:13046513888")
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(_.now(),v);
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                rtn.data[0].graph.nodes.push(n);
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 16:31:31 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 16:31:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:31:31 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 16:31:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:31:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:31:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:31:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:31:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:32:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:32:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:32:19 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/getDuanD.js PUT
2021/01/26 16:32:19 [I] fs.go 56: Write data: // 生成需要查询的时间范围
// 参数为天数 如：30代表以当前日期往前推30天
//从前台接收值
//var input = INPUT;

var input = "phonenumber:15005107680"; 
//这一步，是用来获取相关的手机号码的
var phonenumber=odb.mql("select phonenumber from /matrix/entity/phonenumber where id='"+input+"'").data[0].phonenumber;

var date1=odb.mql(" select min(starttimestr)as mindate from /matrix/action/calllog where (forphone='"+phonenumber+"' or tophone='"+phonenumber+"')").data[0].mindate.slice(0,10); 
 
var date2=odb.mql(" select max(starttimestr)as maxdate from /matrix/action/calllog where (forphone='"+phonenumber+"' or tophone='"+phonenumber+"')").data[0].maxdate.slice(0,10); 
  
var days=daysDifference(new Date(date1),new Date(date2));
 
 log.info("计算出时间差，开始时间："+date1+"===结束时间===="+date2+"====时间差====="+days);
  function daysDifference(d0, d1) {
      var diff = new Date(+d1).setHours(12) - new Date(+d0).setHours(12);
      return Math.round(diff/8.64e7);
    }

var allDates = (function(count) {
    var rtn = [];
    try {
        for (var i = 0; i <= count; i++) {
            var dateTime=new Date(date1);
            dateTime=dateTime.setDate(dateTime.getDate()+i);
            dateTime=new Date(dateTime); 
            var nB = dateTime.toJSON().slice(0,10) ;
            var nE = dateTime.toJSON().slice(0,10);
            rtn.push({bTime: nB, eTime: nE});
        }
    } catch(err) {
        log.error(err);
        rtn = [];
    }

    return rtn;
})(days);


// 根据allDate，查询每个人的断档日期
var interruptDates = function(){ 
    var rtn = null;
    var cont=0;//获取数据库中的返回条数
    var index=1;//记录第几次断档
    var bdd=false;//记录是否断档
    var ddSj=[];//记录断档数组
    var ddsta=null;//这边记录下断档的开始时间
    var ddcount=0;//记录每次断档的天数 
    var lastDay=null;//记录最后一次的时间
    var befDay=null;
    var lastAddDay=null;//记录最后一次的时间再加一天
    try{
        var mql = "";
         odb.mql("delete from /matrix/action/broken where phone='"+phonenumber+"'")
        _.forEach(allDates,function(v){
           
         cont= odb.mql(" select count(*) as cnt from /matrix/action/calllog where  starttimestr >='" + v.bTime+ ' 00:00:00' + "' and starttimestr <='" + v.eTime + ' 23:59:59' + "' and (forphone='"+phonenumber+"')").data[0].cnt; 
         //log.info("==数量"+cont+"==日期"+v.bTime);
         if(cont <= 0){ 
             if(bdd==false){ 
                var dateTime=new Date(v.bTime);
                dateTime=dateTime.setDate(dateTime.getDate()-1);
                dateTime=new Date(dateTime); 
                befDay = dateTime.toJSON().slice(0,10) ; 
                ddsta=v.bTime;//只有在检测到是第一次断档的时候，加入个开始时间，在检测到有通话后会恢复为空
             } 
             ddcount++; 
             bdd=true;
             lastDay=v.bTime;
         }if(cont >0 && bdd==true){
              if(ddcount>=3){
                   
                var dateTimeo=new Date(lastDay);
                    dateTimeo=dateTimeo.setDate(dateTimeo.getDate()+1);
                    dateTimeo=new Date(dateTimeo); 
                    lastAddDay = dateTimeo.toJSON().slice(0,10) ; 
                var dd = {'index':index,'phone':phonenumber,'date':ddsta+"~"+ lastDay,"cs":ddcount,"befday":befDay,"lastday":lastAddDay}; 
                    odb.mql("insert into /matrix/action/broken  set index='"+index+"',phone='"+phonenumber+"',dates='"+ddsta+"~"+ lastDay+"',days='"+ddcount+"',id='broken:"+phonenumber+""+index+"',name='断档天数:"+ddcount+"天',brok='phonenumber:"+phonenumber+"',befday='"+befDay+"',lastday='"+lastAddDay+"'");
                     index++;
                    
                ddSj.push(dd);
              }
              
               ddcount=0; 
               ddsta=null;
             
               bdd=false;
         }
        
        })
        // log.info("==ddcount"+ddcount+"==bdd==="+bdd);
        if( bdd==true){
            
             if(ddcount>=3){
                var dateTimet=new Date(lastDay);
                    dateTimet=dateTimet.setDate(dateTimet.getDate()+1);
                    dateTimet=new Date(dateTimet); 
                    lastAddDay = dateTimet.toJSON().slice(0,10) ; 
                var dd = {'index':index,'phone':phonenumber,'date':ddsta+"~"+ lastDay,"cs":ddcount,"befday":befDay,"lastday":lastAddDay}; 
                     odb.mql("insert into /matrix/action/broken  set index='"+index+"',phone='"+phonenumber+"',dates='"+ddsta+"~"+ lastDay+"',days='"+ddcount+"',id='broken:"+phonenumber+""+index+"',name='断档天数:"+ddcount+"天',brok='phonenumber:"+phonenumber+"',befday='"+befDay+"',lastday='"+lastAddDay+"'");
                ddSj.push(dd);
             }
        }
    }catch(err){
        log.error(err);
    }
   
   return odb.mql(" match ('phonenumber:"+phonenumber+"') <- [:brok*1] - ()");
     
};

OUTPUT = {
    "type": "breaktool",
    "data": {
            "break": interruptDates()
    }
}  

2021/01/26 16:32:19 [I] fs.go 77: Write attr: {"remark":"","ctime":1611108661175,"author":"admin"}
2021/01/26 16:32:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:32:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:32:20 [W] cypher_util.go 762: 3 not Exist, ignore & continue .
2021/01/26 16:32:20 [W] cypher_util.go 762: 3 not Exist, ignore & continue .
2021/01/26 16:32:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:32:20 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/getDuanD.js POST
2021/01/26 16:32:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:32:22 [I] wjs.go 145: /bizApi/hdim/test/getDuanD.js:16:2:  计算出时间差，开始时间：2019-11-01===结束时间====2020-08-11====时间差=====284
2021/01/26 16:32:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:33:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:33:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:34:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:34:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:35:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:35:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:35:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:35:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:35:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:35:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:35:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:35:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:35:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:35:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:35:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:35:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:35:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:36:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:36:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:36:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:36:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:36:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:36:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:36:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:36:42 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/getDuanD.js PUT
2021/01/26 16:36:42 [I] fs.go 56: Write data: // 生成需要查询的时间范围
// 参数为天数 如：30代表以当前日期往前推30天
//从前台接收值
var input = INPUT;

//var input = "phonenumber:15005107680"; 
//这一步，是用来获取相关的手机号码的
var phonenumber=odb.mql("select phonenumber from /matrix/entity/phonenumber where id='"+input+"'").data[0].phonenumber;

var date1=odb.mql(" select min(starttimestr)as mindate from /matrix/action/calllog where (forphone='"+phonenumber+"' or tophone='"+phonenumber+"')").data[0].mindate.slice(0,10); 
 
var date2=odb.mql(" select max(starttimestr)as maxdate from /matrix/action/calllog where (forphone='"+phonenumber+"' or tophone='"+phonenumber+"')").data[0].maxdate.slice(0,10); 
  
var days=daysDifference(new Date(date1),new Date(date2));
 
 log.info("计算出时间差，开始时间："+date1+"===结束时间===="+date2+"====时间差====="+days);
  function daysDifference(d0, d1) {
      var diff = new Date(+d1).setHours(12) - new Date(+d0).setHours(12);
      return Math.round(diff/8.64e7);
    }

var allDates = (function(count) {
    var rtn = [];
    try {
        for (var i = 0; i <= count; i++) {
            var dateTime=new Date(date1);
            dateTime=dateTime.setDate(dateTime.getDate()+i);
            dateTime=new Date(dateTime); 
            var nB = dateTime.toJSON().slice(0,10) ;
            var nE = dateTime.toJSON().slice(0,10);
            rtn.push({bTime: nB, eTime: nE});
        }
    } catch(err) {
        log.error(err);
        rtn = [];
    }

    return rtn;
})(days);


// 根据allDate，查询每个人的断档日期
var interruptDates = function(){ 
    var rtn = null;
    var cont=0;//获取数据库中的返回条数
    var index=1;//记录第几次断档
    var bdd=false;//记录是否断档
    var ddSj=[];//记录断档数组
    var ddsta=null;//这边记录下断档的开始时间
    var ddcount=0;//记录每次断档的天数 
    var lastDay=null;//记录最后一次的时间
    var befDay=null;
    var lastAddDay=null;//记录最后一次的时间再加一天
    try{
        var mql = "";
         odb.mql("delete from /matrix/action/broken where phone='"+phonenumber+"'")
        _.forEach(allDates,function(v){
           
         cont= odb.mql(" select count(*) as cnt from /matrix/action/calllog where  starttimestr >='" + v.bTime+ ' 00:00:00' + "' and starttimestr <='" + v.eTime + ' 23:59:59' + "' and (forphone='"+phonenumber+"')").data[0].cnt; 
         //log.info("==数量"+cont+"==日期"+v.bTime);
         if(cont <= 0){ 
             if(bdd==false){ 
                var dateTime=new Date(v.bTime);
                dateTime=dateTime.setDate(dateTime.getDate()-1);
                dateTime=new Date(dateTime); 
                befDay = dateTime.toJSON().slice(0,10) ; 
                ddsta=v.bTime;//只有在检测到是第一次断档的时候，加入个开始时间，在检测到有通话后会恢复为空
             } 
             ddcount++; 
             bdd=true;
             lastDay=v.bTime;
         }if(cont >0 && bdd==true){
              if(ddcount>=3){
                   
                var dateTimeo=new Date(lastDay);
                    dateTimeo=dateTimeo.setDate(dateTimeo.getDate()+1);
                    dateTimeo=new Date(dateTimeo); 
                    lastAddDay = dateTimeo.toJSON().slice(0,10) ; 
                var dd = {'index':index,'phone':phonenumber,'date':ddsta+"~"+ lastDay,"cs":ddcount,"befday":befDay,"lastday":lastAddDay}; 
                    odb.mql("insert into /matrix/action/broken  set index='"+index+"',phone='"+phonenumber+"',dates='"+ddsta+"~"+ lastDay+"',days='"+ddcount+"',id='broken:"+phonenumber+""+index+"',name='断档天数:"+ddcount+"天',brok='phonenumber:"+phonenumber+"',befday='"+befDay+"',lastday='"+lastAddDay+"'");
                     index++;
                    
                ddSj.push(dd);
              }
              
               ddcount=0; 
               ddsta=null;
             
               bdd=false;
         }
        
        })
        // log.info("==ddcount"+ddcount+"==bdd==="+bdd);
        if( bdd==true){
            
             if(ddcount>=3){
                var dateTimet=new Date(lastDay);
                    dateTimet=dateTimet.setDate(dateTimet.getDate()+1);
                    dateTimet=new Date(dateTimet); 
                    lastAddDay = dateTimet.toJSON().slice(0,10) ; 
                var dd = {'index':index,'phone':phonenumber,'date':ddsta+"~"+ lastDay,"cs":ddcount,"befday":befDay,"lastday":lastAddDay}; 
                     odb.mql("insert into /matrix/action/broken  set index='"+index+"',phone='"+phonenumber+"',dates='"+ddsta+"~"+ lastDay+"',days='"+ddcount+"',id='broken:"+phonenumber+""+index+"',name='断档天数:"+ddcount+"天',brok='phonenumber:"+phonenumber+"',befday='"+befDay+"',lastday='"+lastAddDay+"'");
                ddSj.push(dd);
             }
        }
    }catch(err){
        log.error(err);
    }
   
   return odb.mql(" match ('phonenumber:"+phonenumber+"') <- [:brok*1] - ()");
     
};

OUTPUT = {
    "type": "breaktool",
    "data": {
            "break": interruptDates()
    }
}  

2021/01/26 16:36:42 [I] fs.go 77: Write attr: {"remark":"","ctime":1611108661175,"author":"admin"}
2021/01/26 16:36:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:36:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:36:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:36:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:36:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:36:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:36:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:36:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:36:43 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/getDuanD.js POST
2021/01/26 16:36:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:36:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:36:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:36:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:36:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:36:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:36:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:36:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:36:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:36:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:36:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:36:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:36:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:36:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:36:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:36:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:36:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:36:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:36:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:37:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:37:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:37:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:37:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:37:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:37:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:37:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:37:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:37:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:37:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:37:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:37:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:37:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:37:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:37:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:37:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:37:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:37:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:37:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:37:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:37:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:37:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:37:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:37:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:37:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:37:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:37:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:37:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:37:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:37:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:37:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:37:39 [W] cypher_util.go 762: 3 not Exist, ignore & continue .
2021/01/26 16:37:39 [W] cypher_util.go 762: 3 not Exist, ignore & continue .
2021/01/26 16:37:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:37:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:37:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:37:52 [W] cypher_util.go 762: 3 not Exist, ignore & continue .
2021/01/26 16:37:52 [W] cypher_util.go 762: 3 not Exist, ignore & continue .
2021/01/26 16:38:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:38:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:38:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:38:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:38:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:38:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:38:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:38:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:38:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:38:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:38:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:38:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:38:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:38:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:39:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:39:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:39:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:39:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:39:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:39:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:39:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:39:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:39:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:39:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:39:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:40:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:40:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:40:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:40:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:40:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:40:24 [W] cypher_util.go 762: 3 not Exist, ignore & continue .
2021/01/26 16:40:24 [W] cypher_util.go 762: 3 not Exist, ignore & continue .
2021/01/26 16:40:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:40:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:40:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:40:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:40:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:40:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:40:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:40:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:40:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:40:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:40:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:40:31 [W] cypher_util.go 762: 3 not Exist, ignore & continue .
2021/01/26 16:40:31 [W] cypher_util.go 762: 3 not Exist, ignore & continue .
2021/01/26 16:40:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:40:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:40:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:40:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:40:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:40:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:40:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:40:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:40:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:40:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:40:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:40:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:40:41 [W] query_util.go 869: can't find class for id[biz:数字国网] , search subdix of class!
2021/01/26 16:40:41 [W] cypher_util.go 762: biz:数字国网 not Exist, ignore & continue .
2021/01/26 16:40:41 [W] query_util.go 869: can't find class for id[biz:开发测试] , search subdix of class!
2021/01/26 16:40:41 [W] cypher_util.go 762: biz:开发测试 not Exist, ignore & continue .
2021/01/26 16:40:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:40:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:40:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:40:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:40:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:40:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:40:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:40:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:40:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:40:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:40:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:40:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:40:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:40:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:40:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:40:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:40:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:41:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:41:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:41:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:41:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:41:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:41:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:41:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:41:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:41:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:41:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:41:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:41:51 [I] wjs.go 145: /bizApi/hdim/getThreeRelaData.js:7:9:  ==============phonenumber:18695220567
2021/01/26 16:42:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:42:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:43:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:43:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:43:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:43:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:43:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:43:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:43:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:43:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:44:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:44:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:45:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:45:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:46:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:46:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:46:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:46:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:46:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:46:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:46:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:47:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:47:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:48:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:48:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:49:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:49:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:49:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:49:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:49:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:49:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:49:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:49:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:49:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:49:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:49:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:49:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:49:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:50:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:50:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:50:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:50:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:50:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:50:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:50:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:50:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:50:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:50:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:50:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:51:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:51:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:51:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:51:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:51:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:51:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:51:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:51:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:51:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:51:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:51:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:51:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:51:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:51:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:51:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:51:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:52:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:52:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:52:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:52:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:53:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:53:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:53:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:53:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:53:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:53:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:53:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:53:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:53:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:53:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:53:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:54:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:54:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:55:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:55:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:55:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:55:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:55:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:55:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:55:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:55:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:55:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:55:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:55:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:55:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:55:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:55:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:55:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:55:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:55:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:55:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:55:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:55:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:55:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:55:52 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 16:55:52 [I] fs.go 56: Write data: // perbasisinfo 人员
var pId = decodeURIComponent(INPUT);
log.debug(111,pId)
//var pId = 'perbasisinfo:320911197112273412';

var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            //rtn.push("phonenumber:13046513888")
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(_.now(),v);
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                rtn.data[0].graph.nodes.push(n);
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 16:55:52 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 16:55:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:55:52 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 16:56:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:56:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:57:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:57:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:57:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:57:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:57:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:57:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:57:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:57:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:57:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:57:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:57:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:58:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:58:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:59:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:59:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:59:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:59:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:59:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:59:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:59:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:59:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:59:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:59:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 16:59:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:00:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:00:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:00:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:00:05 [I] wjs.go 145: /bizApi/hdim/getThreeRelaData.js:7:9:  ==============phonenumber:18695220567
2021/01/26 17:00:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:00:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:00:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:00:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:00:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:00:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:00:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:00:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:00:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:00:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:00:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:00:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:00:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:00:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:00:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:00:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:00:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:00:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:00:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:01:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:01:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:01:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:01:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:01:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:01:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:01:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:01:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:01:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:01:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:01:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:01:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:01:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:01:06 [I] home.go 65: Go to user home page: /home
2021/01/26 17:01:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:01:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:01:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:01:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:01:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:01:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:01:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:01:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:01:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:01:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:01:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:01:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:01:08 [I] wjs.go 145: /bizApi/hdim/getThreeRelaData.js:7:9:  ==============phonenumber:15008669972
2021/01/26 17:01:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:01:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:01:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:01:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:01:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:01:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:01:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:01:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:01:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:01:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:01:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:01:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:02:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:02:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:02:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:02:10 [I] wjs.go 145: /bizApi/hdim/getThreeRelaData.js:7:9:  ==============phonenumber:13961104573
2021/01/26 17:02:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:02:20 [E] wjs.go 149: /bizApi/hdim/getThreeRelaData.js:13:9:  map[message:[UnKnown]: query Timed out!
"[UnKnown]" backtrace:
git.wecise.com/wecise/platform/odb.(*CTernary).RelationRangeLoop:cypher_ternary.go:541
git.wecise.com/wecise/platform/odb.(*CTernary).SubjectEvaluateAndSpread:cypher_ternary.go:368
git.wecise.com/wecise/platform/odb.(*CTernary).EvaluateAndSpread:cypher_ternary.go:223
git.wecise.com/wecise/platform/odb.(*CPhase).Evaluate:cypher_query.go:335
git.wecise.com/wecise/platform/odb.(*Gutil).CypherMatchQuery:cypher_query.go:94
git.wecise.com/wecise/platform/odb.(*MqlSemantics).Cypher:cypher.go:1318
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:275
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/odb.(*Gutil).jsFuncMQL:js_odb.go:155
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:201
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeAssignExpression:cmpl_evaluate_expression.go:124
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:31
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement.func1:cmpl_evaluate_statement.go:344
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).tryCatchEvaluate:runtime.go:142
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement:cmpl_evaluate_statement.go:343
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:98
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeObjectLiteral:cmpl_evaluate_expression.go:321
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:83
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeObjectLiteral:cmpl_evaluate_expression.go:321
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:83
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeAssignExpression:cmpl_evaluate_expression.go:124
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:31
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeProgram:cmpl_evaluate.go:17
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_runOrEval.func1:runtime.go:767
git.wecise.com/wecise/platform/lib/robertkrimen/otto.catchPanic:error.go:252
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_runOrEval:runtime.go:766
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_run:runtime.go:779
git.wecise.com/wecise/platform/lib/robertkrimen/otto.Otto.Run:otto.go:295
git.wecise.com/wecise/platform/web/routers/script.ExecJS:script.go:132
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375 name:GoError:/bizApi/hdim/getThreeRelaData.js:11:15]
2021/01/26 17:02:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:03:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:03:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:04:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:04:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:05:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:05:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:05:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:05:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:05:33 [I] wjs.go 145: /bizApi/hdim/getThreeRelaData.js:7:9:  ==============phonenumber:13961104573
2021/01/26 17:05:43 [E] wjs.go 149: /bizApi/hdim/getThreeRelaData.js:13:9:  map[message:[UnKnown]: query Timed out!
"[UnKnown]" backtrace:
git.wecise.com/wecise/platform/odb.(*CTernary).RelationRangeLoop:cypher_ternary.go:541
git.wecise.com/wecise/platform/odb.(*CTernary).SubjectEvaluateAndSpread:cypher_ternary.go:368
git.wecise.com/wecise/platform/odb.(*CTernary).EvaluateAndSpread:cypher_ternary.go:223
git.wecise.com/wecise/platform/odb.(*CPhase).Evaluate:cypher_query.go:335
git.wecise.com/wecise/platform/odb.(*Gutil).CypherMatchQuery:cypher_query.go:94
git.wecise.com/wecise/platform/odb.(*MqlSemantics).Cypher:cypher.go:1318
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:275
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/odb.(*Gutil).jsFuncMQL:js_odb.go:155
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:201
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeAssignExpression:cmpl_evaluate_expression.go:124
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:31
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement.func1:cmpl_evaluate_statement.go:344
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).tryCatchEvaluate:runtime.go:142
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement:cmpl_evaluate_statement.go:343
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:98
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeObjectLiteral:cmpl_evaluate_expression.go:321
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:83
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeObjectLiteral:cmpl_evaluate_expression.go:321
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:83
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeAssignExpression:cmpl_evaluate_expression.go:124
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:31
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeProgram:cmpl_evaluate.go:17
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_runOrEval.func1:runtime.go:767
git.wecise.com/wecise/platform/lib/robertkrimen/otto.catchPanic:error.go:252
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_runOrEval:runtime.go:766
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_run:runtime.go:779
git.wecise.com/wecise/platform/lib/robertkrimen/otto.Otto.Run:otto.go:295
git.wecise.com/wecise/platform/web/routers/script.ExecJS:script.go:132
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375 name:GoError:/bizApi/hdim/getThreeRelaData.js:11:15]
2021/01/26 17:05:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:06:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:06:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:07:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:07:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:07:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:07:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:07:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:07:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:07:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:07:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:07:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:07:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:07:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:07:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:07:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:07:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:07:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:07:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:07:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:07:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:07:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:08:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:08:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:08:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:08:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:08:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:08:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:08:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:08:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:08:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:08:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:08:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:08:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:08:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:08:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:08:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:08:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:08:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:08:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:08:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:08:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:08:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:08:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:08:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:08:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:08:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:08:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:08:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:08:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:08:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:08:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:08:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:08:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:08:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:08:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:08:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:08:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:09:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:09:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:09:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:09:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:09:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:09:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:09:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:09:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:09:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:09:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:09:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:09:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:09:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:09:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:09:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:09:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:09:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:09:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:09:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:09:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:09:09 [W] query_util.go 869: can't find class for id[biz:数字国网] , search subdix of class!
2021/01/26 17:09:09 [W] cypher_util.go 762: biz:数字国网 not Exist, ignore & continue .
2021/01/26 17:09:09 [W] query_util.go 869: can't find class for id[biz:开发测试] , search subdix of class!
2021/01/26 17:09:09 [W] cypher_util.go 762: biz:开发测试 not Exist, ignore & continue .
2021/01/26 17:09:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:09:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:09:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:09:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:09:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:09:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:09:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:09:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:09:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:09:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:09:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:09:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:09:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:09:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:09:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:10:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:10:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:10:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:10:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:10:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:10:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:10:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:10:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:10:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:10:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:10:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:10:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:10:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:10:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:10:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:10:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:10:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:10:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:10:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:10:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:10:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:10:22 [W] query_util.go 869: can't find class for id[biz:数字国网] , search subdix of class!
2021/01/26 17:10:22 [W] cypher_util.go 762: biz:数字国网 not Exist, ignore & continue .
2021/01/26 17:10:22 [W] query_util.go 869: can't find class for id[biz:开发测试] , search subdix of class!
2021/01/26 17:10:22 [W] cypher_util.go 762: biz:开发测试 not Exist, ignore & continue .
2021/01/26 17:10:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:10:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:10:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:10:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:10:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:10:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:10:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:11:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:11:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:38 [W] query_util.go 869: can't find class for id[biz:数字国网] , search subdix of class!
2021/01/26 17:12:38 [W] cypher_util.go 762: biz:数字国网 not Exist, ignore & continue .
2021/01/26 17:12:38 [W] query_util.go 869: can't find class for id[biz:开发测试] , search subdix of class!
2021/01/26 17:12:38 [W] cypher_util.go 762: biz:开发测试 not Exist, ignore & continue .
2021/01/26 17:12:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:12:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:13:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:13:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:13:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:13:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:13:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:13:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:13:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:13:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:13:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:13:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:13:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:13:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:13:40 [I] wjs.go 145: /bizApi/hdim/getThreeRelaData.js:7:9:  ==============phonenumber:13961104573
2021/01/26 17:13:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:13:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:13:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:13:50 [E] wjs.go 149: /bizApi/hdim/getThreeRelaData.js:13:9:  map[message:[UnKnown]: query Timed out!
"[UnKnown]" backtrace:
git.wecise.com/wecise/platform/odb.(*CTernary).RelationRangeLoop:cypher_ternary.go:541
git.wecise.com/wecise/platform/odb.(*CTernary).SubjectEvaluateAndSpread:cypher_ternary.go:368
git.wecise.com/wecise/platform/odb.(*CTernary).EvaluateAndSpread:cypher_ternary.go:223
git.wecise.com/wecise/platform/odb.(*CPhase).Evaluate:cypher_query.go:335
git.wecise.com/wecise/platform/odb.(*Gutil).CypherMatchQuery:cypher_query.go:94
git.wecise.com/wecise/platform/odb.(*MqlSemantics).Cypher:cypher.go:1318
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:275
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/odb.(*Gutil).jsFuncMQL:js_odb.go:155
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:201
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeAssignExpression:cmpl_evaluate_expression.go:124
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:31
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement.func1:cmpl_evaluate_statement.go:344
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).tryCatchEvaluate:runtime.go:142
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement:cmpl_evaluate_statement.go:343
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:98
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeObjectLiteral:cmpl_evaluate_expression.go:321
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:83
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeObjectLiteral:cmpl_evaluate_expression.go:321
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:83
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeAssignExpression:cmpl_evaluate_expression.go:124
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:31
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeProgram:cmpl_evaluate.go:17
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_runOrEval.func1:runtime.go:767
git.wecise.com/wecise/platform/lib/robertkrimen/otto.catchPanic:error.go:252
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_runOrEval:runtime.go:766
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_run:runtime.go:779
git.wecise.com/wecise/platform/lib/robertkrimen/otto.Otto.Run:otto.go:295
git.wecise.com/wecise/platform/web/routers/script.ExecJS:script.go:132
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375 name:GoError:/bizApi/hdim/getThreeRelaData.js:11:15]
2021/01/26 17:13:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:13:51 [I] auth.go 217: hdim.admin login success for get session.
2021/01/26 17:13:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:13:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:13:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:13:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:13:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:13:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:13:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:13:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:13:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:14:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:14:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:14:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:14:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:14:03 [W] query_util.go 869: can't find class for id[biz:数字国网] , search subdix of class!
2021/01/26 17:14:03 [W] cypher_util.go 762: biz:数字国网 not Exist, ignore & continue .
2021/01/26 17:14:03 [W] query_util.go 869: can't find class for id[biz:开发测试] , search subdix of class!
2021/01/26 17:14:03 [W] cypher_util.go 762: biz:开发测试 not Exist, ignore & continue .
2021/01/26 17:14:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:14:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:14:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:14:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:14:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:14:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:14:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:14:19 [W] cypher_util.go 762: 2 not Exist, ignore & continue .
2021/01/26 17:14:19 [W] cypher_util.go 762: 2 not Exist, ignore & continue .
2021/01/26 17:14:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:14:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:14:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:14:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:14:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:14:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:14:34 [W] cypher_util.go 762: 2 not Exist, ignore & continue .
2021/01/26 17:14:34 [W] cypher_util.go 762: 2 not Exist, ignore & continue .
2021/01/26 17:14:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:14:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:14:35 [W] cypher_util.go 762: 2 not Exist, ignore & continue .
2021/01/26 17:14:35 [W] cypher_util.go 762: 2 not Exist, ignore & continue .
2021/01/26 17:14:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:14:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:14:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:14:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:14:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:14:47 [W] cypher_util.go 762: 2 not Exist, ignore & continue .
2021/01/26 17:14:47 [W] cypher_util.go 762: 2 not Exist, ignore & continue .
2021/01/26 17:15:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:15:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:15:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:15:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:15:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:15:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:15:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:15:16 [W] cypher_util.go 762: 2 not Exist, ignore & continue .
2021/01/26 17:15:16 [W] cypher_util.go 762: 2 not Exist, ignore & continue .
2021/01/26 17:15:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:15:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:15:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:15:21 [I] wjs.go 145: /bizApi/hdim/test/getDuanD.js:16:2:  计算出时间差，开始时间：2019-11-01===结束时间====2020-08-11====时间差=====284
2021/01/26 17:15:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:15:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:15:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:15:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:16:00 [I] wjs.go 145: /bizApi/hdim/test/getDuanD.js:16:2:  计算出时间差，开始时间：2019-11-01===结束时间====2020-08-11====时间差=====284
2021/01/26 17:16:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:16:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:16:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:16:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:16:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:16:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:17:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:17:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:17:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:17:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:17:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:17:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:17:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:17:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:17:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:17:46 [I] wjs.go 145: /bizApi/hdim/test/getDuanD.js:16:2:  计算出时间差，开始时间：2019-11-01===结束时间====2020-08-11====时间差=====284
2021/01/26 17:18:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:18:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:18:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:18:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:18:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:18:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:18:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:18:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:18:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:18:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:18:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:18:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:18:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:18:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:18:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:18:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:18:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:18:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:18:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:18:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:18:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:18:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:18:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:18:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:18:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:18:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:18:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:18:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:18:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:18:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:19:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:19:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:19:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:19:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:19:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:19:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:19:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:19:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:19:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:19:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:19:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:19:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:19:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:19:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:19:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:19:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:19:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:19:13 [W] query_util.go 869: can't find class for id[biz:数字国网] , search subdix of class!
2021/01/26 17:19:13 [W] cypher_util.go 762: biz:数字国网 not Exist, ignore & continue .
2021/01/26 17:19:13 [W] query_util.go 869: can't find class for id[biz:开发测试] , search subdix of class!
2021/01/26 17:19:13 [W] cypher_util.go 762: biz:开发测试 not Exist, ignore & continue .
2021/01/26 17:19:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:19:13 [W] query_util.go 869: can't find class for id[biz:数字国网] , search subdix of class!
2021/01/26 17:19:13 [W] cypher_util.go 762: biz:数字国网 not Exist, ignore & continue .
2021/01/26 17:19:13 [W] query_util.go 869: can't find class for id[biz:开发测试] , search subdix of class!
2021/01/26 17:19:13 [W] cypher_util.go 762: biz:开发测试 not Exist, ignore & continue .
2021/01/26 17:19:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:19:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:19:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:19:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:19:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:19:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:19:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:19:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:19:37 [I] wjs.go 145: /bizApi/hdim/test/getDuanD.js:16:2:  计算出时间差，开始时间：2019-11-01===结束时间====2020-08-11====时间差=====284
2021/01/26 17:19:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:19:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:19:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:20:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:20:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:20:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:20:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:20:14 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:12:9:   match("phonenumber:15005107680") <- [*1] - (:/matrix/action/calllog where  ((starttimestr >="2020-04-03 00:00:00" and starttimestr <="2020-04-03 23:59:59")    or (starttimestr >="2020-04-13 00:00:00" and starttimestr <="2020-04-13 23:59:59")) and (tophone =15005107680 or forphone =15005107680 ))
2021/01/26 17:20:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:20:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:20:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:20:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:20:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:20:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:21:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:21:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:21:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:21:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:21:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:21:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:21:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:21:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:21:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:21:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:21:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:21:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:21:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:21:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:21:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:21:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:21:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:21:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:21:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:22:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:22:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:23:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:23:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:23:39 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 17:23:39 [I] fs.go 56: Write data: // perbasisinfo 人员
var pId = decodeURIComponent(INPUT);
log.debug(111,pId)
//var pId = 'perbasisinfo:320911197112273412';

var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            //rtn.push("phonenumber:13046513888")
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(n.id==='pId') return;
                rtn.data[0].graph.nodes.push(n);
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 17:23:40 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 17:23:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:23:40 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 17:23:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:23:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:23:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:23:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:23:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:24:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:24:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:24:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:24:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:24:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:24:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:24:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:24:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:24:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:24:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:24:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:24:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:24:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:24:17 [W] query_util.go 869: can't find class for id[biz:数字国网] , search subdix of class!
2021/01/26 17:24:17 [W] cypher_util.go 762: biz:数字国网 not Exist, ignore & continue .
2021/01/26 17:24:17 [W] query_util.go 869: can't find class for id[biz:开发测试] , search subdix of class!
2021/01/26 17:24:17 [W] cypher_util.go 762: biz:开发测试 not Exist, ignore & continue .
2021/01/26 17:24:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:24:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:24:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:24:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:24:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:24:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:24:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:24:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:24:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:24:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:24:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:24:49 [I] wjs.go 145: /bizApi/hdim/test/getDuanD.js:16:2:  计算出时间差，开始时间：2019-11-01===结束时间====2020-08-11====时间差=====284
2021/01/26 17:24:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:24:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:24:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:24:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:24:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:24:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:24:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:24:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:24:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:24:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:24:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:24:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:24:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:24:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:24:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:24:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:24:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:25:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:25:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:25:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:25:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:25:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:25:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:25:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:25:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:25:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:25:29 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:12:9:   match("phonenumber:15005107680") <- [*1] - (:/matrix/action/calllog where  ((starttimestr >="2020-05-25 00:00:00" and starttimestr <="2020-05-25 23:59:59")    or (starttimestr >="2020-06-14 00:00:00" and starttimestr <="2020-06-14 23:59:59")) and (tophone =15005107680 or forphone =15005107680 ))
2021/01/26 17:25:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:25:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:25:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:25:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:25:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:25:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:26:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:26:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:26:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:27:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:27:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:28:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:28:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:29:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:29:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:30:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:30:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:31:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:31:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:31:25 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 17:31:25 [I] fs.go 56: Write data: // perbasisinfo 人员
var pId = decodeURIComponent(INPUT);
log.debug(111,pId)
//var pId = 'perbasisinfo:320911197112273412';

var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            //rtn.push("phonenumber:13046513888")
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                log.debug(n)
                if(n.id==='pId') return;
                rtn.data[0].graph.nodes.push(n);
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 17:31:25 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 17:31:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:31:26 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 17:31:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:31:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:31:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:31:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:31:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:31:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:32:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:32:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:32:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:32:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:32:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:32:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:32:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:32:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:32:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:32:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:33:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:33:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:33:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:33:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:33:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:33:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:33:18 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 17:33:18 [I] fs.go 56: Write data: // perbasisinfo 人员
var pId = decodeURIComponent(INPUT);
log.debug(111,pId)
//var pId = 'perbasisinfo:320911197112273412';

var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            //rtn.push("phonenumber:13046513888")
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                rtn.data[0].graph.nodes.push(n);
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 17:33:18 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 17:33:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:33:19 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 17:33:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:33:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:33:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:33:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:33:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:34:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:34:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:34:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:34:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:34:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:34:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:34:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:34:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:34:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:34:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:34:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:35:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:35:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:35:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:35:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:35:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:35:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:35:32 [I] wjs.go 145: /bizApi/hdim/test/getDuanD.js:16:2:  计算出时间差，开始时间：2019-11-01===结束时间====2020-08-11====时间差=====284
2021/01/26 17:35:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:35:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:35:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:35:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:35:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:35:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:35:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:35:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:35:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:35:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:35:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:35:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:36:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:36:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:36:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:36:09 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:12:9:   match("phonenumber:15005107680") <- [*1] - (:/matrix/action/calllog where  ((starttimestr >="2020-05-25 00:00:00" and starttimestr <="2020-05-25 23:59:59")    or (starttimestr >="2020-06-14 00:00:00" and starttimestr <="2020-06-14 23:59:59")) and (tophone =15005107680 or forphone =15005107680 ))
2021/01/26 17:36:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:36:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:36:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:36:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:36:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:36:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:36:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:36:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:36:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:36:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:36:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:36:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:36:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:36:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:36:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:37:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:37:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:37:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:37:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:37:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:37:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:37:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:37:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:37:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:37:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:37:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:37:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:37:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:38:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:38:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:38:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:38:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:38:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:38:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:39:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:39:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:39:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:39:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:39:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:39:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:40:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:40:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:40:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:40:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:40:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:40:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:40:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:40:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:40:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:40:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:41:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:41:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:41:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:41:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:41:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:41:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:41:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:41:43 [I] wjs.go 145: /bizApi/hdim/test/getDuanD.js:16:2:  计算出时间差，开始时间：2019-11-01===结束时间====2020-08-11====时间差=====284
2021/01/26 17:41:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:42:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:42:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:42:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:42:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:42:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:42:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:42:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:43:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:43:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:43:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:43:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:44:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:44:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:44:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:44:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:44:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:44:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:45:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:45:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:45:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:45:46 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 17:45:46 [I] fs.go 56: Write data: // perbasisinfo 人员
var pId = decodeURIComponent(INPUT);
log.debug(111,pId)
//var pId = 'perbasisinfo:320911197112273412';

if( _.indexOf(pId,'perbasisinfo') !== -1 ){
    
} else {
    
}

var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            //rtn.push("phonenumber:13046513888")
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                rtn.data[0].graph.nodes.push(n);
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 17:45:46 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 17:45:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:45:46 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 17:46:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:46:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:46:33 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 17:46:33 [I] fs.go 56: Write data: // perbasisinfo 人员
var pId = decodeURIComponent(INPUT);
//var pId = 'perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;


if( _.indexOf(pId,'perbasisinfo') !== -1 ){
    
} else if( _.indexOf(pId,'phonenumber') !== -1 ){
    
}


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            //rtn.push("phonenumber:13046513888")
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                rtn.data[0].graph.nodes.push(n);
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 17:46:33 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 17:46:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:46:34 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 17:46:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:47:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:47:03 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 17:47:03 [I] fs.go 56: Write data: // perbasisinfo 人员
var pId = decodeURIComponent(INPUT);
//var pId = 'perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;


if( _.indexOf(pId,'perbasisinfo') !== -1 ){
    
} else if( _.indexOf(pId,'phonenumber') !== -1 ){
    
}


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - () union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            //rtn.push("phonenumber:13046513888")
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                rtn.data[0].graph.nodes.push(n);
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 17:47:03 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 17:47:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:47:03 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 17:47:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:47:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:48:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:48:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:49:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:49:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:49:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:49:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:49:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:49:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:49:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:49:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:50:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:50:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:50:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:51:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:51:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:51:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:51:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:52:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:52:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:52:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:52:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:52:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:52:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:52:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:52:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:52:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:52:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:52:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:52:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:52:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:52:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:52:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:53:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:53:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:53:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:53:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:54:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:54:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:54:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:54:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:54:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:55:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:55:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:55:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:55:18 [W] cypher_util.go 762: 3 not Exist, ignore & continue .
2021/01/26 17:55:18 [W] cypher_util.go 762: 3 not Exist, ignore & continue .
2021/01/26 17:55:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:55:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:55:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:55:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:55:30 [W] cypher_util.go 762: 3 not Exist, ignore & continue .
2021/01/26 17:55:30 [W] cypher_util.go 762: 3 not Exist, ignore & continue .
2021/01/26 17:55:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:55:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:55:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:55:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:55:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:55:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:55:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:55:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:55:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:55:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:55:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:55:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:55:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:55:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:55:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:55:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:55:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:55:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:55:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:55:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:55:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:55:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:55:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:55:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:55:57 [W] query_util.go 869: can't find class for id[biz:数字国网] , search subdix of class!
2021/01/26 17:55:57 [W] cypher_util.go 762: biz:数字国网 not Exist, ignore & continue .
2021/01/26 17:55:57 [W] query_util.go 869: can't find class for id[biz:开发测试] , search subdix of class!
2021/01/26 17:55:57 [W] cypher_util.go 762: biz:开发测试 not Exist, ignore & continue .
2021/01/26 17:56:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:56:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:56:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:56:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:56:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:56:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:56:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:56:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:56:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:56:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:56:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:56:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:56:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:56:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:56:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:56:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:56:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:56:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:56:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:56:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:56:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:56:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:56:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:56:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:56:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:56:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:56:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:56:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:56:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:56:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:56:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:56:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:56:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:57:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:57:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:57:17 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 17:57:17 [I] fs.go 56: Write data: // perbasisinfo 人员
var pId = decodeURIComponent(INPUT);
//var pId = 'perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;


if( _.indexOf(pId,'perbasisinfo') !== -1 ){
    
} else if( _.indexOf(pId,'phonenumber') !== -1 ){
    
}


// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        // 人 - 电话号码
        // 人 - 手机 - 手机号码
        var matchStr = "match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
        
        log.debug(11,matchStr)
        var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
        // 只返回手机号码
        rtn =   _.compact(_.map(tmp,function(v){
                    if(v.class === '/matrix/entity/phonenumber'){
                        return v.id;
                    }
                }));
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            //rtn.push("phonenumber:13046513888")
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                rtn.data[0].graph.nodes.push(n);
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 17:57:17 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 17:57:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:57:18 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 17:57:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:57:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:57:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:57:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:58:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:58:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:59:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 17:59:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:02:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:06:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:06:15 [E] modb.go 90: [UnKnown]: query Timed out!
"[UnKnown]" backtrace:
git.wecise.com/wecise/platform/odb.(*CTernary).RelationRangeLoop:cypher_ternary.go:541
git.wecise.com/wecise/platform/odb.(*CTernary).SubjectEvaluateAndSpread:cypher_ternary.go:368
git.wecise.com/wecise/platform/odb.(*CTernary).EvaluateAndSpread:cypher_ternary.go:223
git.wecise.com/wecise/platform/odb.(*CPhase).Evaluate:cypher_query.go:335
git.wecise.com/wecise/platform/odb.(*Gutil).CypherMatchQuery:cypher_query.go:94
git.wecise.com/wecise/platform/odb.(*MqlSemantics).Cypher:cypher.go:1318
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:275
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/web/routers/modb.Mql:modb.go:87
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375
2021/01/26 18:06:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:06:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:06:38 [E] modb.go 90: [UnKnown]: query Timed out!
"[UnKnown]" backtrace:
git.wecise.com/wecise/platform/odb.(*CTernary).RelationRangeLoop:cypher_ternary.go:541
git.wecise.com/wecise/platform/odb.(*CTernary).SubjectEvaluateAndSpread:cypher_ternary.go:368
git.wecise.com/wecise/platform/odb.(*CTernary).EvaluateAndSpread:cypher_ternary.go:223
git.wecise.com/wecise/platform/odb.(*CPhase).Evaluate:cypher_query.go:335
git.wecise.com/wecise/platform/odb.(*Gutil).CypherMatchQuery:cypher_query.go:94
git.wecise.com/wecise/platform/odb.(*MqlSemantics).Cypher:cypher.go:1318
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:275
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/web/routers/modb.Mql:modb.go:87
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375
2021/01/26 18:06:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:08:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:08:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:08:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:09:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:09:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:09:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:09:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:09:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:09:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:10:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:10:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:10:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:10:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:10:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:10:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:10:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:10:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:10:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:10:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:10:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:10:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:11:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:11:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:11:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:11:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:11:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:14:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:14:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:14:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:14:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:14:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:14:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:14:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:15:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:15:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:15:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:17:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:17:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:17:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:18:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:18:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:18:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:18:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:18:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:18:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:25:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:25:06 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 18:25:06 [I] fs.go 56: Write data: // perbasisinfo 人员
var pId = decodeURIComponent(INPUT);
//var pId = 'perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        
        if( _.indexOf(pId,'perbasisinfo') !== -1 ){
            // 人 - 电话号码
            // 人 - 手机 - 手机号码
            var matchStr = "match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
            
            log.debug(11,matchStr)
            var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
            // 只返回手机号码
            rtn =   _.compact(_.map(tmp,function(v){
                        if(v.class === '/matrix/entity/phonenumber'){
                            return v.id;
                        }
                    }));
        } else if( _.indexOf(pId,'phonenumber') !== -1 ){
            rtn = [pId];
        }
        
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            //rtn.push("phonenumber:13046513888")
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                rtn.data[0].graph.nodes.push(n);
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 18:25:06 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 18:25:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:25:07 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 18:25:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:25:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:25:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:25:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:25:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:25:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:25:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:25:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:25:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:25:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:25:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:25:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:27:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:27:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:29:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:29:23 [W] cypher_util.go 762: p1 not Exist, ignore & continue .
2021/01/26 18:29:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:35:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:35:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:37:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:37:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:37:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:41:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:41:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:41:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:41:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:41:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:41:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:41:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:41:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:41:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:41:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:41:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:41:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:41:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:41:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:41:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:41:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:41:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:41:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:41:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:41:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:41:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:41:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:41:55 [W] query_util.go 869: can't find class for id[biz:数字国网] , search subdix of class!
2021/01/26 18:41:55 [W] cypher_util.go 762: biz:数字国网 not Exist, ignore & continue .
2021/01/26 18:41:55 [W] query_util.go 869: can't find class for id[biz:开发测试] , search subdix of class!
2021/01/26 18:41:55 [W] cypher_util.go 762: biz:开发测试 not Exist, ignore & continue .
2021/01/26 18:42:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:42:23 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 18:42:23 [I] fs.go 56: Write data: // perbasisinfo 人员
var pId = decodeURIComponent(INPUT);
//var pId = 'perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        
        if( _.indexOf(pId,'perbasisinfo') !== -1 ){
            // 人 - 电话号码
            // 人 - 手机 - 手机号码
            var matchStr = "match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
            
            log.debug(11,matchStr)
            var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
            // 只返回手机号码
            rtn =   _.compact(_.map(tmp,function(v){
                        if(v.class === '/matrix/entity/phonenumber'){
                            return v.id;
                        }
                    }));
        } else if( _.indexOf(pId,'phonenumber') !== -1 ){
            rtn = [pId];
        }
        
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - ()");
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                rtn.data[0].graph.nodes.push(n);
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 18:42:23 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 18:42:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:42:24 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 18:43:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:43:43 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 18:43:43 [I] fs.go 56: Write data: // perbasisinfo 人员
var pId = decodeURIComponent(INPUT);
//var pId = 'perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        
        if( _.indexOf(pId,'perbasisinfo') !== -1 ){
            // 人 - 电话号码
            // 人 - 手机 - 手机号码
            var matchStr = "match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
            
            log.debug(11,matchStr)
            var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
            // 只返回手机号码
            rtn =   _.compact(_.map(tmp,function(v){
                        if(v.class === '/matrix/entity/phonenumber'){
                            return v.id;
                        }
                    }));
        } else if( _.indexOf(pId,'phonenumber') !== -1 ){
            rtn = [pId];
        }
        
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                rtn.data[0].graph.nodes.push(n);
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 18:43:43 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 18:43:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:43:43 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 18:47:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:47:12 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 18:47:12 [I] fs.go 56: Write data: // perbasisinfo 人员
var pId = decodeURIComponent(INPUT);
//var pId = 'perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        
        if( _.indexOf(pId,'perbasisinfo') !== -1 ){
            // 人 - 电话号码
            // 人 - 手机 - 手机号码
            var matchStr = "match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
            
            log.debug(11,matchStr)
            var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
            // 只返回手机号码
            rtn =   _.compact(_.map(tmp,function(v){
                        if(v.class === '/matrix/entity/phonenumber'){
                            return v.id;
                        }
                    }));
        } else if( _.indexOf(pId,'phonenumber') !== -1 ){
            rtn = [pId];
        }
        
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                rtn.data[0].graph.nodes.push(n);
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 18:47:12 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 18:47:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:47:13 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 18:47:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:47:38 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 18:47:38 [I] fs.go 56: Write data: // perbasisinfo 人员
var pId = decodeURIComponent(INPUT);
//var pId = 'perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        
        if( _.indexOf(pId,'perbasisinfo') !== -1 ){
            // 人 - 电话号码
            // 人 - 手机 - 手机号码
            var matchStr = "match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
            
            log.debug(11,matchStr)
            var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
            // 只返回手机号码
            rtn =   _.compact(_.map(tmp,function(v){
                        if(v.class === '/matrix/entity/phonenumber'){
                            return v.id;
                        }
                    }));
        } else if( _.indexOf(pId,'phonenumber') !== -1 ){
            rtn = [pId];
        }
        
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                rtn.data[0].graph.nodes.push(n);
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 18:47:38 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 18:47:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:47:39 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 18:49:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:49:33 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 18:49:33 [I] fs.go 56: Write data: // perbasisinfo 人员
var pId = decodeURIComponent(INPUT);
//var pId = 'perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        
        if( _.indexOf(pId,'perbasisinfo') !== -1 ){
            // 人 - 电话号码
            // 人 - 手机 - 手机号码
            var matchStr = "match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
            
            log.debug(11,matchStr)
            var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
            // 只返回手机号码
            rtn =   _.compact(_.map(tmp,function(v){
                        if(v.class === '/matrix/entity/phonenumber'){
                            return v.id;
                        }
                    }));
        } else if( _.indexOf(pId,'phonenumber') !== -1 ){
            rtn = [pId];
        }
        
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                rtn.data[0].graph.nodes.push(n);
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 18:49:33 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 18:49:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:49:34 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 18:49:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:49:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:49:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:49:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:49:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:49:46 [E] wjs.go 149: /bizApi/hdim/test/test_diagnosis_mobile.js:93:9:  map[message:Cannot access member 'join' of null]
2021/01/26 18:50:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:51:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:51:38 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 18:51:38 [I] fs.go 56: Write data: // perbasisinfo 人员
var pId = decodeURIComponent(INPUT);
//var pId = 'perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;
log.debug(555,_.indexOf(pId,'perbasisinfo'))
// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        
        if( _.indexOf(pId,'perbasisinfo') !== -1 ){
            // 人 - 电话号码
            // 人 - 手机 - 手机号码
            var matchStr = "match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
            
            log.debug(11,matchStr)
            var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
            // 只返回手机号码
            rtn =   _.compact(_.map(tmp,function(v){
                        if(v.class === '/matrix/entity/phonenumber'){
                            return v.id;
                        }
                    }));
        } else if( _.indexOf(pId,'phonenumber') !== -1 ){
            rtn = [pId];
        }
        
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                rtn.data[0].graph.nodes.push(n);
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 18:51:38 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 18:51:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:51:39 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 18:51:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:51:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:51:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:51:43 [E] wjs.go 149: /bizApi/hdim/test/test_diagnosis_mobile.js:93:9:  map[message:Cannot access member 'join' of null]
2021/01/26 18:51:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:51:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:52:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:52:02 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 18:52:02 [I] fs.go 56: Write data: // perbasisinfo 人员
var pId = decodeURIComponent(INPUT);
//var pId = 'perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;
log.debug(555,pId,_.indexOf(pId,'perbasisinfo'))
// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        
        if( _.indexOf(pId,'perbasisinfo') !== -1 ){
            // 人 - 电话号码
            // 人 - 手机 - 手机号码
            var matchStr = "match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
            
            log.debug(11,matchStr)
            var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
            // 只返回手机号码
            rtn =   _.compact(_.map(tmp,function(v){
                        if(v.class === '/matrix/entity/phonenumber'){
                            return v.id;
                        }
                    }));
        } else if( _.indexOf(pId,'phonenumber') !== -1 ){
            rtn = [pId];
        }
        
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                rtn.data[0].graph.nodes.push(n);
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 18:52:02 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 18:52:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:52:03 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 18:52:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:52:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:52:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:52:07 [E] wjs.go 149: /bizApi/hdim/test/test_diagnosis_mobile.js:93:9:  map[message:Cannot access member 'join' of null]
2021/01/26 18:52:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:52:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:54:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:54:37 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 18:54:37 [I] fs.go 56: Write data: // perbasisinfo 人员
var pId = decodeURIComponent(INPUT);
//var pId = 'perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;

log.debug(555,pId,RegExp(/perbasisinfo/).test(pId))
// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        
        if( _.indexOf(pId,'perbasisinfo') !== -1 ){
            // 人 - 电话号码
            // 人 - 手机 - 手机号码
            var matchStr = "match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
            
            log.debug(11,matchStr)
            var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
            // 只返回手机号码
            rtn =   _.compact(_.map(tmp,function(v){
                        if(v.class === '/matrix/entity/phonenumber'){
                            return v.id;
                        }
                    }));
        } else if( _.indexOf(pId,'phonenumber') !== -1 ){
            rtn = [pId];
        }
        
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                rtn.data[0].graph.nodes.push(n);
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 18:54:37 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 18:54:37 [E] batch.go 73: cql =[INSERT INTO object JSON ? DEFAULT UNSET], params=[[{"_tokens":{"_fields":"\u0000{\"remark\":\"\",\"ctime\":1611637481113,\"author\":\"admin\"}\u00000\u00006376632034106499724\u00002021-01-26 10:54:37\u0000admin\u0000/matrix/filesystem\u00002021-01-26\u0000js\u0000/script/bizApi/hdim/test/test_diagnosis_mobile.js\u00001611658477676\u0000test_diagnosis_mobile.js\u00002021-01-26 04:58:48\u0000/script/bizApi/hdim/test","_raw":""},"class":"/matrix/filesystem","day":"2021-01-26","id":"6376632034106499724","list_bigint_0":[-8236346775025219039],"list_bigint_1":[],"map_varchar_set_0":null,"map_varchar_set_1":null,"map_varchar_set_10":null,"map_varchar_set_11":null,"map_varchar_set_12":null,"map_varchar_set_13":null,"map_varchar_set_14":null,"map_varchar_set_15":null,"map_varchar_set_16":null,"map_varchar_set_19":null,"map_varchar_set_2":null,"map_varchar_set_20":null,"map_varchar_set_21":null,"map_varchar_set_22":null,"map_varchar_set_23":null,"map_varchar_set_24":null,"map_varchar_set_25":null,"map_varchar_set_26":null,"map_varchar_set_27":null,"map_varchar_set_3":null,"map_varchar_set_30":null,"map_varchar_set_31":null,"map_varchar_set_4":null,"map_varchar_set_5":null,"map_varchar_set_6":null,"map_varchar_set_7":null,"map_varchar_set_8":null,"map_varchar_set_9":null,"name":"test_diagnosis_mobile.js","smallint_0":0,"tags":[],"timestamp_2":"2021-01-26T10:54:37.1Z","timestamp_3":"2021-01-26T04:58:48.628Z","varchar_19":"/script/bizApi/hdim/test","varchar_2":"admin","varchar_20":"/script/bizApi/hdim/test/test_diagnosis_mobile.js","varchar_33":"js","varchar_34":"{\"remark\":\"\",\"ctime\":1611637481113,\"author\":\"admin\"}","varchar_394":null,"varchar_396":null,"vtime":1611658477676}]], err=[Error decoding JSON value for timestamp_2: Unable to coerce '2021-01-26T10:54:37.1Z' to a formatted date (long)]
2021/01/26 18:54:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:54:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:54:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:54:41 [E] wjs.go 149: /bizApi/hdim/test/test_diagnosis_mobile.js:93:9:  map[message:Cannot access member 'join' of null]
2021/01/26 18:54:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:54:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:54:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:54:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:54:52 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 18:54:52 [I] fs.go 56: Write data: // perbasisinfo 人员
var pId = decodeURIComponent(INPUT);
//var pId = 'perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;

log.debug(555,pId,RegExp(/perbasisinfo/).test(pId))
// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        
        if( _.indexOf(pId,'perbasisinfo') !== -1 ){
            // 人 - 电话号码
            // 人 - 手机 - 手机号码
            var matchStr = "match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
            
            log.debug(11,matchStr)
            var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
            // 只返回手机号码
            rtn =   _.compact(_.map(tmp,function(v){
                        if(v.class === '/matrix/entity/phonenumber'){
                            return v.id;
                        }
                    }));
        } else if( _.indexOf(pId,'phonenumber') !== -1 ){
            rtn = [pId];
        }
        
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                rtn.data[0].graph.nodes.push(n);
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 18:54:52 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 18:54:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:54:53 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 18:54:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:54:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:54:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:54:58 [E] wjs.go 149: /bizApi/hdim/test/test_diagnosis_mobile.js:94:9:  map[message:Cannot access member 'join' of null]
2021/01/26 18:55:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:55:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:55:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:55:10 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 18:55:10 [I] fs.go 56: Write data: // perbasisinfo 人员
var pId = decodeURIComponent(INPUT);
//var pId = 'perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;

log.debug(555,pId,RegExp(/perbasisidnfo/).test(pId))
// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        
        if( _.indexOf(pId,'perbasisinfo') !== -1 ){
            // 人 - 电话号码
            // 人 - 手机 - 手机号码
            var matchStr = "match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
            
            log.debug(11,matchStr)
            var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
            // 只返回手机号码
            rtn =   _.compact(_.map(tmp,function(v){
                        if(v.class === '/matrix/entity/phonenumber'){
                            return v.id;
                        }
                    }));
        } else if( _.indexOf(pId,'phonenumber') !== -1 ){
            rtn = [pId];
        }
        
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                rtn.data[0].graph.nodes.push(n);
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 18:55:10 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 18:55:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:55:11 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 18:55:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:55:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:55:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:55:15 [E] wjs.go 149: /bizApi/hdim/test/test_diagnosis_mobile.js:94:9:  map[message:Cannot access member 'join' of null]
2021/01/26 18:55:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:55:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:55:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:55:31 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 18:55:31 [I] fs.go 56: Write data: // perbasisinfo 人员
var pId = decodeURIComponent(INPUT);
//var pId = 'perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        
        if( _.indexOf(pId,'perbasisinfo') !== -1 ){
            // 人 - 电话号码
            // 人 - 手机 - 手机号码
            var matchStr = "match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
            
            log.debug(11,matchStr)
            var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
            // 只返回手机号码
            rtn =   _.compact(_.map(tmp,function(v){
                        if(v.class === '/matrix/entity/phonenumber'){
                            return v.id;
                        }
                    }));
        } else if( _.indexOf(pId,'phonenumber') !== -1 ){
            rtn = [pId];
        }
        
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                rtn.data[0].graph.nodes.push(n);
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 18:55:31 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 18:55:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:55:32 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 18:56:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:56:09 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 18:56:09 [I] fs.go 56: Write data: // perbasisinfo 人员
var pId = decodeURIComponent(INPUT);
//var pId = 'perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        
        if(RegExp(/perbasisinfo/).test(pId)){
            // 人 - 电话号码
            // 人 - 手机 - 手机号码
            var matchStr = "match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
            
            log.debug(11,matchStr)
            var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
            // 只返回手机号码
            rtn =   _.compact(_.map(tmp,function(v){
                        if(v.class === '/matrix/entity/phonenumber'){
                            return v.id;
                        }
                    }));
        } else if( RegExp(/phonenumber/).test(pId) ){
            rtn = [pId];
        }
        
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                rtn.data[0].graph.nodes.push(n);
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 18:56:09 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 18:56:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:56:09 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 18:56:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:56:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:56:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:57:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:57:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:57:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:57:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:57:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:57:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:57:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:58:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:58:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:58:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:58:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:58:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:58:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 18:58:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:01:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:01:20 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 19:01:20 [I] fs.go 56: Write data: // perbasisinfo 人员
var pId = decodeURIComponent(INPUT);
//var pId = 'perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        
        if(RegExp(/perbasisinfo/).test(pId)){
            // 人 - 电话号码
            // 人 - 手机 - 手机号码
            var matchStr = "match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
            
            log.debug(11,matchStr)
            var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
            // 只返回手机号码
            rtn =   _.compact(_.map(tmp,function(v){
                        if(v.class === '/matrix/entity/phonenumber'){
                            return v.id;
                        }
                    }));
        } else if( RegExp(/phonenumber/).test(pId) ){
            rtn = [pId];
        }
        
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                rtn.data[0].graph.nodes.push(n);
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 19:01:20 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 19:01:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:01:21 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 19:02:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:02:23 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 19:02:23 [I] fs.go 56: Write data: // perbasisinfo 人员
var pId = decodeURIComponent(INPUT);
//var pId = 'perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        
        if(RegExp(/perbasisinfo/).test(pId)){
            // 人 - 电话号码
            // 人 - 手机 - 手机号码
            var matchStr = "match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
            
            log.debug(11,matchStr)
            var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
            // 只返回手机号码
            rtn =   _.compact(_.map(tmp,function(v){
                        if(v.class === '/matrix/entity/phonenumber'){
                            return v.id;
                        }
                    }));
        } else if( RegExp(/phonenumber/).test(pId) ){
            rtn = [pId];
        }
        
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                rtn.data[0].graph.nodes.push(n);
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 19:02:23 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 19:02:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:02:24 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 19:02:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:02:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:02:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:02:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:02:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:02:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:02:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:02:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:04:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:04:28 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 19:04:28 [I] fs.go 56: Write data: // perbasisinfo 人员
var pId = decodeURIComponent(INPUT);
//var pId = 'perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        
        if(RegExp(/perbasisinfo/).test(pId)){
            // 人 - 电话号码
            // 人 - 手机 - 手机号码
            var matchStr = "match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
            
            log.debug(11,matchStr)
            var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
            // 只返回手机号码
            rtn =   _.compact(_.map(tmp,function(v){
                        if(v.class === '/matrix/entity/phonenumber'){
                            return v.id;
                        }
                    }));
        } else if( RegExp(/phonenumber/).test(pId) ){
            rtn = [pId];
        }
        
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                rtn.data[0].graph.nodes.push(n);
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 19:04:28 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 19:04:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:04:29 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 19:04:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:04:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:04:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:04:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:04:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:05:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:05:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:05:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:05:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:05:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:05:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:05:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:05:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:05:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:05:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:05:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:05:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:05:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:05:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:05:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:05:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:05:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:05:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:05:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:05:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:05:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:05:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:05:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:05:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:05:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:05:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:05:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:05:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:08:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:08:26 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 19:08:26 [I] fs.go 56: Write data: // perbasisinfo 人员
var pId = decodeURIComponent(INPUT);
//var pId = 'perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        
        if(RegExp(/perbasisinfo/).test(pId)){
            // 人 - 电话号码
            // 人 - 手机 - 手机号码
            var matchStr = "match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
            
            log.debug(11,matchStr)
            var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
            // 只返回手机号码
            rtn =   _.compact(_.map(tmp,function(v){
                        if(v.class === '/matrix/entity/phonenumber'){
                            return v.id;
                        }
                    }));
        } else if( RegExp(/phonenumber/).test(pId) ){
            rtn = [pId];
        }
        
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(_.find(tmp.data[0].graph.Edges, {source:v.id}) || _.find(tmp.data[0].graph.Edges, {target:v.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 19:08:26 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 19:08:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:08:27 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 19:08:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:08:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:08:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:08:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:08:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:10:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:10:22 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 19:10:22 [I] fs.go 56: Write data: // perbasisinfo 人员
var pId = decodeURIComponent(INPUT);
//var pId = 'perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        
        if(RegExp(/perbasisinfo/).test(pId)){
            // 人 - 电话号码
            // 人 - 手机 - 手机号码
            var matchStr = "match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
            
            log.debug(11,matchStr)
            var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
            // 只返回手机号码
            rtn =   _.compact(_.map(tmp,function(v){
                        if(v.class === '/matrix/entity/phonenumber'){
                            return v.id;
                        }
                    }));
        } else if( RegExp(/phonenumber/).test(pId) ){
            rtn = [pId];
        }
        
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v,_.find(tmp.data[0].graph.Edges, {source:v.id}))
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(_.find(tmp.data[0].graph.Edges, {source:v.id}) || _.find(tmp.data[0].graph.Edges, {target:v.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 19:10:22 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 19:10:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:10:23 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 19:10:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:10:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:10:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:10:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:10:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:11:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:11:41 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 19:11:41 [I] fs.go 56: Write data: // perbasisinfo 人员
var pId = decodeURIComponent(INPUT);
//var pId = 'perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        
        if(RegExp(/perbasisinfo/).test(pId)){
            // 人 - 电话号码
            // 人 - 手机 - 手机号码
            var matchStr = "match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
            
            log.debug(11,matchStr)
            var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
            // 只返回手机号码
            rtn =   _.compact(_.map(tmp,function(v){
                        if(v.class === '/matrix/entity/phonenumber'){
                            return v.id;
                        }
                    }));
        } else if( RegExp(/phonenumber/).test(pId) ){
            rtn = [pId];
        }
        
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v,_.findWhere(tmp.data[0].graph.Edges, {source:v.id}))
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(_.findWhere(tmp.data[0].graph.Edges, {source:v.id}) || _.findWhere(tmp.data[0].graph.Edges, {target:v.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 19:11:41 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 19:11:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:11:41 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 19:11:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:11:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:11:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:11:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:11:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:11:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:12:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:12:33 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 19:12:33 [I] fs.go 56: Write data: // perbasisinfo 人员
var pId = decodeURIComponent(INPUT);
//var pId = 'perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        
        if(RegExp(/perbasisinfo/).test(pId)){
            // 人 - 电话号码
            // 人 - 手机 - 手机号码
            var matchStr = "match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
            
            log.debug(11,matchStr)
            var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
            // 只返回手机号码
            rtn =   _.compact(_.map(tmp,function(v){
                        if(v.class === '/matrix/entity/phonenumber'){
                            return v.id;
                        }
                    }));
        } else if( RegExp(/phonenumber/).test(pId) ){
            rtn = [pId];
        }
        
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(_.find(tmp.data[0].graph.Edges, {source:n.id}) || _.find(tmp.data[0].graph.Edges, {target:n.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 19:12:33 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 19:12:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:12:34 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 19:12:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:12:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:12:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:12:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:12:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:12:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:13:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:13:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:13:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:13:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:13:54 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 19:13:54 [I] fs.go 56: Write data: // perbasisinfo 人员
var pId = decodeURIComponent(INPUT);
//var pId = 'perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        
        if(RegExp(/perbasisinfo/).test(pId)){
            // 人 - 电话号码
            // 人 - 手机 - 手机号码
            var matchStr = "match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
            
            log.debug(11,matchStr)
            var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
            // 只返回手机号码
            rtn =   _.compact(_.map(tmp,function(v){
                        if(v.class === '/matrix/entity/phonenumber'){
                            return v.id;
                        }
                    }));
        } else if( RegExp(/phonenumber/).test(pId) ){
            rtn = [pId];
        }
        
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(_.findWhere(tmp.data[0].graph.Edges, {source:n.id}) || _.findWhere(tmp.data[0].graph.Edges, {target:n.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 19:13:54 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 19:13:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:13:55 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 19:14:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:14:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:14:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:14:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:14:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:14:48 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 19:14:48 [I] fs.go 56: Write data: // perbasisinfo 人员
var pId = decodeURIComponent(INPUT);
//var pId = 'perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        
        if(RegExp(/perbasisinfo/).test(pId)){
            // 人 - 电话号码
            // 人 - 手机 - 手机号码
            var matchStr = "match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
            
            log.debug(11,matchStr)
            var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
            // 只返回手机号码
            rtn =   _.compact(_.map(tmp,function(v){
                        if(v.class === '/matrix/entity/phonenumber'){
                            return v.id;
                        }
                    }));
        } else if( RegExp(/phonenumber/).test(pId) ){
            rtn = [pId];
        }
        
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                log.debug(_.findWhere(tmp.data[0].graph.Edges, {source:n.id}))
                if(_.findWhere(tmp.data[0].graph.Edges, {source:n.id}) || _.findWhere(tmp.data[0].graph.Edges, {target:n.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 19:14:48 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 19:14:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:14:49 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 19:14:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:14:57 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 19:14:57 [I] fs.go 56: Write data: // perbasisinfo 人员
var pId = decodeURIComponent(INPUT);
//var pId = 'perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        
        if(RegExp(/perbasisinfo/).test(pId)){
            // 人 - 电话号码
            // 人 - 手机 - 手机号码
            var matchStr = "match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
            
            log.debug(11,matchStr)
            var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
            // 只返回手机号码
            rtn =   _.compact(_.map(tmp,function(v){
                        if(v.class === '/matrix/entity/phonenumber'){
                            return v.id;
                        }
                    }));
        } else if( RegExp(/phonenumber/).test(pId) ){
            rtn = [pId];
        }
        
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                log.debug(n.id,_.findWhere(tmp.data[0].graph.Edges, {source:n.id}))
                if(_.findWhere(tmp.data[0].graph.Edges, {source:n.id}) || _.findWhere(tmp.data[0].graph.Edges, {target:n.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 19:14:57 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 19:14:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:14:58 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 19:15:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:15:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:16:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:16:29 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 19:16:29 [I] fs.go 56: Write data: // perbasisinfo 人员
var pId = decodeURIComponent(INPUT);
//var pId = 'perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        
        if(RegExp(/perbasisinfo/).test(pId)){
            // 人 - 电话号码
            // 人 - 手机 - 手机号码
            var matchStr = "match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
            
            log.debug(11,matchStr)
            var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
            // 只返回手机号码
            rtn =   _.compact(_.map(tmp,function(v){
                        if(v.class === '/matrix/entity/phonenumber'){
                            return v.id;
                        }
                    }));
        } else if( RegExp(/phonenumber/).test(pId) ){
            rtn = [pId];
        }
        
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                log.debug(23223,_.findWhere(tmp.data[0].graph.Edges, {source:n.id}))
                if(_.findWhere(tmp.data[0].graph.Edges, {source:n.id}) || _.findWhere(tmp.data[0].graph.Edges, {target:n.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 19:16:29 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 19:16:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:16:30 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 19:16:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:16:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:16:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:16:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:16:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:16:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:16:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:17:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:17:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:17:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:17:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:17:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:17:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:17:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:17:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:19:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:19:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:19:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:19:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:19:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:19:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:19:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 19:19:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:08:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:08:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:08:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:08:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:08:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:08:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:08:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:08:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:08:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:08:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:08:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:08:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:08:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:08:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:08:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:08:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:08:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:08:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:08:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:08:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:08:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:08:46 [W] query_util.go 869: can't find class for id[hotel:] , search subdix of class!
2021/01/26 20:08:46 [W] query_util.go 869: can't find class for id[gotooutin:] , search subdix of class!
2021/01/26 20:08:46 [W] cypher_util.go 762: gotooutin: not Exist, ignore & continue .
2021/01/26 20:08:46 [W] query_util.go 869: can't find class for id[gotominhangexit:] , search subdix of class!
2021/01/26 20:08:46 [W] cypher_util.go 762: gotominhangexit: not Exist, ignore & continue .
2021/01/26 20:08:46 [W] query_util.go 869: can't find class for id[gotominhangticket:] , search subdix of class!
2021/01/26 20:08:46 [W] cypher_util.go 762: gotominhangticket: not Exist, ignore & continue .
2021/01/26 20:08:46 [W] query_util.go 869: can't find class for id[gotorail:] , search subdix of class!
2021/01/26 20:08:46 [W] cypher_util.go 762: gotorail: not Exist, ignore & continue .
2021/01/26 20:08:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:08:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:08:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:08:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:08:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:08:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:08:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:12:11 [I] wnats.go 86: Nats servers: nats://user:user@10.10.27.20:4222
2021/01/26 20:12:11 [I] wcsdr.go 51: Cassandra servers: 10.10.27.20. Keyspace: matrix
2021/01/26 20:12:11 [I] cache.go 349: Refresh cache {all,trigger,field,class,index,rels,bulk,tsdb,bitlog,fsindex}...
2021/01/26 20:12:11 [I] cache.go 352: Refresh cache: Ftypes.
2021/01/26 20:12:11 [I] cache.go 370: Refresh cache: DateFields, AllFields, LoptionFields, Fields.
2021/01/26 20:12:11 [I] cache.go 380: Refresh cache: tsdb.
2021/01/26 20:12:11 [I] cache.go 390: Refresh cache: bitlog.
2021/01/26 20:12:12 [I] modb.go 38: Modb debug start.
2021/01/26 20:12:14 [I] cache.go 400: Refresh cache: Classes, ClassFields, ClassTTL.
2021/01/26 20:12:15 [I] cache.go 411: Refresh cache: enum.
2021/01/26 20:12:15 [I] cache.go 421: Refresh cache: CacheIndex.
2021/01/26 20:12:15 [I] cache.go 441: Refresh cache: relations.
2021/01/26 20:12:15 [E] cache.go 453: not find relation_stats, create it and restart.
2021/01/26 20:12:15 [I] cache.go 469: Refresh cache: FieldCap.
2021/01/26 20:12:15 [I] cache.go 492: ------Finish Cache------
2021/01/26 20:12:15 [I] util.go 203: Start schema change receiver.
2021/01/26 20:12:15 [I] setting.go 206: Load config from etcd: /matrix/etc/web/app.ini
2021/01/26 20:12:15 [I] setting.go 222: Matrix: Portal Service
2021/01/26 20:12:15 [I] setting.go 329: User login type: local
2021/01/26 20:12:15 [I] setting.go 545: Cache Service Enabled
2021/01/26 20:12:15 [I] setting.go 557: Session Service Enabled
2021/01/26 20:12:15 [I] wcsdr.go 51: Cassandra servers: 10.10.27.20. Keyspace: hdim
2021/01/26 20:12:15 [I] cache.go 349: Refresh cache {all,trigger,field,class,index,rels,bulk,tsdb,bitlog,fsindex}...
2021/01/26 20:12:15 [I] cache.go 370: Refresh cache: DateFields, AllFields, LoptionFields, Fields.
2021/01/26 20:12:15 [I] cache.go 380: Refresh cache: tsdb.
2021/01/26 20:12:15 [I] cache.go 390: Refresh cache: bitlog.
2021/01/26 20:12:18 [I] cache.go 400: Refresh cache: Classes, ClassFields, ClassTTL.
2021/01/26 20:12:18 [I] cache.go 411: Refresh cache: enum.
2021/01/26 20:12:18 [I] cache.go 421: Refresh cache: CacheIndex.
2021/01/26 20:12:18 [I] cache.go 441: Refresh cache: relations.
2021/01/26 20:12:18 [I] cache.go 469: Refresh cache: FieldCap.
2021/01/26 20:12:18 [I] cache.go 492: ------Finish Cache------
2021/01/26 20:12:18 [I] util.go 203: Start schema change receiver.
2021/01/26 20:12:18 [I] install.go 143: Init 'hdim' dfs file /app to local ok. [0.1s]
2021/01/26 20:12:29 [I] install.go 149: Init 'hdim' dfs file /script to cache ok. [10.5s]
2021/01/26 20:12:29 [I] install.go 143: Init 'matrix' dfs file /app to local ok. [0.1s]
2021/01/26 20:12:36 [I] install.go 149: Init 'matrix' dfs file /script to cache ok. [7.2s]
2021/01/26 20:12:36 [I] install.go 37: Run Mode: Development
2021/01/26 20:12:36 [I] install.go 99: git version 2.26.2
2021/01/26 20:12:36 [I] stats.go 111: Stats get lock.
2021/01/26 20:12:36 [I] repo.go 120: Repository path: /opt/matrix/web/repositories/hdim/depot.git
2021/01/26 20:12:36 [I] repo.go 120: Repository path: /opt/matrix/web/repositories/hdim/dfs.git
2021/01/26 20:12:40 [I] install.go 214: Init 'hdim' nlp robot ok
2021/01/26 20:12:40 [I] install.go 219: Cacche 'hdim' app perms ok
2021/01/26 20:12:40 [I] install.go 224: Cacche 'hdim' ui perms ok
2021/01/26 20:12:40 [I] repo.go 120: Repository path: /opt/matrix/web/repositories/matrix/depot.git
2021/01/26 20:12:40 [I] repo.go 120: Repository path: /opt/matrix/web/repositories/matrix/dfs.git
2021/01/26 20:12:43 [I] install.go 214: Init 'matrix' nlp robot ok
2021/01/26 20:12:43 [I] install.go 219: Cacche 'matrix' app perms ok
2021/01/26 20:12:43 [I] install.go 224: Cacche 'matrix' ui perms ok
2021/01/26 20:12:43 [I] wcsdr.go 51: Cassandra servers: 10.10.27.20. Keyspace: matrix
2021/01/26 20:12:43 [I] cache.go 349: Refresh cache {all,trigger,field,class,index,rels,bulk,tsdb,bitlog,fsindex}...
2021/01/26 20:12:43 [I] cache.go 370: Refresh cache: DateFields, AllFields, LoptionFields, Fields.
2021/01/26 20:12:43 [I] cache.go 380: Refresh cache: tsdb.
2021/01/26 20:12:43 [I] cache.go 390: Refresh cache: bitlog.
2021/01/26 20:12:46 [I] cache.go 400: Refresh cache: Classes, ClassFields, ClassTTL.
2021/01/26 20:12:46 [I] cache.go 411: Refresh cache: enum.
2021/01/26 20:12:46 [I] cache.go 421: Refresh cache: CacheIndex.
2021/01/26 20:12:46 [I] cache.go 441: Refresh cache: relations.
2021/01/26 20:12:46 [E] cache.go 453: not find relation_stats, create it and restart.
2021/01/26 20:12:46 [I] cache.go 469: Refresh cache: FieldCap.
2021/01/26 20:12:46 [I] cache.go 492: ------Finish Cache------
2021/01/26 20:12:46 [I] util.go 203: Start schema change receiver.
2021/01/26 20:12:46 [I] web.go 635: Listen: http://10.10.27.20:8080
2021/01/26 20:12:46 [I] web.go 636: Login mode: local
2021/01/26 20:12:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:12:48 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 20:12:48 [I] fs.go 56: Write data: // perbasisinfo 人员
var pId = decodeURIComponent(INPUT);
//var pId = 'perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        
        if(RegExp(/perbasisinfo/).test(pId)){
            // 人 - 电话号码
            // 人 - 手机 - 手机号码
            var matchStr = "match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
            
            log.debug(11,matchStr)
            var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
            // 只返回手机号码
            rtn =   _.compact(_.map(tmp,function(v){
                        if(v.class === '/matrix/entity/phonenumber'){
                            return v.id;
                        }
                    }));
        } else if( RegExp(/phonenumber/).test(pId) ){
            rtn = [pId];
        }
        
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+" )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(_.findWhere(tmp.data[0].graph.Edges, {source:n.id}) || _.findWhere(tmp.data[0].graph.Edges, {target:n.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 20:12:48 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 20:12:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:12:49 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 20:13:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:13:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:13:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:13:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:13:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:13:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:13:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:13:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:13:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:13:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:13:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:13:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:13:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:13:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:13:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:13:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:13:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:13:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:13:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:13:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:13:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:13:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:13:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:13:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:13:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:13:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:13:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:13:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:13:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:13:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:13:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:13:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:14:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:14:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:15:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:15:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:15:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:15:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:15:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:15:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:15:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:15:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:15:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:15:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:15:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:16:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:16:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:16:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:16:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:16:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:16:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:16:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:16:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:16:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:16:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:16:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:16:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:16:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:16:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:16:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:16:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:16:41 [E] query.go 83: mql: update  /matrix/entity/phonenumber set belong=null where id='phonenumber:13815519651', err: runtime error: invalid memory address or nil pointer dereference
2021/01/26 20:16:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:16:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:16:44 [E] query.go 83: mql: update  /matrix/entity/phonenumber set belong=null where id='phonenumber:13815519651', err: runtime error: invalid memory address or nil pointer dereference
2021/01/26 20:16:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:16:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:16:55 [E] query.go 83: mql: update  /matrix/entity/phonenumber set belong=null where id='phonenumber:13815519651', err: runtime error: invalid memory address or nil pointer dereference
2021/01/26 20:16:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:17:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:17:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:17:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:17:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:17:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:17:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:17:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:17:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:17:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:17:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:17:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:17:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:17:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:17:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:17:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:17:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:17:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:17:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:17:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:17:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:17:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:20:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:20:36 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 20:20:36 [I] fs.go 56: Write data: // perbasisinfo 人员
var pId = decodeURIComponent(INPUT);
//var pId = 'perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        
        if(RegExp(/perbasisinfo/).test(pId)){
            // 人 - 电话号码
            // 人 - 手机 - 手机号码
            var matchStr = "match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
            
            log.debug(11,matchStr)
            var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
            // 只返回手机号码
            rtn =   _.compact(_.map(tmp,function(v){
                        if(v.class === '/matrix/entity/phonenumber'){
                            return v.id;
                        }
                    }));
        } else if( RegExp(/phonenumber/).test(pId) ){
            rtn = [pId];
        }
        
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" and forphone in ('"+pId+"') )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+" and tophone in ('"+getToPhoneByCalllog.join("','")+"') )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(_.findWhere(tmp.data[0].graph.Edges, {source:n.id}) || _.findWhere(tmp.data[0].graph.Edges, {target:n.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 20:20:36 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 20:20:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:20:36 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 20:20:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:20:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:20:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:20:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:20:49 [E] wjs.go 149: /bizApi/hdim/test/test_diagnosis_mobile.js:95:9:  map[message:[Parser]:
  After '... :59' limit 100 ': expected [ 	
  ] or Comment or Comma or CypherNodeQueryConds or Rparen: {match ('phonenumber:18695220567','phonenumber:15851047319','phonenumber:15005107680','phonenumber:13270094836') <- [:bycall*1] - (:/matrix/action/calllog where  starttimestr>='2020-03-01 00:00:00' and starttimestr<='2020-03-30 23:59:59' limit 100 and forphone in ('perbasisinfo:320911197112273412') )}
"[Parser]" backtrace:
git.wecise.com/wecise/platform/odb.(*Gutil).Parse:query.go:205
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:240
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/odb.(*Gutil).jsFuncMQL:js_odb.go:155
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:201
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeVariableExpression:cmpl_evaluate_expression.go:454
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:102
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeForStatement:cmpl_evaluate_statement.go:263
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:68
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeIfStatement:cmpl_evaluate_statement.go:292
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:71
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement.func1:cmpl_evaluate_statement.go:344
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).tryCatchEvaluate:runtime.go:142
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement:cmpl_evaluate_statement.go:343
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:98
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeAssignExpression:cmpl_evaluate_expression.go:124
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:31
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeProgram:cmpl_evaluate.go:17
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_runOrEval.func1:runtime.go:767
git.wecise.com/wecise/platform/lib/robertkrimen/otto.catchPanic:error.go:252
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_runOrEval:runtime.go:766
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_run:runtime.go:779
git.wecise.com/wecise/platform/lib/robertkrimen/otto.Otto.Run:otto.go:295
git.wecise.com/wecise/platform/web/routers/script.ExecJS:script.go:132
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375 name:GoError:/bizApi/hdim/test/test_diagnosis_mobile.js:81:23]
2021/01/26 20:20:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:21:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:23:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:23:11 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 20:23:11 [I] fs.go 56: Write data: // perbasisinfo 人员
var pId = decodeURIComponent(INPUT);
//var pId = 'perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        
        if(RegExp(/perbasisinfo/).test(pId)){
            // 人 - 电话号码
            // 人 - 手机 - 手机号码
            var matchStr = "match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
            
            log.debug(11,matchStr)
            var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
            // 只返回手机号码
            rtn =   _.compact(_.map(tmp,function(v){
                        if(v.class === '/matrix/entity/phonenumber'){
                            return v.id;
                        }
                    }));
        } else if( RegExp(/phonenumber/).test(pId) ){
            rtn = [pId];
        }
        
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" and forphone in ('"+pId+"') )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+" and tophone in ('"+getToPhoneByCalllog.join("','")+"') )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(_.findWhere(tmp.data[0].graph.Edges, {source:n.id}) || _.findWhere(tmp.data[0].graph.Edges, {target:n.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 20:23:11 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 20:23:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:23:12 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 20:23:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:23:27 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 20:23:27 [I] fs.go 56: Write data: // perbasisinfo 人员
var pId = decodeURIComponent(INPUT);
//var pId = 'perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        
        if(RegExp(/perbasisinfo/).test(pId)){
            // 人 - 电话号码
            // 人 - 手机 - 手机号码
            var matchStr = "match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
            
            log.debug(11,matchStr)
            var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
            // 只返回手机号码
            rtn =   _.compact(_.map(tmp,function(v){
                        if(v.class === '/matrix/entity/phonenumber'){
                            return v.id;
                        }
                    }));
        } else if( RegExp(/phonenumber/).test(pId) ){
            rtn = [pId];
        }
        
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" and forphone in ('"+pId+"') )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+" and tophone in ('"+getToPhoneByCalllog.join("','")+"') )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(_.findWhere(tmp.data[0].graph.Edges, {source:n.id}) || _.findWhere(tmp.data[0].graph.Edges, {target:n.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 20:23:27 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 20:23:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:23:28 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 20:23:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:23:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:23:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:23:33 [E] wjs.go 149: /bizApi/hdim/test/test_diagnosis_mobile.js:95:9:  map[message:[Parser]:
  After '... :59' limit 100 ': expected [ 	
  ] or Comment or Comma or CypherNodeQueryConds or Rparen: {match ('phonenumber:18695220567','phonenumber:15851047319','phonenumber:15005107680','phonenumber:13270094836') <- [:bycall*1] - (:/matrix/action/calllog where  starttimestr>='2020-03-01 00:00:00' and starttimestr<='2020-03-30 23:59:59' limit 100 and forphone in ('perbasisinfo:320911197112273412') )}
"[Parser]" backtrace:
git.wecise.com/wecise/platform/odb.(*Gutil).Parse:query.go:205
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:240
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/odb.(*Gutil).jsFuncMQL:js_odb.go:155
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:201
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeVariableExpression:cmpl_evaluate_expression.go:454
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:102
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeForStatement:cmpl_evaluate_statement.go:263
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:68
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeIfStatement:cmpl_evaluate_statement.go:292
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:71
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement.func1:cmpl_evaluate_statement.go:344
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).tryCatchEvaluate:runtime.go:142
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement:cmpl_evaluate_statement.go:343
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:98
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeAssignExpression:cmpl_evaluate_expression.go:124
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:31
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeProgram:cmpl_evaluate.go:17
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_runOrEval.func1:runtime.go:767
git.wecise.com/wecise/platform/lib/robertkrimen/otto.catchPanic:error.go:252
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_runOrEval:runtime.go:766
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_run:runtime.go:779
git.wecise.com/wecise/platform/lib/robertkrimen/otto.Otto.Run:otto.go:295
git.wecise.com/wecise/platform/web/routers/script.ExecJS:script.go:132
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375 name:GoError:/bizApi/hdim/test/test_diagnosis_mobile.js:81:23]
2021/01/26 20:23:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:23:44 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 20:23:44 [I] fs.go 56: Write data: // perbasisinfo 人员
var pId = decodeURIComponent(INPUT);
//var pId = 'perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        
        if(RegExp(/perbasisinfo/).test(pId)){
            // 人 - 电话号码
            // 人 - 手机 - 手机号码
            var matchStr = "match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
            
            log.debug(11,matchStr)
            var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
            // 只返回手机号码
            rtn =   _.compact(_.map(tmp,function(v){
                        if(v.class === '/matrix/entity/phonenumber'){
                            return v.id;
                        }
                    }));
        } else if( RegExp(/phonenumber/).test(pId) ){
            rtn = [pId];
        }
        
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" and forphone in ('"+pId+"') )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(_.findWhere(tmp.data[0].graph.Edges, {source:n.id}) || _.findWhere(tmp.data[0].graph.Edges, {target:n.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 20:23:44 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 20:23:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:23:45 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 20:23:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:23:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:23:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:23:49 [E] wjs.go 149: /bizApi/hdim/test/test_diagnosis_mobile.js:95:9:  map[message:[Parser]:
  After '... :59' limit 100 ': expected [ 	
  ] or Comment or Comma or CypherNodeQueryConds or Rparen: {match ('phonenumber:13270094836','phonenumber:18695220567','phonenumber:15851047319','phonenumber:15005107680') <- [:bycall*1] - (:/matrix/action/calllog where  starttimestr>='2020-03-01 00:00:00' and starttimestr<='2020-03-30 23:59:59' limit 100 and forphone in ('perbasisinfo:320911197112273412') )}
"[Parser]" backtrace:
git.wecise.com/wecise/platform/odb.(*Gutil).Parse:query.go:205
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:240
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/odb.(*Gutil).jsFuncMQL:js_odb.go:155
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:201
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeVariableExpression:cmpl_evaluate_expression.go:454
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:102
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeForStatement:cmpl_evaluate_statement.go:263
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:68
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeIfStatement:cmpl_evaluate_statement.go:292
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:71
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement.func1:cmpl_evaluate_statement.go:344
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).tryCatchEvaluate:runtime.go:142
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement:cmpl_evaluate_statement.go:343
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:98
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeAssignExpression:cmpl_evaluate_expression.go:124
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:31
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeProgram:cmpl_evaluate.go:17
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_runOrEval.func1:runtime.go:767
git.wecise.com/wecise/platform/lib/robertkrimen/otto.catchPanic:error.go:252
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_runOrEval:runtime.go:766
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_run:runtime.go:779
git.wecise.com/wecise/platform/lib/robertkrimen/otto.Otto.Run:otto.go:295
git.wecise.com/wecise/platform/web/routers/script.ExecJS:script.go:132
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375 name:GoError:/bizApi/hdim/test/test_diagnosis_mobile.js:81:23]
2021/01/26 20:23:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:23:59 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 20:23:59 [I] fs.go 56: Write data: // perbasisinfo 人员
var pId = decodeURIComponent(INPUT);
//var pId = 'perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        
        if(RegExp(/perbasisinfo/).test(pId)){
            // 人 - 电话号码
            // 人 - 手机 - 手机号码
            var matchStr = "match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
            
            log.debug(11,matchStr)
            var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
            // 只返回手机号码
            rtn =   _.compact(_.map(tmp,function(v){
                        if(v.class === '/matrix/entity/phonenumber'){
                            return v.id;
                        }
                    }));
        } else if( RegExp(/phonenumber/).test(pId) ){
            rtn = [pId];
        }
        
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(_.findWhere(tmp.data[0].graph.Edges, {source:n.id}) || _.findWhere(tmp.data[0].graph.Edges, {target:n.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 20:23:59 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 20:23:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:23:59 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 20:24:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:24:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:24:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:24:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:24:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:24:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:24:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:25:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:25:23 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 20:25:23 [I] fs.go 56: Write data: // perbasisinfo 人员
var pId = decodeURIComponent(INPUT);
//var pId = 'perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        
        if(RegExp(/perbasisinfo/).test(pId)){
            // 人 - 电话号码
            // 人 - 手机 - 手机号码
            var matchStr = "match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
            
            log.debug(11,matchStr)
            var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
            // 只返回手机号码
            rtn =   _.compact(_.map(tmp,function(v){
                        if(v.class === '/matrix/entity/phonenumber'){
                            return v.id;
                        }
                    }));
        } else if( RegExp(/phonenumber/).test(pId) ){
            rtn = [pId];
        }
        
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+" and forphone in ('"+pId+"') )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(_.findWhere(tmp.data[0].graph.Edges, {source:n.id}) || _.findWhere(tmp.data[0].graph.Edges, {target:n.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 20:25:23 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 20:25:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:25:24 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 20:25:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:25:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:25:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:25:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:25:33 [E] wjs.go 149: /bizApi/hdim/test/test_diagnosis_mobile.js:95:9:  map[message:[Parser]:
  After '... :59' limit 100 ': expected [ 	
  ] or Comment or Comma or CypherNodeQueryConds or Rparen: {match ('phonenumber:15005107680','phonenumber:13270094836','phonenumber:18695220567','phonenumber:15851047319') <- [:bycall*1] - (:/matrix/action/calllog where  starttimestr>='2020-03-01 00:00:00' and starttimestr<='2020-03-30 23:59:59' limit 100 and forphone in ('perbasisinfo:320911197112273412') )}
"[Parser]" backtrace:
git.wecise.com/wecise/platform/odb.(*Gutil).Parse:query.go:205
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:240
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/odb.(*Gutil).jsFuncMQL:js_odb.go:155
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:201
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeVariableExpression:cmpl_evaluate_expression.go:454
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:102
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeForStatement:cmpl_evaluate_statement.go:263
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:68
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeIfStatement:cmpl_evaluate_statement.go:292
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:71
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement.func1:cmpl_evaluate_statement.go:344
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).tryCatchEvaluate:runtime.go:142
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement:cmpl_evaluate_statement.go:343
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:98
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeAssignExpression:cmpl_evaluate_expression.go:124
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:31
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeProgram:cmpl_evaluate.go:17
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_runOrEval.func1:runtime.go:767
git.wecise.com/wecise/platform/lib/robertkrimen/otto.catchPanic:error.go:252
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_runOrEval:runtime.go:766
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_run:runtime.go:779
git.wecise.com/wecise/platform/lib/robertkrimen/otto.Otto.Run:otto.go:295
git.wecise.com/wecise/platform/web/routers/script.ExecJS:script.go:132
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375 name:GoError:/bizApi/hdim/test/test_diagnosis_mobile.js:81:23]
2021/01/26 20:25:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:26:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:27:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:27:32 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 20:27:32 [I] fs.go 56: Write data: // perbasisinfo 人员
var pId = decodeURIComponent(INPUT);
//var pId = 'perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        
        if(RegExp(/perbasisinfo/).test(pId)){
            // 人 - 电话号码
            // 人 - 手机 - 手机号码
            var matchStr = "match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
            
            log.debug(11,matchStr)
            var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
            // 只返回手机号码
            rtn =   _.compact(_.map(tmp,function(v){
                        if(v.class === '/matrix/entity/phonenumber'){
                            return v.id;
                        }
                    }));
        } else if( RegExp(/phonenumber/).test(pId) ){
            rtn = [pId];
        }
        
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(_.findWhere(tmp.data[0].graph.Edges, {source:n.id}) || _.findWhere(tmp.data[0].graph.Edges, {target:n.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 20:27:32 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 20:27:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:27:33 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 20:30:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:30:08 [E] modb.go 90: [Parser]: At start: expected Statement: {(:/matrix/entity/phonenumber) <- [*] - (:/matrix/action/calllog where starttimestr>='2020-03-01' and starttimestr<='2020-03-30')}
"[Parser]" backtrace:
git.wecise.com/wecise/platform/odb.(*Gutil).Parse:query.go:205
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:240
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/web/routers/modb.Mql:modb.go:87
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375
2021/01/26 20:30:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:30:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:30:21 [E] modb.go 90: [Parser]: At start: expected Statement: {(:/matrix/entity/phonenumber) <- [*] - (:/matrix/action/calllog where starttimestr>='2020-03-01' and starttimestr<='2020-03-30')}
"[Parser]" backtrace:
git.wecise.com/wecise/platform/odb.(*Gutil).Parse:query.go:205
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:240
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/web/routers/modb.Mql:modb.go:87
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375
2021/01/26 20:30:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:30:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:30:33 [E] modb.go 90: [Parser]: At start: expected Statement: {(:phonenumber) <- [*] - (:/matrix/action/calllog where starttimestr>='2020-03-01' and starttimestr<='2020-03-30')}
"[Parser]" backtrace:
git.wecise.com/wecise/platform/odb.(*Gutil).Parse:query.go:205
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:240
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/web/routers/modb.Mql:modb.go:87
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375
2021/01/26 20:30:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:30:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:30:41 [E] modb.go 90: [Parser]: At start: expected Statement: {(:phonenumber) <- [*1] - (:/matrix/action/calllog where starttimestr>='2020-03-01' and starttimestr<='2020-03-30')}
"[Parser]" backtrace:
git.wecise.com/wecise/platform/odb.(*Gutil).Parse:query.go:205
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:240
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/web/routers/modb.Mql:modb.go:87
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375
2021/01/26 20:30:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:31:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:31:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:31:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:31:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:31:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:31:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:31:29 [E] modb.go 90: [UnKnown]: query Timed out!
"[UnKnown]" backtrace:
git.wecise.com/wecise/platform/odb.(*CTernary).RelationRangeLoop:cypher_ternary.go:541
git.wecise.com/wecise/platform/odb.(*CTernary).SubjectEvaluateAndSpread:cypher_ternary.go:368
git.wecise.com/wecise/platform/odb.(*CTernary).EvaluateAndSpread:cypher_ternary.go:223
git.wecise.com/wecise/platform/odb.(*CPhase).Evaluate:cypher_query.go:335
git.wecise.com/wecise/platform/odb.(*Gutil).CypherMatchQuery:cypher_query.go:94
git.wecise.com/wecise/platform/odb.(*MqlSemantics).Cypher:cypher.go:1318
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:275
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/web/routers/modb.Mql:modb.go:87
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375
2021/01/26 20:31:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:32:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:32:30 [E] modb.go 90: [UnKnown]: query Timed out!
"[UnKnown]" backtrace:
git.wecise.com/wecise/platform/odb.(*CTernary).RelationRangeLoop:cypher_ternary.go:541
git.wecise.com/wecise/platform/odb.(*CTernary).SubjectEvaluateAndSpread:cypher_ternary.go:368
git.wecise.com/wecise/platform/odb.(*CTernary).EvaluateAndSpread:cypher_ternary.go:223
git.wecise.com/wecise/platform/odb.(*CPhase).Evaluate:cypher_query.go:335
git.wecise.com/wecise/platform/odb.(*Gutil).CypherMatchQuery:cypher_query.go:94
git.wecise.com/wecise/platform/odb.(*MqlSemantics).Cypher:cypher.go:1318
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:275
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/web/routers/modb.Mql:modb.go:87
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375
2021/01/26 20:32:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:32:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:33:04 [E] modb.go 90: [UnKnown]: query Timed out!
"[UnKnown]" backtrace:
git.wecise.com/wecise/platform/odb.(*CTernary).RelationRangeLoop:cypher_ternary.go:541
git.wecise.com/wecise/platform/odb.(*CTernary).SubjectEvaluateAndSpread:cypher_ternary.go:368
git.wecise.com/wecise/platform/odb.(*CTernary).EvaluateAndSpread:cypher_ternary.go:223
git.wecise.com/wecise/platform/odb.(*CPhase).Evaluate:cypher_query.go:335
git.wecise.com/wecise/platform/odb.(*Gutil).CypherMatchQuery:cypher_query.go:94
git.wecise.com/wecise/platform/odb.(*MqlSemantics).Cypher:cypher.go:1318
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:275
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/web/routers/modb.Mql:modb.go:87
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375
2021/01/26 20:33:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:33:29 [I] wnats.go 86: Nats servers: nats://user:user@10.10.27.20:4222
2021/01/26 20:33:30 [I] wcsdr.go 51: Cassandra servers: 10.10.27.20. Keyspace: matrix
2021/01/26 20:33:30 [I] cache.go 349: Refresh cache {all,trigger,field,class,index,rels,bulk,tsdb,bitlog,fsindex}...
2021/01/26 20:33:30 [I] cache.go 352: Refresh cache: Ftypes.
2021/01/26 20:33:30 [I] cache.go 370: Refresh cache: DateFields, AllFields, LoptionFields, Fields.
2021/01/26 20:33:30 [I] cache.go 380: Refresh cache: tsdb.
2021/01/26 20:33:30 [I] cache.go 390: Refresh cache: bitlog.
2021/01/26 20:33:30 [I] modb.go 38: Modb debug start.
2021/01/26 20:33:33 [I] cache.go 400: Refresh cache: Classes, ClassFields, ClassTTL.
2021/01/26 20:33:33 [I] cache.go 411: Refresh cache: enum.
2021/01/26 20:33:33 [I] cache.go 421: Refresh cache: CacheIndex.
2021/01/26 20:33:33 [I] cache.go 441: Refresh cache: relations.
2021/01/26 20:33:33 [E] cache.go 453: not find relation_stats, create it and restart.
2021/01/26 20:33:33 [I] cache.go 469: Refresh cache: FieldCap.
2021/01/26 20:33:33 [I] cache.go 492: ------Finish Cache------
2021/01/26 20:33:33 [I] util.go 203: Start schema change receiver.
2021/01/26 20:33:33 [I] setting.go 206: Load config from etcd: /matrix/etc/web/app.ini
2021/01/26 20:33:33 [I] setting.go 222: Matrix: Portal Service
2021/01/26 20:33:33 [I] setting.go 329: User login type: local
2021/01/26 20:33:33 [I] setting.go 545: Cache Service Enabled
2021/01/26 20:33:33 [I] setting.go 557: Session Service Enabled
2021/01/26 20:33:33 [I] wcsdr.go 51: Cassandra servers: 10.10.27.20. Keyspace: hdim
2021/01/26 20:33:33 [I] cache.go 349: Refresh cache {all,trigger,field,class,index,rels,bulk,tsdb,bitlog,fsindex}...
2021/01/26 20:33:33 [I] cache.go 370: Refresh cache: DateFields, AllFields, LoptionFields, Fields.
2021/01/26 20:33:33 [I] cache.go 380: Refresh cache: tsdb.
2021/01/26 20:33:33 [I] cache.go 390: Refresh cache: bitlog.
2021/01/26 20:33:36 [I] cache.go 400: Refresh cache: Classes, ClassFields, ClassTTL.
2021/01/26 20:33:36 [I] cache.go 411: Refresh cache: enum.
2021/01/26 20:33:36 [I] cache.go 421: Refresh cache: CacheIndex.
2021/01/26 20:33:36 [I] cache.go 441: Refresh cache: relations.
2021/01/26 20:33:36 [I] cache.go 469: Refresh cache: FieldCap.
2021/01/26 20:33:36 [I] cache.go 492: ------Finish Cache------
2021/01/26 20:33:36 [I] util.go 203: Start schema change receiver.
2021/01/26 20:33:36 [I] install.go 143: Init 'hdim' dfs file /app to local ok. [0.0s]
2021/01/26 20:33:46 [I] install.go 149: Init 'hdim' dfs file /script to cache ok. [9.7s]
2021/01/26 20:33:46 [I] install.go 143: Init 'matrix' dfs file /app to local ok. [0.0s]
2021/01/26 20:33:53 [I] install.go 149: Init 'matrix' dfs file /script to cache ok. [7.1s]
2021/01/26 20:33:53 [I] install.go 37: Run Mode: Development
2021/01/26 20:33:53 [I] install.go 99: git version 2.26.2
2021/01/26 20:33:53 [I] stats.go 111: Stats get lock.
2021/01/26 20:33:53 [I] repo.go 120: Repository path: /opt/matrix/web/repositories/hdim/depot.git
2021/01/26 20:33:53 [I] repo.go 120: Repository path: /opt/matrix/web/repositories/hdim/dfs.git
2021/01/26 20:33:57 [I] install.go 214: Init 'hdim' nlp robot ok
2021/01/26 20:33:57 [I] install.go 219: Cacche 'hdim' app perms ok
2021/01/26 20:33:57 [I] install.go 224: Cacche 'hdim' ui perms ok
2021/01/26 20:33:57 [I] repo.go 120: Repository path: /opt/matrix/web/repositories/matrix/depot.git
2021/01/26 20:33:57 [I] repo.go 120: Repository path: /opt/matrix/web/repositories/matrix/dfs.git
2021/01/26 20:34:00 [I] install.go 214: Init 'matrix' nlp robot ok
2021/01/26 20:34:00 [I] install.go 219: Cacche 'matrix' app perms ok
2021/01/26 20:34:00 [I] install.go 224: Cacche 'matrix' ui perms ok
2021/01/26 20:34:00 [I] wcsdr.go 51: Cassandra servers: 10.10.27.20. Keyspace: matrix
2021/01/26 20:34:00 [I] cache.go 349: Refresh cache {all,trigger,field,class,index,rels,bulk,tsdb,bitlog,fsindex}...
2021/01/26 20:34:00 [I] cache.go 370: Refresh cache: DateFields, AllFields, LoptionFields, Fields.
2021/01/26 20:34:00 [I] cache.go 380: Refresh cache: tsdb.
2021/01/26 20:34:00 [I] cache.go 390: Refresh cache: bitlog.
2021/01/26 20:34:03 [I] cache.go 400: Refresh cache: Classes, ClassFields, ClassTTL.
2021/01/26 20:34:03 [I] cache.go 411: Refresh cache: enum.
2021/01/26 20:34:03 [I] cache.go 421: Refresh cache: CacheIndex.
2021/01/26 20:34:03 [I] cache.go 441: Refresh cache: relations.
2021/01/26 20:34:03 [E] cache.go 453: not find relation_stats, create it and restart.
2021/01/26 20:34:03 [I] cache.go 469: Refresh cache: FieldCap.
2021/01/26 20:34:03 [I] cache.go 492: ------Finish Cache------
2021/01/26 20:34:03 [I] web.go 635: Listen: http://10.10.27.20:8080
2021/01/26 20:34:03 [I] web.go 636: Login mode: local
2021/01/26 20:34:03 [I] util.go 203: Start schema change receiver.
2021/01/26 20:34:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:34:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:34:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:34:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:34:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:34:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:34:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:34:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:34:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:34:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:34:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:34:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:34:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:34:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:34:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:34:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:34:23 [E] modb.go 90: [UnKnown]: query Timed out!
"[UnKnown]" backtrace:
git.wecise.com/wecise/platform/odb.(*CTernary).RelationRangeLoop:cypher_ternary.go:541
git.wecise.com/wecise/platform/odb.(*CTernary).SubjectEvaluateAndSpread:cypher_ternary.go:368
git.wecise.com/wecise/platform/odb.(*CTernary).EvaluateAndSpread:cypher_ternary.go:223
git.wecise.com/wecise/platform/odb.(*CPhase).Evaluate:cypher_query.go:417
git.wecise.com/wecise/platform/odb.(*Gutil).CypherMatchQuery:cypher_query.go:176
git.wecise.com/wecise/platform/odb.(*MqlSemantics).Cypher:cypher.go:1344
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:275
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/web/routers/modb.Mql:modb.go:87
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375
2021/01/26 20:34:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:34:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:34:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:34:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:34:39 [E] context.go 113: UserSignIn -> models.UserSignIn: [Parser]: After '...  username = 'a'': expected Space or LogicOP or SelectCondition or end of text: {select * from /matrix/ldap where username = 'a'd'min'}
"[Parser]" backtrace:
git.wecise.com/wecise/platform/odb.(*Gutil).Parse:query.go:205
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:240
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/web/store.(*Engine).Get:engine.go:53
git.wecise.com/wecise/platform/web/models.UserSignIn:user.go:186
git.wecise.com/wecise/platform/web/routers/user.SignInPost:auth.go:88
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375
2021/01/26 20:34:44 [E] modb.go 90: [UnKnown]: query Timed out!
"[UnKnown]" backtrace:
git.wecise.com/wecise/platform/odb.(*CTernary).RelationRangeLoop:cypher_ternary.go:541
git.wecise.com/wecise/platform/odb.(*CTernary).SubjectEvaluateAndSpread:cypher_ternary.go:368
git.wecise.com/wecise/platform/odb.(*CTernary).EvaluateAndSpread:cypher_ternary.go:223
git.wecise.com/wecise/platform/odb.(*CPhase).Evaluate:cypher_query.go:417
git.wecise.com/wecise/platform/odb.(*Gutil).CypherMatchQuery:cypher_query.go:176
git.wecise.com/wecise/platform/odb.(*MqlSemantics).Cypher:cypher.go:1344
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:275
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/web/routers/modb.Mql:modb.go:87
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375
2021/01/26 20:34:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:34:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:34:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:34:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:34:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:34:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:34:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:34:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:34:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:34:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:34:58 [I] auth.go 133: hdim.admin login success. Redirect to uri: /
2021/01/26 20:34:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:34:59 [I] home.go 65: Go to user home page: /home
2021/01/26 20:35:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:35:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:35:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:35:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:35:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:35:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:35:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:35:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:35:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:35:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:35:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:35:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:35:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:35:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:35:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:35:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:35:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:36:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:36:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:36:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:36:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:36:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:36:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:36:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:36:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:36:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:36:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:36:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:36:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:36:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:36:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:36:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:36:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:36:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:36:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:36:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:37:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:37:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:38:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:38:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:38:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:38:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:38:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:39:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:39:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:39:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:39:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:39:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:39:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:39:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:39:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:39:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:39:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:39:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:39:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:39:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:39:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:39:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:39:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:39:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:40:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:40:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:40:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:40:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:40:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:40:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:40:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:40:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:40:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:41:15 [W] query_util.go 869: can't find class for id[calllog:136261837892020-04-22 09:44:40] , search subdix of class!
2021/01/26 20:41:15 [W] cypher_ternary_util.go 27: [Format]: can't find class , cid is {calllog:136261837892020-04-22 09:44:40} .
"[Format]" backtrace:
git.wecise.com/wecise/platform/odb.(*Gutil).GetClassFromID:query_util.go:874
git.wecise.com/wecise/platform/odb.(*Gutil).NewBean:cypher_tgraph.go:381
git.wecise.com/wecise/platform/odb.(*CTernary).SubjectRows2Quads:cypher_ternary_util.go:25
git.wecise.com/wecise/platform/odb.(*CTernary).GetSubjectQuad.func1:cypher_ternary.go:1331
runtime.goexit:asm_amd64.s:1375
2021/01/26 20:41:15 [W] query_util.go 869: can't find class for id[calllog:138527601762020-04-24 19:11:52] , search subdix of class!
2021/01/26 20:41:15 [W] cypher_ternary_util.go 27: [Format]: can't find class , cid is {calllog:138527601762020-04-24 19:11:52} .
"[Format]" backtrace:
git.wecise.com/wecise/platform/odb.(*Gutil).GetClassFromID:query_util.go:874
git.wecise.com/wecise/platform/odb.(*Gutil).NewBean:cypher_tgraph.go:381
git.wecise.com/wecise/platform/odb.(*CTernary).SubjectRows2Quads:cypher_ternary_util.go:25
git.wecise.com/wecise/platform/odb.(*CTernary).GetSubjectQuad.func1:cypher_ternary.go:1331
runtime.goexit:asm_amd64.s:1375
2021/01/26 20:41:15 [W] query_util.go 869: can't find class for id[calllog:139611045732020-04-27 08:48:22] , search subdix of class!
2021/01/26 20:41:15 [W] cypher_ternary_util.go 27: [Format]: can't find class , cid is {calllog:139611045732020-04-27 08:48:22} .
"[Format]" backtrace:
git.wecise.com/wecise/platform/odb.(*Gutil).GetClassFromID:query_util.go:874
git.wecise.com/wecise/platform/odb.(*Gutil).NewBean:cypher_tgraph.go:381
git.wecise.com/wecise/platform/odb.(*CTernary).SubjectRows2Quads:cypher_ternary_util.go:25
git.wecise.com/wecise/platform/odb.(*CTernary).GetSubjectQuad.func1:cypher_ternary.go:1331
runtime.goexit:asm_amd64.s:1375
2021/01/26 20:41:15 [W] query_util.go 869: can't find class for id[calllog:100862020-02-03 11:17:53] , search subdix of class!
2021/01/26 20:41:15 [W] query_util.go 869: can't find class for id[calllog:136261837892020-04-22 07:41:34] , search subdix of class!
2021/01/26 20:41:15 [W] cypher_ternary_util.go 27: [Format]: can't find class , cid is {calllog:100862020-02-03 11:17:53} .
"[Format]" backtrace:
git.wecise.com/wecise/platform/odb.(*Gutil).GetClassFromID:query_util.go:874
git.wecise.com/wecise/platform/odb.(*Gutil).NewBean:cypher_tgraph.go:381
git.wecise.com/wecise/platform/odb.(*CTernary).SubjectRows2Quads:cypher_ternary_util.go:25
git.wecise.com/wecise/platform/odb.(*CTernary).GetSubjectQuad.func1:cypher_ternary.go:1331
runtime.goexit:asm_amd64.s:1375
2021/01/26 20:41:15 [W] cypher_ternary_util.go 27: [Format]: can't find class , cid is {calllog:136261837892020-04-22 07:41:34} .
"[Format]" backtrace:
git.wecise.com/wecise/platform/odb.(*Gutil).GetClassFromID:query_util.go:874
git.wecise.com/wecise/platform/odb.(*Gutil).NewBean:cypher_tgraph.go:381
git.wecise.com/wecise/platform/odb.(*CTernary).SubjectRows2Quads:cypher_ternary_util.go:25
git.wecise.com/wecise/platform/odb.(*CTernary).GetSubjectQuad.func1:cypher_ternary.go:1331
runtime.goexit:asm_amd64.s:1375
2021/01/26 20:41:15 [W] query_util.go 869: can't find class for id[calllog:100862020-04-13 18:51:25] , search subdix of class!
2021/01/26 20:41:15 [W] cypher_ternary_util.go 27: [Format]: can't find class , cid is {calllog:100862020-04-13 18:51:25} .
"[Format]" backtrace:
git.wecise.com/wecise/platform/odb.(*Gutil).GetClassFromID:query_util.go:874
git.wecise.com/wecise/platform/odb.(*Gutil).NewBean:cypher_tgraph.go:381
git.wecise.com/wecise/platform/odb.(*CTernary).SubjectRows2Quads:cypher_ternary_util.go:25
git.wecise.com/wecise/platform/odb.(*CTernary).GetSubjectQuad.func1:cypher_ternary.go:1331
runtime.goexit:asm_amd64.s:1375
2021/01/26 20:41:15 [W] query_util.go 869: can't find class for id[calllog:136261837892020-04-30 16:50:37] , search subdix of class!
2021/01/26 20:41:15 [W] query_util.go 869: can't find class for id[calllog:138527601762020-04-24 19:07:23] , search subdix of class!
2021/01/26 20:41:15 [W] cypher_ternary_util.go 27: [Format]: can't find class , cid is {calllog:136261837892020-04-30 16:50:37} .
"[Format]" backtrace:
git.wecise.com/wecise/platform/odb.(*Gutil).GetClassFromID:query_util.go:874
git.wecise.com/wecise/platform/odb.(*Gutil).NewBean:cypher_tgraph.go:381
git.wecise.com/wecise/platform/odb.(*CTernary).SubjectRows2Quads:cypher_ternary_util.go:25
git.wecise.com/wecise/platform/odb.(*CTernary).GetSubjectQuad.func1:cypher_ternary.go:1331
runtime.goexit:asm_amd64.s:1375
2021/01/26 20:41:15 [W] cypher_ternary_util.go 27: [Format]: can't find class , cid is {calllog:138527601762020-04-24 19:07:23} .
"[Format]" backtrace:
git.wecise.com/wecise/platform/odb.(*Gutil).GetClassFromID:query_util.go:874
git.wecise.com/wecise/platform/odb.(*Gutil).NewBean:cypher_tgraph.go:381
git.wecise.com/wecise/platform/odb.(*CTernary).SubjectRows2Quads:cypher_ternary_util.go:25
git.wecise.com/wecise/platform/odb.(*CTernary).GetSubjectQuad.func1:cypher_ternary.go:1331
runtime.goexit:asm_amd64.s:1375
2021/01/26 20:41:15 [W] query_util.go 869: can't find class for id[calllog:138178791792020-05-16 19:29:22] , search subdix of class!
2021/01/26 20:41:15 [W] cypher_ternary_util.go 27: [Format]: can't find class , cid is {calllog:138178791792020-05-16 19:29:22} .
"[Format]" backtrace:
git.wecise.com/wecise/platform/odb.(*Gutil).GetClassFromID:query_util.go:874
git.wecise.com/wecise/platform/odb.(*Gutil).NewBean:cypher_tgraph.go:381
git.wecise.com/wecise/platform/odb.(*CTernary).SubjectRows2Quads:cypher_ternary_util.go:25
git.wecise.com/wecise/platform/odb.(*CTernary).GetSubjectQuad.func1:cypher_ternary.go:1331
runtime.goexit:asm_amd64.s:1375
2021/01/26 20:41:15 [W] query_util.go 869: can't find class for id[calllog:1069077912000682020-04-22 20:43:35] , search subdix of class!
2021/01/26 20:41:15 [W] cypher_ternary_util.go 27: [Format]: can't find class , cid is {calllog:1069077912000682020-04-22 20:43:35} .
"[Format]" backtrace:
git.wecise.com/wecise/platform/odb.(*Gutil).GetClassFromID:query_util.go:874
git.wecise.com/wecise/platform/odb.(*Gutil).NewBean:cypher_tgraph.go:381
git.wecise.com/wecise/platform/odb.(*CTernary).SubjectRows2Quads:cypher_ternary_util.go:25
git.wecise.com/wecise/platform/odb.(*CTernary).GetSubjectQuad.func1:cypher_ternary.go:1331
runtime.goexit:asm_amd64.s:1375
2021/01/26 20:41:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:41:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:42:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:42:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:42:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:42:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:42:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:42:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:42:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:42:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:42:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:42:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:42:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:42:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:42:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:42:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:42:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:42:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:43:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:43:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:44:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:44:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:45:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:45:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:46:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:46:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:46:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:46:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:47:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:47:12 [I] fs.go 38: Write file (js) /script/bizApi/hdim/te.js PUT
2021/01/26 20:47:12 [I] fs.go 56: Write data: // perbasisinfo 人员
//var pId = decodeURIComponent(INPUT);
//var pId = 'perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        
        if(RegExp(/perbasisinfo/).test(pId)){
            // 人 - 电话号码
            // 人 - 手机 - 手机号码
            var matchStr = "match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
            
            log.debug(11,matchStr)
            var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
            // 只返回手机号码
            rtn =   _.compact(_.map(tmp,function(v){
                        if(v.class === '/matrix/entity/phonenumber'){
                            return v.id;
                        }
                    }));
        } else if( RegExp(/phonenumber/).test(pId) ){
            rtn = [pId];
        }
        
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
       
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        
         log.info(getToPhoneByCalllog.join("','"));
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(_.findWhere(tmp.data[0].graph.Edges, {source:n.id}) || _.findWhere(tmp.data[0].graph.Edges, {target:n.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 20:47:12 [I] fs.go 77: Write attr: {"remark":"","ctime":1607333412968,"author":"admin"}
2021/01/26 20:47:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:47:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:47:12 [I] fs.go 590: Sync file to local /script/bizApi/hdim/te.js POST
2021/01/26 20:47:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:47:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:47:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:47:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:47:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:47:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:47:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:47:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:47:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:47:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:47:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:47:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:47:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:47:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:47:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:47:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:47:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:47:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:47:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:47:24 [I] fs.go 38: Write file (js) /script/bizApi/hdim/te.js PUT
2021/01/26 20:47:24 [I] fs.go 56: Write data: // perbasisinfo 人员
//var pId = decodeURIComponent(INPUT);
//var pId = 'perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        
        if(RegExp(/perbasisinfo/).test(pId)){
            // 人 - 电话号码
            // 人 - 手机 - 手机号码
            var matchStr = "match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
            
            log.debug(11,matchStr)
            var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
            // 只返回手机号码
            rtn =   _.compact(_.map(tmp,function(v){
                        if(v.class === '/matrix/entity/phonenumber'){
                            return v.id;
                        }
                    }));
        } else if( RegExp(/phonenumber/).test(pId) ){
            rtn = [pId];
        }
        
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
       
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        
         log.info("============="+getToPhoneByCalllog.join("','"));
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(_.findWhere(tmp.data[0].graph.Edges, {source:n.id}) || _.findWhere(tmp.data[0].graph.Edges, {target:n.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 20:47:24 [I] fs.go 77: Write attr: {"remark":"","ctime":1607333412968,"author":"admin"}
2021/01/26 20:47:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:47:24 [I] fs.go 590: Sync file to local /script/bizApi/hdim/te.js POST
2021/01/26 20:47:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:47:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:47:25 [E] wjs.go 149: /bizApi/hdim/te.js:32:9:  map[message:'pId' is not defined]
2021/01/26 20:47:25 [I] wjs.go 145: /bizApi/hdim/te.js:78:10:  =============
2021/01/26 20:47:25 [E] wjs.go 149: /bizApi/hdim/te.js:98:9:  map[message:'pId' is not defined]
2021/01/26 20:47:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:47:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:47:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:47:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:47:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:47:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:47:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:47:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:47:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:47:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:47:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:47:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:47:29 [W] query_util.go 869: can't find class for id[biz:数字国网] , search subdix of class!
2021/01/26 20:47:29 [W] cypher_util.go 758: biz:数字国网 not Exist, ignore & continue .
2021/01/26 20:47:29 [W] query_util.go 869: can't find class for id[biz:开发测试] , search subdix of class!
2021/01/26 20:47:29 [W] cypher_util.go 758: biz:开发测试 not Exist, ignore & continue .
2021/01/26 20:47:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:47:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:47:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:47:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:47:46 [I] fs.go 38: Write file (js) /script/bizApi/hdim/te.js PUT
2021/01/26 20:47:46 [I] fs.go 56: Write data: // perbasisinfo 人员
//var pId = decodeURIComponent(INPUT);
var pId = 'perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        
        if(RegExp(/perbasisinfo/).test(pId)){
            // 人 - 电话号码
            // 人 - 手机 - 手机号码
            var matchStr = "match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
            
            log.debug(11,matchStr)
            var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
            // 只返回手机号码
            rtn =   _.compact(_.map(tmp,function(v){
                        if(v.class === '/matrix/entity/phonenumber'){
                            return v.id;
                        }
                    }));
        } else if( RegExp(/phonenumber/).test(pId) ){
            rtn = [pId];
        }
        
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
       
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        
         log.info("============="+getToPhoneByCalllog.join("','"));
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(_.findWhere(tmp.data[0].graph.Edges, {source:n.id}) || _.findWhere(tmp.data[0].graph.Edges, {target:n.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 20:47:46 [I] fs.go 77: Write attr: {"remark":"","ctime":1607333412968,"author":"admin"}
2021/01/26 20:47:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:47:46 [I] fs.go 590: Sync file to local /script/bizApi/hdim/te.js POST
2021/01/26 20:47:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:47:47 [I] wjs.go 145: /bizApi/hdim/te.js:78:10:  =============phonenumber:13046513888','phonenumber:18351552449','phonenumber:18252218692','phonenumber:18261226185','phonenumber:19905109799','phonenumber:10086061','phonenumber:13626183789','phonenumber:18654321556','phonenumber:13569002907','phonenumber:13390683335','phonenumber:18970580639','phonenumber:13853306666','phonenumber:13218515348','phonenumber:15161990015','phonenumber:17788302399','phonenumber:15861997280','phonenumber:18795488903','phonenumber:13851340799','phonenumber:051595226708','phonenumber:13705103801','phonenumber:13655101254','phonenumber:13901410199','phonenumber:13815519651','phonenumber:13016515971','phonenumber:13375269308','phonenumber:15189300588','phonenumber:13851053458','phonenumber:13485227502','phonenumber:13770036399','phonenumber:13912504706','phonenumber:15950229666
2021/01/26 20:47:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:47:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:47:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:47:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:48:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:48:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:48:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:48:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:48:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:49:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:49:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:49:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:49:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:49:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:49:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:49:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:50:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:50:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:50:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:50:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:50:38 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/getDdByBLDtl.js PUT
2021/01/26 20:50:38 [I] fs.go 56: Write data: //从前台接收值
var input = INPUT;
//var input = "broken:150051076804"; 

//1.获取断档前后的通话记录
var getDdDtl = function(){
    var rtn = null;
    try{
         
        rtn=odb.mql(" select befday,lastday,phone from /matrix/action/broken where id='"+input+"'").data[0];    
        
    } catch(err){
        return [];
    }
    
    return rtn;
}

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
       
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

//将查询到的断档数据返回前台图谱展示
OUTPUT = {
    "type": "breakdtl",
    "data": {
            "break": getDdDtl() 
    }
}
2021/01/26 20:50:38 [I] fs.go 77: Write attr: {"remark":"获取断档前后的通话详情","ctime":1611381536559,"author":"admin"}
2021/01/26 20:50:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:50:39 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/getDdByBLDtl.js POST
2021/01/26 20:50:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:50:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:50:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:51:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:51:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:51:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:51:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:51:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:51:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:51:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:51:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:52:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:52:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:52:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:52:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:52:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:53:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:53:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:54:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:54:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:54:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:54:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:54:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:54:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:54:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:54:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:54:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:55:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:55:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:55:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:55:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:55:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:55:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:55:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:55:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:55:31 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/getDdByBLDtl.js PUT
2021/01/26 20:55:31 [I] fs.go 56: Write data: //从前台接收值
var input = INPUT;
//var input = "broken:150051076804"; 

//1.获取断档前后的通话记录
var getDdDtl = function(){
    var rtn = null;
    try{
         
        rtn=odb.mql(" select befday,lastday,phone from /matrix/action/broken where id='"+input+"'").data[0];   
        
        log.info(' match("phonenumber:'+dtl.phone+'") <- [*1] - (:/matrix/action/calllog where  ((starttimestr >="'+dtl.befday+' 00:00:00" and starttimestr <="'+dtl.befday+' 23:59:59")    or (starttimestr >="'+dtl.lastday+' 00:00:00" and starttimestr <="'+dtl.lastday+' 23:59:59")) and (tophone ='+dtl.phone+' or forphone ='+dtl.phone+' ))');
        rtn = odb.mql(' match("phonenumber:'+dtl.phone+'") <- [*1] - (:/matrix/action/calllog where )'); 
    } catch(err){
        return [];
    }
    
    return rtn;
}

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var sltPhone=getDdDtl();
        var mql = "select tophone from /matrix/action/calllog where  ((starttimestr >='"+dtl.befday+" 00:00:00'  and starttimestr <='"+dtl.befday+" 23:59:59')    or (starttimestr >="'+dtl.lastday+' 00:00:00" and starttimestr <="'+dtl.lastday+' 23:59:59")) and (tophone ='+dtl.phone+' or forphone ='+dtl.phone+' ) ";
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


//将查询到的断档数据返回前台图谱展示
OUTPUT = {
    "type": "breakdtl",
    "data": {
            "break": getDdDtl() 
    }
}
2021/01/26 20:55:31 [I] fs.go 77: Write attr: {"remark":"获取断档前后的通话详情","ctime":1611381536559,"author":"admin"}
2021/01/26 20:55:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:55:32 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/getDdByBLDtl.js POST
2021/01/26 20:55:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:55:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:55:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:55:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:55:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:55:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:55:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:55:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:55:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:55:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:55:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:55:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:56:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:56:18 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/getDdByBLDtl.js PUT
2021/01/26 20:56:18 [I] fs.go 56: Write data: //从前台接收值
var input = INPUT;
//var input = "broken:150051076804"; 

//1.获取断档前后的通话记录
var getDdDtl = function(){
    var rtn = null;
    try{
         
        rtn=odb.mql(" select befday,lastday,phone from /matrix/action/broken where id='"+input+"'").data[0];   
        
        log.info(' match("phonenumber:'+dtl.phone+'") <- [*1] - (:/matrix/action/calllog where  ((starttimestr >="'+dtl.befday+' 00:00:00" and starttimestr <="'+dtl.befday+' 23:59:59")    or (starttimestr >="'+dtl.lastday+' 00:00:00" and starttimestr <="'+dtl.lastday+' 23:59:59")) and (tophone ='+dtl.phone+' or forphone ='+dtl.phone+' ))');
        rtn = odb.mql(' match("phonenumber:'+dtl.phone+'") <- [*1] - (:/matrix/action/calllog where )'); 
    } catch(err){
        return [];
    }
    
    return rtn;
}

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var sltPhone=getDdDtl();
        var mql = "select tophone from /matrix/action/calllog where  ((starttimestr >='"+dtl.befday+" 00:00:00'  and starttimestr <='"+dtl.befday+" 23:59:59')    or (starttimestr >='"+dtl.lastday+" 00:00:00' and starttimestr <='"+dtl.lastday+" 23:59:59')) and (tophone ='"+dtl.phone+"' or forphone ='"+dtl.phone+"' ) ";
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


//将查询到的断档数据返回前台图谱展示
OUTPUT = {
    "type": "breakdtl",
    "data": {
            "break": getDdDtl() 
    }
}
2021/01/26 20:56:18 [I] fs.go 77: Write attr: {"remark":"获取断档前后的通话详情","ctime":1611381536559,"author":"admin"}
2021/01/26 20:56:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:56:19 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/getDdByBLDtl.js POST
2021/01/26 20:56:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:56:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:56:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:57:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:57:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:57:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:57:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:57:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:57:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:57:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:57:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:57:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:57:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:57:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:57:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:57:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:57:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:57:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:57:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:57:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:57:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:57:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:57:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:57:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:57:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:57:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:57:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:57:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:57:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:57:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:57:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:57:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:57:53 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/getDdByBLDtl.js PUT
2021/01/26 20:57:53 [I] fs.go 56: Write data: //从前台接收值
var input = INPUT;
//var input = "broken:150051076804"; 

//1.获取断档前后的通话记录
var getDdDtl = function(){
    var rtn = null;
    try{
        rtn=odb.mql(" select befday,lastday,phone from /matrix/action/broken where id='"+input+"'").data[0];   
    } catch(err){
        return [];
    }
    
    return rtn;
}

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var sltPhone=getDdDtl();
        var mql = "select tophone from /matrix/action/calllog where  ((starttimestr >='"+dtl.befday+" 00:00:00'  and starttimestr <='"+dtl.befday+" 23:59:59')    or (starttimestr >='"+dtl.lastday+" 00:00:00' and starttimestr <='"+dtl.lastday+" 23:59:59')) and (tophone ='"+dtl.phone+"' or forphone ='"+dtl.phone+"' ) ";
        log.info(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(_.findWhere(tmp.data[0].graph.Edges, {source:n.id}) || _.findWhere(tmp.data[0].graph.Edges, {target:n.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}
//将查询到的断档数据返回前台图谱展示
 OUTPUT = diagnosis();
2021/01/26 20:57:53 [I] fs.go 77: Write attr: {"remark":"获取断档前后的通话详情","ctime":1611381536559,"author":"admin"}
2021/01/26 20:57:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:57:54 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/getDdByBLDtl.js POST
2021/01/26 20:57:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:58:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:58:09 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/getDdByBLDtl.js PUT
2021/01/26 20:58:09 [I] fs.go 56: Write data: //从前台接收值
//var input = INPUT;
var input = "broken:150051076804"; 

//1.获取断档前后的通话记录
var getDdDtl = function(){
    var rtn = null;
    try{
        rtn=odb.mql(" select befday,lastday,phone from /matrix/action/broken where id='"+input+"'").data[0];   
    } catch(err){
        return [];
    }
    
    return rtn;
}

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var sltPhone=getDdDtl();
        var mql = "select tophone from /matrix/action/calllog where  ((starttimestr >='"+dtl.befday+" 00:00:00'  and starttimestr <='"+dtl.befday+" 23:59:59')    or (starttimestr >='"+dtl.lastday+" 00:00:00' and starttimestr <='"+dtl.lastday+" 23:59:59')) and (tophone ='"+dtl.phone+"' or forphone ='"+dtl.phone+"' ) ";
        log.info(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(_.findWhere(tmp.data[0].graph.Edges, {source:n.id}) || _.findWhere(tmp.data[0].graph.Edges, {target:n.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}
//将查询到的断档数据返回前台图谱展示
 OUTPUT = diagnosis();
2021/01/26 20:58:09 [I] fs.go 77: Write attr: {"remark":"获取断档前后的通话详情","ctime":1611381536559,"author":"admin"}
2021/01/26 20:58:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:58:10 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/getDdByBLDtl.js POST
2021/01/26 20:58:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:58:11 [E] wjs.go 149: /bizApi/hdim/test/getDdByBLDtl.js:69:9:  map[message:'whereCond' is not defined]
2021/01/26 20:58:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:58:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:58:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:58:44 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/getDdByBLDtl.js PUT
2021/01/26 20:58:44 [I] fs.go 56: Write data: //从前台接收值
//var input = INPUT;
var input = "broken:150051076804"; 

//1.获取断档前后的通话记录
var getDdDtl = function(){
    var rtn = null;
    try{
        rtn=odb.mql(" select befday,lastday,phone from /matrix/action/broken where id='"+input+"'").data[0];   
    } catch(err){
        return [];
    }
    
    return rtn;
}

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var sltPhone=getDdDtl();
        
        log.info(sltPhone)
        var mql = "select tophone from /matrix/action/calllog where  ((starttimestr >='"+dtl.befday+" 00:00:00'  and starttimestr <='"+dtl.befday+" 23:59:59')    or (starttimestr >='"+dtl.lastday+" 00:00:00' and starttimestr <='"+dtl.lastday+" 23:59:59')) and (tophone ='"+dtl.phone+"' or forphone ='"+dtl.phone+"' ) ";
        log.info(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(_.findWhere(tmp.data[0].graph.Edges, {source:n.id}) || _.findWhere(tmp.data[0].graph.Edges, {target:n.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}
//将查询到的断档数据返回前台图谱展示
 OUTPUT = diagnosis();
2021/01/26 20:58:44 [I] fs.go 77: Write attr: {"remark":"获取断档前后的通话详情","ctime":1611381536559,"author":"admin"}
2021/01/26 20:58:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:58:45 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/getDdByBLDtl.js POST
2021/01/26 20:58:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:58:46 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:25:9:  map[befday:2020-05-25 lastday:2020-06-14 phone:15005107680]
2021/01/26 20:58:46 [E] wjs.go 149: /bizApi/hdim/test/getDdByBLDtl.js:71:9:  map[message:'whereCond' is not defined]
2021/01/26 20:58:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:58:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:58:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:58:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:59:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:59:22 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/getDdByBLDtl.js PUT
2021/01/26 20:59:22 [I] fs.go 56: Write data: //从前台接收值
//var input = INPUT;
var input = "broken:150051076804"; 

//1.获取断档前后的通话记录
var getDdDtl = function(){
    var rtn = null;
    try{
        rtn=odb.mql(" select befday,lastday,phone from /matrix/action/broken where id='"+input+"'").data[0];   
    } catch(err){
        return [];
    }
    
    return rtn;
}

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var sltPhone=getDdDtl();
        
        log.info(sltPhone)
        var mql = "select tophone from /matrix/action/calllog where  ((starttimestr >='"+sltPhone.befday+" 00:00:00'  and starttimestr <='"+sltPhone.befday+" 23:59:59')    or (starttimestr >='"+sltPhone.lastday+" 00:00:00' and starttimestr <='"+sltPhone.lastday+" 23:59:59')) and (tophone ='"+sltPhone.phone+"' or forphone ='"+sltPhone.phone+"' ) ";
        log.info(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(_.findWhere(tmp.data[0].graph.Edges, {source:n.id}) || _.findWhere(tmp.data[0].graph.Edges, {target:n.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}
//将查询到的断档数据返回前台图谱展示
 OUTPUT = diagnosis();
2021/01/26 20:59:22 [I] fs.go 77: Write attr: {"remark":"获取断档前后的通话详情","ctime":1611381536559,"author":"admin"}
2021/01/26 20:59:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:59:22 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/getDdByBLDtl.js POST
2021/01/26 20:59:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:59:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:59:30 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:25:9:  map[befday:2020-05-25 lastday:2020-06-14 phone:15005107680]
2021/01/26 20:59:30 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:27:9:  select tophone from /matrix/action/calllog where  ((starttimestr >='2020-05-25 00:00:00'  and starttimestr <='2020-05-25 23:59:59')    or (starttimestr >='2020-06-14 00:00:00' and starttimestr <='2020-06-14 23:59:59')) and (tophone ='15005107680' or forphone ='15005107680' ) 
2021/01/26 20:59:30 [E] wjs.go 149: /bizApi/hdim/test/getDdByBLDtl.js:71:9:  map[message:'whereCond' is not defined]
2021/01/26 20:59:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:59:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:59:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:59:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:59:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:59:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:59:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:59:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:59:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:59:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:59:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:59:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:59:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:59:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:59:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:59:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:59:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 20:59:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:00:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:00:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:00:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:00:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:00:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:00:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:00:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:00:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:00:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:00:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:01:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:01:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:01:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:01:11 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/getDdByBLDtl.js PUT
2021/01/26 21:01:11 [I] fs.go 56: Write data: //从前台接收值
//var input = INPUT;
var input = "broken:150051076804"; 
var whereCond="1=1";
//1.获取断档前后的通话记录
var getDdDtl = function(){
    var rtn = null;
    try{
        rtn=odb.mql(" select befday,lastday,phone from /matrix/action/broken where id='"+input+"'").data[0];   
    } catch(err){
        return [];
    }
    
    return rtn;
}

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var sltPhone=getDdDtl();
        
        log.info(sltPhone)
        var mql = "select tophone from /matrix/action/calllog where  ((starttimestr >='"+sltPhone.befday+" 00:00:00'  and starttimestr <='"+sltPhone.befday+" 23:59:59')    or (starttimestr >='"+sltPhone.lastday+" 00:00:00' and starttimestr <='"+sltPhone.lastday+" 23:59:59')) and (tophone ='"+sltPhone.phone+"' or forphone ='"+sltPhone.phone+"' ) ";
        log.info(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(_.findWhere(tmp.data[0].graph.Edges, {source:n.id}) || _.findWhere(tmp.data[0].graph.Edges, {target:n.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}
//将查询到的断档数据返回前台图谱展示
 OUTPUT = diagnosis();
2021/01/26 21:01:11 [I] fs.go 77: Write attr: {"remark":"获取断档前后的通话详情","ctime":1611381536559,"author":"admin"}
2021/01/26 21:01:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:01:12 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/getDdByBLDtl.js POST
2021/01/26 21:01:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:01:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:01:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:01:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:01:53 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/getDdByBLDtl.js PUT
2021/01/26 21:01:53 [I] fs.go 56: Write data: //从前台接收值
//var input = INPUT;
var input = "broken:150051076804"; 
var whereCond="1=1";
//1.获取断档前后的通话记录
var getDdDtl = function(){
    var rtn = null;
    try{
        rtn=odb.mql(" select befday,lastday,phone from /matrix/action/broken where id='"+input+"'").data[0];   
    } catch(err){
        return [];
    }
    
    return rtn;
}

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var sltPhone=getDdDtl();
        
        log.info(sltPhone)
        var mql = "select tophone from /matrix/action/calllog where  ((starttimestr >='"+sltPhone.befday+" 00:00:00'  and starttimestr <='"+sltPhone.befday+" 23:59:59')    or (starttimestr >='"+sltPhone.lastday+" 00:00:00' and starttimestr <='"+sltPhone.lastday+" 23:59:59')) and (tophone ='"+sltPhone.phone+"' or forphone ='"+sltPhone.phone+"' ) ";
       whereCond="((starttimestr >='"+sltPhone.befday+" 00:00:00'  and starttimestr <='"+sltPhone.befday+" 23:59:59')    or (starttimestr >='"+sltPhone.lastday+" 00:00:00' and starttimestr <='"+sltPhone.lastday+" 23:59:59')) and (tophone ='"+sltPhone.phone+"' or forphone ='"+sltPhone.phone+"' ) ";
        log.info(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(_.findWhere(tmp.data[0].graph.Edges, {source:n.id}) || _.findWhere(tmp.data[0].graph.Edges, {target:n.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}
//将查询到的断档数据返回前台图谱展示
 OUTPUT = diagnosis();
2021/01/26 21:01:53 [I] fs.go 77: Write attr: {"remark":"获取断档前后的通话详情","ctime":1611381536559,"author":"admin"}
2021/01/26 21:01:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:01:54 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/getDdByBLDtl.js POST
2021/01/26 21:01:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:02:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:02:21 [E] modb.go 90: [Parser]: At start: expected Statement: {((starttimestr >='"+sltPhone.befday+" 00:00:00'  and starttimestr <='"+sltPhone.befday+" 23:59:59')    or (starttimestr >='"+sltPhone.lastday+" 00:00:00' and starttimestr <='"+sltPhone.lastday+" 23:59:59')) and (tophone ='"+sltPhone.phone+"' or forphone ='"+sltPhone.phone+"' ) "}
"[Parser]" backtrace:
git.wecise.com/wecise/platform/odb.(*Gutil).Parse:query.go:205
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:240
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/web/routers/modb.Mql:modb.go:87
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375
2021/01/26 21:02:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:02:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:02:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:02:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:02:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:02:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:02:58 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/getDdByBLDtl.js PUT
2021/01/26 21:02:58 [I] fs.go 56: Write data: //从前台接收值
//var input = INPUT;
var input = "broken:15005107680"; 
var whereCond="1=1";
//1.获取断档前后的通话记录
var getDdDtl = function(){
    var rtn = null;
    try{
        rtn=odb.mql(" select befday,lastday,phone from /matrix/action/broken where id='"+input+"'").data[0];   
    } catch(err){
        return [];
    }
    
    return rtn;
}

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var sltPhone=getDdDtl();
        
        log.info(sltPhone)
        var mql = "select tophone from /matrix/action/calllog where  ((starttimestr >='"+sltPhone.befday+" 00:00:00'  and starttimestr <='"+sltPhone.befday+" 23:59:59')    or (starttimestr >='"+sltPhone.lastday+" 00:00:00' and starttimestr <='"+sltPhone.lastday+" 23:59:59')) and (tophone ='"+sltPhone.phone+"' or forphone ='"+sltPhone.phone+"' ) ";
       whereCond="((starttimestr >='"+sltPhone.befday+" 00:00:00'  and starttimestr <='"+sltPhone.befday+" 23:59:59')    or (starttimestr >='"+sltPhone.lastday+" 00:00:00' and starttimestr <='"+sltPhone.lastday+" 23:59:59')) and (tophone ='"+sltPhone.phone+"' or forphone ='"+sltPhone.phone+"' ) ";
        log.info(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(_.findWhere(tmp.data[0].graph.Edges, {source:n.id}) || _.findWhere(tmp.data[0].graph.Edges, {target:n.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}
//将查询到的断档数据返回前台图谱展示
 OUTPUT = diagnosis();
2021/01/26 21:02:58 [I] fs.go 77: Write attr: {"remark":"获取断档前后的通话详情","ctime":1611381536559,"author":"admin"}
2021/01/26 21:02:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:02:58 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/getDdByBLDtl.js POST
2021/01/26 21:02:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:02:59 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:25:9:  <nil>
2021/01/26 21:02:59 [E] wjs.go 149: /bizApi/hdim/test/getDdByBLDtl.js:72:9:  map[message:[Parser]:
  After '... /calllog where ': expected [ 	
  ] or Comment or LuceneConditions: {match ('') <- [:callto*1] - (:/matrix/action/calllog where 1=1  )}
"[Parser]" backtrace:
git.wecise.com/wecise/platform/odb.(*Gutil).Parse:query.go:205
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:240
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/odb.(*Gutil).jsFuncMQL:js_odb.go:155
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:201
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeVariableExpression:cmpl_evaluate_expression.go:454
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:102
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeForStatement:cmpl_evaluate_statement.go:263
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:68
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeIfStatement:cmpl_evaluate_statement.go:292
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:71
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement.func1:cmpl_evaluate_statement.go:344
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).tryCatchEvaluate:runtime.go:142
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement:cmpl_evaluate_statement.go:343
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:98
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeAssignExpression:cmpl_evaluate_expression.go:124
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:31
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeProgram:cmpl_evaluate.go:17
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_runOrEval.func1:runtime.go:767
git.wecise.com/wecise/platform/lib/robertkrimen/otto.catchPanic:error.go:252
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_runOrEval:runtime.go:766
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_run:runtime.go:779
git.wecise.com/wecise/platform/lib/robertkrimen/otto.Otto.Run:otto.go:295
git.wecise.com/wecise/platform/web/routers/script.ExecJS:script.go:132
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375 name:GoError:/bizApi/hdim/test/getDdByBLDtl.js:58:23]
2021/01/26 21:03:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:03:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:03:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:03:26 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/getDdByBLDtl.js PUT
2021/01/26 21:03:26 [I] fs.go 56: Write data: //从前台接收值
//var input = INPUT;
var input = "broken:150051076804"; 
var whereCond="1=1";
//1.获取断档前后的通话记录
var getDdDtl = function(){
    var rtn = null;
    try{
        rtn=odb.mql(" select befday,lastday,phone from /matrix/action/broken where id='"+input+"'").data[0];   
    } catch(err){
        return [];
    }
    
    return rtn;
}

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var sltPhone=getDdDtl();
        
        log.info(sltPhone)
        var mql = "select tophone from /matrix/action/calllog where  ((starttimestr >='"+sltPhone.befday+" 00:00:00'  and starttimestr <='"+sltPhone.befday+" 23:59:59')    or (starttimestr >='"+sltPhone.lastday+" 00:00:00' and starttimestr <='"+sltPhone.lastday+" 23:59:59')) and (tophone ='"+sltPhone.phone+"' or forphone ='"+sltPhone.phone+"' ) ";
       whereCond="((starttimestr >='"+sltPhone.befday+" 00:00:00'  and starttimestr <='"+sltPhone.befday+" 23:59:59')    or (starttimestr >='"+sltPhone.lastday+" 00:00:00' and starttimestr <='"+sltPhone.lastday+" 23:59:59')) and (tophone ='"+sltPhone.phone+"' or forphone ='"+sltPhone.phone+"' ) ";
        log.info(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(_.findWhere(tmp.data[0].graph.Edges, {source:n.id}) || _.findWhere(tmp.data[0].graph.Edges, {target:n.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}
//将查询到的断档数据返回前台图谱展示
 OUTPUT = diagnosis();
2021/01/26 21:03:26 [I] fs.go 77: Write attr: {"remark":"获取断档前后的通话详情","ctime":1611381536559,"author":"admin"}
2021/01/26 21:03:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:03:26 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/getDdByBLDtl.js POST
2021/01/26 21:03:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:03:30 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:25:9:  map[befday:2020-05-25 lastday:2020-06-14 phone:15005107680]
2021/01/26 21:03:30 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:28:9:  select tophone from /matrix/action/calllog where  ((starttimestr >='2020-05-25 00:00:00'  and starttimestr <='2020-05-25 23:59:59')    or (starttimestr >='2020-06-14 00:00:00' and starttimestr <='2020-06-14 23:59:59')) and (tophone ='15005107680' or forphone ='15005107680' ) 
2021/01/26 21:03:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:03:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:03:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:02 [E] cypher_ternary.go 295: err: [UnKnown]: query Timed out!
"[UnKnown]" backtrace:
git.wecise.com/wecise/platform/odb.(*CTernary).RelationRangeLoop:cypher_ternary.go:541
git.wecise.com/wecise/platform/odb.(*CTernary).ObjectEvaluateAndSpread:cypher_ternary.go:294
git.wecise.com/wecise/platform/odb.(*CTernary).EvaluateAndSpread:cypher_ternary.go:204
git.wecise.com/wecise/platform/odb.(*CPhase).Evaluate:cypher_query.go:417
git.wecise.com/wecise/platform/odb.(*Gutil).CypherMatchQuery:cypher_query.go:176
git.wecise.com/wecise/platform/odb.(*MqlSemantics).Cypher:cypher.go:1344
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:275
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/web/routers/modb.Mql:modb.go:87
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375 
2021/01/26 21:04:02 [E] modb.go 90: [UnKnown]: query Timed out!
"[UnKnown]" backtrace:
git.wecise.com/wecise/platform/odb.(*CTernary).RelationRangeLoop:cypher_ternary.go:541
git.wecise.com/wecise/platform/odb.(*CTernary).ObjectEvaluateAndSpread:cypher_ternary.go:294
git.wecise.com/wecise/platform/odb.(*CTernary).EvaluateAndSpread:cypher_ternary.go:204
git.wecise.com/wecise/platform/odb.(*CPhase).Evaluate:cypher_query.go:417
git.wecise.com/wecise/platform/odb.(*Gutil).CypherMatchQuery:cypher_query.go:176
git.wecise.com/wecise/platform/odb.(*MqlSemantics).Cypher:cypher.go:1344
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:275
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/web/routers/modb.Mql:modb.go:87
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375
2021/01/26 21:04:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:46 [W] query_util.go 869: can't find class for id[biz:数字国网] , search subdix of class!
2021/01/26 21:04:46 [W] cypher_util.go 758: biz:数字国网 not Exist, ignore & continue .
2021/01/26 21:04:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:46 [W] query_util.go 869: can't find class for id[biz:开发测试] , search subdix of class!
2021/01/26 21:04:46 [W] cypher_util.go 758: biz:开发测试 not Exist, ignore & continue .
2021/01/26 21:04:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:04:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:05:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:05:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:05:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:05:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:05:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:05:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:05:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:05:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:05:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:05:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:05:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:05:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:05:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:05:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:05:28 [I] wjs.go 145: /bizApi/hdim/test/getDuanD.js:16:2:  计算出时间差，开始时间：2019-11-01===结束时间====2020-08-11====时间差=====284
2021/01/26 21:05:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:05:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:05:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:05:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:05:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:05:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:05:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:05:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:06:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:06:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:07:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:07:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:07:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:07:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:07:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:07:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:07:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:07:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:08:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:08:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:08:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:08:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:08:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:08:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:08:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:09:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:09:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:09:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:09:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:09:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:09:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:09:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:10:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:11:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:11:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:11:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:11:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:11:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:12:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:12:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:12:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:12:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:12:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:12:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:13:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:13:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:13:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:13:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:13:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:13:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:13:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:14:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:14:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:14:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:14:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:15:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:15:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:15:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:15:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:15:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:15:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:15:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:15:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:15:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:15:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:15:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:15:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:15:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:15:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:15:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:15:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:15:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:15:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:15:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:15:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:15:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:15:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:15:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:15:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:15:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:15:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:15:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:15:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:15:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:15:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:15:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:15:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:16:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:16:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:16:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:16:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:16:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:16:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:16:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:16:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:16:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:16:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:16:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:17:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:17:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:17:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:17:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:17:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:17:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:17:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:17:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:17:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:17:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:17:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:17:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:17:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:17:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:17:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:17:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:17:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:17:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:17:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:17:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:17:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:17:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:17:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:17:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:17:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:17:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:17:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:17:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:18:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:18:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:18:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:18:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:18:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:18:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:18:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:18:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:18:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:18:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:18:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:18:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:18:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:18:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:18:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:18:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:18:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:18:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:18:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:18:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:18:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:19:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:19:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:19:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:19:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:19:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:19:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:19:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:19:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:19:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:19:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:19:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:19:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:19:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:19:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:19:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:19:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:19:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:20:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:20:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:20:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:20:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:20:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:20:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:20:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:20:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:20:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:20:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:20:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:20:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:20:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:20:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:20:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:20:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:20:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:20:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:20:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:20:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:20:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:20:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:20:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:20:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:21:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:21:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:21:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:21:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:21:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:21:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:21:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:21:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:21:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:21:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:21:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:21:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:21:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:21:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:21:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:21:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:21:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:21:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:21:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:21:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:21:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:21:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:21:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:21:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:21:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:21:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:21:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:21:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:21:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:21:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:21:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:22:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:22:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:22:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:22:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:22:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:22:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:22:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:22:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:23:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:23:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:23:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:23:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:23:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:23:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:23:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:23:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:23:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:23:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:23:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:23:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:23:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:24:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:24:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:24:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:24:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:24:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:24:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:24:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:24:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:24:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:24:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:24:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:24:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:24:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:24:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:24:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:24:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:24:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:24:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:24:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:24:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:24:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:24:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:24:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:24:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:24:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:25:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:25:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:25:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:25:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:25:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:25:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:25:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:25:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:25:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:25:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:26:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:26:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:26:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:26:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:26:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:26:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:26:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:26:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:26:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:26:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:26:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:26:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:26:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:26:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:26:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:26:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:26:16 [W] query_util.go 869: can't find class for id[biz:数字国网] , search subdix of class!
2021/01/26 21:26:16 [W] cypher_util.go 758: biz:数字国网 not Exist, ignore & continue .
2021/01/26 21:26:16 [W] query_util.go 869: can't find class for id[biz:开发测试] , search subdix of class!
2021/01/26 21:26:16 [W] cypher_util.go 758: biz:开发测试 not Exist, ignore & continue .
2021/01/26 21:26:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:26:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:26:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:26:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:26:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:26:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:26:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:26:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:26:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:26:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:26:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:26:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:26:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:26:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:26:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:27:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:27:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:27:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:27:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:27:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:27:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:27:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:27:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:27:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:27:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:27:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:27:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:27:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:27:34 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 21:27:34 [I] fs.go 56: Write data: // perbasisinfo 人员
var pId = decodeURIComponent(INPUT);
//var pId = 'perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        
        if(RegExp(/perbasisinfo/).test(pId)){
            // 人 - 电话号码
            // 人 - 手机 - 手机号码
            var matchStr = "match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
            
            log.debug(11,matchStr)
            var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
            // 只返回手机号码
            rtn =   _.compact(_.map(tmp,function(v){
                        if(v.class === '/matrix/entity/phonenumber'){
                            return v.id;
                        }
                    }));
        } else if( RegExp(/phonenumber/).test(pId) ){
            rtn = [pId];
        }
        
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(_.findWhere(tmp.data[0].graph.Edges, {source:n.id}) && _.findWhere(tmp.data[0].graph.Edges, {target:n.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 21:27:34 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 21:27:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:27:35 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 21:27:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:27:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:27:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:27:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:27:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:27:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:27:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:27:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:27:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:27:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:28:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:28:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:28:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:28:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:28:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:28:21 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 21:28:21 [I] fs.go 56: Write data: // perbasisinfo 人员
var pId = decodeURIComponent(INPUT);
//var pId = 'perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        
        if(RegExp(/perbasisinfo/).test(pId)){
            // 人 - 电话号码
            // 人 - 手机 - 手机号码
            var matchStr = "match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
            
            log.debug(11,matchStr)
            var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
            // 只返回手机号码
            rtn =   _.compact(_.map(tmp,function(v){
                        if(v.class === '/matrix/entity/phonenumber'){
                            return v.id;
                        }
                    }));
        } else if( RegExp(/phonenumber/).test(pId) ){
            rtn = [pId];
        }
        
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(_.findWhere(tmp.data[0].graph.Edges, {source:n.id}) || _.findWhere(tmp.data[0].graph.Edges, {target:n.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 21:28:21 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 21:28:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:28:22 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 21:28:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:28:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:28:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:28:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:28:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:28:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:28:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:29:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:29:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:29:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:29:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:29:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:29:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:29:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:29:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:29:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:29:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:29:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:29:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:29:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:29:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:29:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:29:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:29:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:29:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:29:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:29:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:29:50 [W] query_util.go 869: can't find class for id[biz:数字国网] , search subdix of class!
2021/01/26 21:29:50 [W] cypher_util.go 758: biz:数字国网 not Exist, ignore & continue .
2021/01/26 21:29:50 [W] query_util.go 869: can't find class for id[biz:开发测试] , search subdix of class!
2021/01/26 21:29:50 [W] cypher_util.go 758: biz:开发测试 not Exist, ignore & continue .
2021/01/26 21:29:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:29:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:29:54 [I] auth.go 217: hdim.admin login success for get session.
2021/01/26 21:29:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:29:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:29:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:29:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:29:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:29:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:29:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:29:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:30:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:30:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:30:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:30:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:30:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:30:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:30:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:30:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:30:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:30:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:30:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:30:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:30:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:30:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:30:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:30:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:30:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:30:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:30:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:30:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:30:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:30:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:30:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:30:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:30:02 [W] query_util.go 869: can't find class for id[biz:数字国网] , search subdix of class!
2021/01/26 21:30:02 [W] cypher_util.go 758: biz:数字国网 not Exist, ignore & continue .
2021/01/26 21:30:02 [W] query_util.go 869: can't find class for id[biz:开发测试] , search subdix of class!
2021/01/26 21:30:02 [W] cypher_util.go 758: biz:开发测试 not Exist, ignore & continue .
2021/01/26 21:30:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:30:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:30:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:30:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:30:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:30:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:30:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:30:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:30:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:30:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:30:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:30:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:30:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:30:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:30:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:30:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:30:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:30:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:30:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:30:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:30:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:30:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:30:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:30:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:30:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:30:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:30:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:31:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:31:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:31:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:31:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:31:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:31:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:31:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:31:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:31:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:31:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:31:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:31:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:31:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:31:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:31:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:32:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:32:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:32:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:32:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:32:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:32:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:32:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:32:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:32:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:32:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:32:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:32:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:32:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:32:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:33:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:33:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:33:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:33:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:33:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:33:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:33:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:33:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:33:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:33:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:33:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:33:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:33:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:34:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:34:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:34:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:34:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:34:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:34:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:34:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:34:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:34:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:34:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:34:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:34:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:34:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:34:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:34:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:34:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:34:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:35:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:35:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:35:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:35:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:35:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:35:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:35:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:35:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:35:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:35:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:35:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:35:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:35:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:35:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:35:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:35:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:35:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:35:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:35:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:35:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:35:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:35:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:35:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:35:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:35:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:35:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:35:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:35:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:35:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:35:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:35:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:35:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:35:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:35:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:35:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:35:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:35:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:35:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:35:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:35:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:35:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:35:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:35:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:36:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:36:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:36:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:36:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:36:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:36:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:36:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:36:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:36:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:36:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:36:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:36:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:36:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:36:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:36:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:36:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:36:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:36:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:36:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:36:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:36:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:36:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:36:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:36:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:36:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:36:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:36:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:36:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:36:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:37:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:37:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:37:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:37:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:37:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:37:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:37:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:37:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:37:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:37:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:37:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:37:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:37:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:37:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:37:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:37:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:37:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:37:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:37:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:37:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:37:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:37:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:38:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:38:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:38:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:38:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:38:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:38:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:38:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:38:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:38:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:38:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:38:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:38:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:38:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:38:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:38:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:38:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:38:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:38:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:38:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:38:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:38:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:38:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:38:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:38:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:38:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:38:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:38:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:38:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:38:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:38:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:38:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:38:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:38:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:38:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:38:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:38:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:38:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:38:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:38:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:38:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:38:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:38:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:38:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:38:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:38:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:38:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:38:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:38:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:38:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:38:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:39:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:39:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:39:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:39:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:39:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:39:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:39:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:39:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:39:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:39:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:39:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:39:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:39:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:39:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:39:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:39:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:39:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:39:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:39:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:39:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:39:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:39:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:14 [W] query_util.go 869: can't find class for id[biz:数字国网] , search subdix of class!
2021/01/26 21:40:14 [W] cypher_util.go 758: biz:数字国网 not Exist, ignore & continue .
2021/01/26 21:40:14 [W] query_util.go 869: can't find class for id[biz:开发测试] , search subdix of class!
2021/01/26 21:40:14 [W] cypher_util.go 758: biz:开发测试 not Exist, ignore & continue .
2021/01/26 21:40:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:40:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:41:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:41:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:41:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:41:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:41:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:41:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:41:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:41:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:41:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:41:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:41:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:41:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:41:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:41:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:41:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:41:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:41:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:41:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:41:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:41:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:41:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:41:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:41:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:41:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:41:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:41:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:41:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:41:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:41:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:41:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:41:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:41:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:41:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:41:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:41:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:41:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:41:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:41:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:41:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:41:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:41:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:41:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:41:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:41:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:41:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:42:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:42:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:42:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:42:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:42:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:42:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:42:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:42:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:42:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:42:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:42:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:42:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:42:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:42:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:42:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:42:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:42:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:42:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:42:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:42:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:42:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:42:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:42:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:42:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:43:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:43:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:43:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:43:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:43:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:43:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:43:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:43:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:43:20 [I] wjs.go 145: /bizApi/hdim/test/getDuanD.js:16:2:  计算出时间差，开始时间：2019-11-01===结束时间====2020-08-11====时间差=====284
2021/01/26 21:43:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:43:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:43:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:43:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:43:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:43:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:43:45 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:25:9:  map[befday:2020-05-25 lastday:2020-06-14 phone:15005107680]
2021/01/26 21:43:45 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:28:9:  select tophone from /matrix/action/calllog where  ((starttimestr >='2020-05-25 00:00:00'  and starttimestr <='2020-05-25 23:59:59')    or (starttimestr >='2020-06-14 00:00:00' and starttimestr <='2020-06-14 23:59:59')) and (tophone ='15005107680' or forphone ='15005107680' ) 
2021/01/26 21:43:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:44:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:44:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:44:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:44:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:44:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:44:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:44:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:44:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:44:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:44:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:44:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:44:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:45:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:45:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:45:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:45:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:45:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:45:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:45:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:45:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:45:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:45:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:45:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:45:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:45:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:45:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:45:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:45:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:45:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:45:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:45:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:45:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:45:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:45:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:46:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:46:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:46:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:46:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:46:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:46:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:46:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:46:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:46:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:46:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:46:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:46:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:46:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:46:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:46:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:46:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:46:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:46:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:46:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:46:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:46:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:46:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:46:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:46:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:46:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:46:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:46:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:46:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:46:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:46:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:46:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:46:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:46:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:46:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:46:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:46:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:46:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:46:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:46:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:46:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:46:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:46:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:47:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:47:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:47:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:47:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:47:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:47:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:47:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:47:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:47:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:47:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:47:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:47:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:47:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:47:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:47:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:48:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:48:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:48:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:49:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:49:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:49:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:49:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:49:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:49:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:49:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:49:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:49:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:49:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:49:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:49:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:49:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:49:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:49:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:49:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:49:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:49:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:49:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:50:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:50:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:50:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:50:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:50:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:50:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:50:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:50:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:50:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:50:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:50:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:50:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:50:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:50:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:50:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:50:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:50:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:50:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:50:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:50:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:50:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:50:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:50:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:50:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:50:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:50:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:50:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:50:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:50:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:50:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:50:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:50:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:50:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:50:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:50:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:51:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:51:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:52:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:52:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:52:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:52:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:52:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:52:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:52:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:52:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:52:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:52:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:52:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:52:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:52:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:52:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:52:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:52:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:52:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:52:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:52:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:52:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:52:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:52:49 [W] query_util.go 869: can't find class for id[biz:数字国网] , search subdix of class!
2021/01/26 21:52:49 [W] cypher_util.go 758: biz:数字国网 not Exist, ignore & continue .
2021/01/26 21:52:49 [W] query_util.go 869: can't find class for id[biz:开发测试] , search subdix of class!
2021/01/26 21:52:49 [W] cypher_util.go 758: biz:开发测试 not Exist, ignore & continue .
2021/01/26 21:52:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:53:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:53:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:53:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:53:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:53:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:53:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:53:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:53:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:53:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:53:21 [I] wjs.go 145: /bizApi/hdim/test/getDuanD.js:16:2:  计算出时间差，开始时间：2019-11-01===结束时间====2020-08-11====时间差=====284
2021/01/26 21:53:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:53:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:53:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:53:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:53:37 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:25:9:  map[befday:2020-05-25 lastday:2020-06-14 phone:15005107680]
2021/01/26 21:53:37 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:28:9:  select tophone from /matrix/action/calllog where  ((starttimestr >='2020-05-25 00:00:00'  and starttimestr <='2020-05-25 23:59:59')    or (starttimestr >='2020-06-14 00:00:00' and starttimestr <='2020-06-14 23:59:59')) and (tophone ='15005107680' or forphone ='15005107680' ) 
2021/01/26 21:53:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:54:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:54:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:54:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:54:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:54:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:54:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:54:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:54:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:54:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:54:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:54:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:55:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:55:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:55:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:56:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:56:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:57:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:57:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:58:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:58:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:58:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:58:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:58:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:59:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:59:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:59:32 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/getDdByBLDtl.js PUT
2021/01/26 21:59:32 [I] fs.go 56: Write data: //从前台接收值
//var input = INPUT;
var input = "broken:150051076804"; 
var whereCond="1=1";
//1.获取断档前后的通话记录
var getDdDtl = function(){
    var rtn = null;
    try{
        rtn=odb.mql(" select befday,lastday,phone from /matrix/action/broken where id='"+input+"'").data[0];   
    } catch(err){
        return [];
    }
    
    return rtn;
}

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var sltPhone=getDdDtl();
        
        log.info(sltPhone)
        var mql = "select tophone from /matrix/action/calllog where  ((starttimestr >='"+sltPhone.befday+" 00:00:00'  and starttimestr <='"+sltPhone.befday+" 23:59:59')    or (starttimestr >='"+sltPhone.lastday+" 00:00:00' and starttimestr <='"+sltPhone.lastday+" 23:59:59')) and (tophone ='"+sltPhone.phone+"' or forphone ='"+sltPhone.phone+"' ) ";
       
       whereCond="((starttimestr >='"+sltPhone.befday+" 00:00:00'  and starttimestr <='"+sltPhone.befday+" 23:59:59')    or (starttimestr >='"+sltPhone.lastday+" 00:00:00' and starttimestr <='"+sltPhone.lastday+" 23:59:59')) and (tophone ='"+sltPhone.phone+"' or forphone ='"+sltPhone.phone+"' ) ";
        log.info(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
         matchStr.push("match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('phonenumber:15005107680') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(_.findWhere(tmp.data[0].graph.Edges, {source:n.id}) || _.findWhere(tmp.data[0].graph.Edges, {target:n.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}
//将查询到的断档数据返回前台图谱展示
 OUTPUT = diagnosis();
2021/01/26 21:59:32 [I] fs.go 77: Write attr: {"remark":"获取断档前后的通话详情","ctime":1611381536559,"author":"admin"}
2021/01/26 21:59:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:59:32 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/getDdByBLDtl.js POST
2021/01/26 21:59:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:59:43 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/getDdByBLDtl.js PUT
2021/01/26 21:59:43 [I] fs.go 56: Write data: //从前台接收值
//var input = INPUT;
var input = "broken:150051076804"; 
var whereCond="1=1";
//1.获取断档前后的通话记录
var getDdDtl = function(){
    var rtn = null;
    try{
        rtn=odb.mql(" select befday,lastday,phone from /matrix/action/broken where id='"+input+"'").data[0];   
    } catch(err){
        return [];
    }
    
    return rtn;
}

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var sltPhone=getDdDtl();
        
        log.info(sltPhone)
        var mql = "select tophone from /matrix/action/calllog where  ((starttimestr >='"+sltPhone.befday+" 00:00:00'  and starttimestr <='"+sltPhone.befday+" 23:59:59')    or (starttimestr >='"+sltPhone.lastday+" 00:00:00' and starttimestr <='"+sltPhone.lastday+" 23:59:59')) and (tophone ='"+sltPhone.phone+"' or forphone ='"+sltPhone.phone+"' ) ";
       
       whereCond="((starttimestr >='"+sltPhone.befday+" 00:00:00'  and starttimestr <='"+sltPhone.befday+" 23:59:59')    or (starttimestr >='"+sltPhone.lastday+" 00:00:00' and starttimestr <='"+sltPhone.lastday+" 23:59:59')) and (tophone ='"+sltPhone.phone+"' or forphone ='"+sltPhone.phone+"' ) ";
        log.info(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        // matchStr.push("match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('phonenumber:15005107680') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(_.findWhere(tmp.data[0].graph.Edges, {source:n.id}) || _.findWhere(tmp.data[0].graph.Edges, {target:n.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}
//将查询到的断档数据返回前台图谱展示
 OUTPUT = diagnosis();
2021/01/26 21:59:43 [I] fs.go 77: Write attr: {"remark":"获取断档前后的通话详情","ctime":1611381536559,"author":"admin"}
2021/01/26 21:59:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:59:43 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/getDdByBLDtl.js POST
2021/01/26 21:59:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:59:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:59:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 21:59:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:00:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:00:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:00:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:00:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:00:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:00:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:00:12 [I] wjs.go 145: /bizApi/hdim/test/getDuanD.js:16:2:  计算出时间差，开始时间：2019-11-01===结束时间====2020-08-11====时间差=====284
2021/01/26 22:00:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:00:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:00:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:00:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:00:26 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:25:9:  map[befday:2020-05-25 lastday:2020-06-14 phone:15005107680]
2021/01/26 22:00:26 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:29:9:  select tophone from /matrix/action/calllog where  ((starttimestr >='2020-05-25 00:00:00'  and starttimestr <='2020-05-25 23:59:59')    or (starttimestr >='2020-06-14 00:00:00' and starttimestr <='2020-06-14 23:59:59')) and (tophone ='15005107680' or forphone ='15005107680' ) 
2021/01/26 22:00:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:00:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:00:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:00:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:00:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:00:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:00:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:00:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:00:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:00:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:00:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:00:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:01:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:01:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:01:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:01:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:01:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:01:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:01:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:01:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:01:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:01:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:02:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:02:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:02:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:02:41 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/getDdByBLDtl.js PUT
2021/01/26 22:02:41 [I] fs.go 56: Write data: //从前台接收值
//var input = INPUT;
var input = "broken:150051076804"; 
var phonenum="";
var whereCond="1=1";
//1.获取断档前后的通话记录
var getDdDtl = function(){
    var rtn = null;
    try{
        rtn=odb.mql(" select befday,lastday,phone from /matrix/action/broken where id='"+input+"'").data[0];   
    } catch(err){
        return [];
    }
    
    return rtn;
}

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var sltPhone=getDdDtl();
        
        log.info(sltPhone)
        var mql = "select tophone from /matrix/action/calllog where  ((starttimestr >='"+sltPhone.befday+" 00:00:00'  and starttimestr <='"+sltPhone.befday+" 23:59:59')    or (starttimestr >='"+sltPhone.lastday+" 00:00:00' and starttimestr <='"+sltPhone.lastday+" 23:59:59')) and (tophone ='"+sltPhone.phone+"' or forphone ='"+sltPhone.phone+"' ) ";
       phonenum=sltPhone.phone;
       whereCond="((starttimestr >='"+sltPhone.befday+" 00:00:00'  and starttimestr <='"+sltPhone.befday+" 23:59:59')    or (starttimestr >='"+sltPhone.lastday+" 00:00:00' and starttimestr <='"+sltPhone.lastday+" 23:59:59')) and (tophone ='"+sltPhone.phone+"' or forphone ='"+sltPhone.phone+"' ) ";
        log.info(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        // matchStr.push("match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('phonenumber:15005107680') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(_.findWhere(tmp.data[0].graph.Edges, {source:n.id}) || _.findWhere(tmp.data[0].graph.Edges, {target:n.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}
//将查询到的断档数据返回前台图谱展示
 OUTPUT = diagnosis();
2021/01/26 22:02:41 [I] fs.go 77: Write attr: {"remark":"获取断档前后的通话详情","ctime":1611381536559,"author":"admin"}
2021/01/26 22:02:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:02:41 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/getDdByBLDtl.js POST
2021/01/26 22:02:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:02:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:02:56 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/getDdByBLDtl.js PUT
2021/01/26 22:02:56 [I] fs.go 56: Write data: //从前台接收值
//var input = INPUT;
var input = "broken:150051076804"; 
var phonenum="";
var whereCond="1=1";
//1.获取断档前后的通话记录
var getDdDtl = function(){
    var rtn = null;
    try{
        rtn=odb.mql(" select befday,lastday,phone from /matrix/action/broken where id='"+input+"'").data[0];   
    } catch(err){
        return [];
    }
    
    return rtn;
}

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var sltPhone=getDdDtl();
        
        log.info(sltPhone)
        var mql = "select tophone from /matrix/action/calllog where  ((starttimestr >='"+sltPhone.befday+" 00:00:00'  and starttimestr <='"+sltPhone.befday+" 23:59:59')    or (starttimestr >='"+sltPhone.lastday+" 00:00:00' and starttimestr <='"+sltPhone.lastday+" 23:59:59')) and (tophone ='"+sltPhone.phone+"' or forphone ='"+sltPhone.phone+"' ) ";
       phonenum=sltPhone.phone;
       whereCond="((starttimestr >='"+sltPhone.befday+" 00:00:00'  and starttimestr <='"+sltPhone.befday+" 23:59:59')    or (starttimestr >='"+sltPhone.lastday+" 00:00:00' and starttimestr <='"+sltPhone.lastday+" 23:59:59')) and (tophone ='"+sltPhone.phone+"' or forphone ='"+sltPhone.phone+"' ) ";
        log.info(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        // matchStr.push("match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('phonenumber:"+phonenum+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(_.findWhere(tmp.data[0].graph.Edges, {source:n.id}) || _.findWhere(tmp.data[0].graph.Edges, {target:n.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}
//将查询到的断档数据返回前台图谱展示
 OUTPUT = diagnosis();
2021/01/26 22:02:56 [I] fs.go 77: Write attr: {"remark":"获取断档前后的通话详情","ctime":1611381536559,"author":"admin"}
2021/01/26 22:02:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:02:57 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/getDdByBLDtl.js POST
2021/01/26 22:03:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:03:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:03:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:03:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:04:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:04:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:04:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:04:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:04:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:04:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:04:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:04:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:05:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:05:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:05:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:05:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:05:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:05:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:05:27 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/getDdByBLDtl.js PUT
2021/01/26 22:05:27 [I] fs.go 56: Write data: //从前台接收值
//var input = INPUT;
var input = "broken:150051076804"; 
var phonenum="";
var whereCond="1=1";
//1.获取断档前后的通话记录
var getDdDtl = function(){
    var rtn = null;
    try{
        rtn=odb.mql(" select befday,lastday,phone from /matrix/action/broken where id='"+input+"'").data[0];   
    } catch(err){
        return [];
    }
    
    return rtn;
}

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var sltPhone=getDdDtl();
        
        log.info(sltPhone)
        var mql = "select tophone from /matrix/action/calllog where  ((starttimestr >='"+sltPhone.befday+" 00:00:00'  and starttimestr <='"+sltPhone.befday+" 23:59:59')    or (starttimestr >='"+sltPhone.lastday+" 00:00:00' and starttimestr <='"+sltPhone.lastday+" 23:59:59')) and (tophone ='"+sltPhone.phone+"' or forphone ='"+sltPhone.phone+"' ) ";
       phonenum=sltPhone.phone;
       whereCond="((starttimestr >='"+sltPhone.befday+" 00:00:00'  and starttimestr <='"+sltPhone.befday+" 23:59:59')    or (starttimestr >='"+sltPhone.lastday+" 00:00:00' and starttimestr <='"+sltPhone.lastday+" 23:59:59')) and (tophone ='"+sltPhone.phone+"' or forphone ='"+sltPhone.phone+"' ) ";
        log.info(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        matchStr.push("match ('phonenumber:"+phonenum+"') <- [:brok*1] - (:broken) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('phonenumber:"+phonenum+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(_.findWhere(tmp.data[0].graph.Edges, {source:n.id}) || _.findWhere(tmp.data[0].graph.Edges, {target:n.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}
//将查询到的断档数据返回前台图谱展示
 OUTPUT = diagnosis();
2021/01/26 22:05:27 [I] fs.go 77: Write attr: {"remark":"获取断档前后的通话详情","ctime":1611381536559,"author":"admin"}
2021/01/26 22:05:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:05:28 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/getDdByBLDtl.js POST
2021/01/26 22:05:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:05:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:05:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:05:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:05:44 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:26:9:  map[befday:2020-05-25 lastday:2020-06-14 phone:15005107680]
2021/01/26 22:05:44 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:30:9:  select tophone from /matrix/action/calllog where  ((starttimestr >='2020-05-25 00:00:00'  and starttimestr <='2020-05-25 23:59:59')    or (starttimestr >='2020-06-14 00:00:00' and starttimestr <='2020-06-14 23:59:59')) and (tophone ='15005107680' or forphone ='15005107680' ) 
2021/01/26 22:05:44 [E] wjs.go 149: /bizApi/hdim/test/getDdByBLDtl.js:76:9:  map[message:'pId' is not defined]
2021/01/26 22:05:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:05:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:05:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:05:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:06:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:06:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:06:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:06:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:06:08 [I] wjs.go 145: /bizApi/hdim/test/getDuanD.js:16:2:  计算出时间差，开始时间：2019-11-01===结束时间====2020-08-11====时间差=====284
2021/01/26 22:06:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:06:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:06:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:06:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:06:25 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:26:9:  map[befday:2020-05-25 lastday:2020-06-14 phone:15005107680]
2021/01/26 22:06:25 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:30:9:  select tophone from /matrix/action/calllog where  ((starttimestr >='2020-05-25 00:00:00'  and starttimestr <='2020-05-25 23:59:59')    or (starttimestr >='2020-06-14 00:00:00' and starttimestr <='2020-06-14 23:59:59')) and (tophone ='15005107680' or forphone ='15005107680' ) 
2021/01/26 22:06:25 [E] wjs.go 149: /bizApi/hdim/test/getDdByBLDtl.js:76:9:  map[message:'pId' is not defined]
2021/01/26 22:06:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:06:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:06:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:06:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:06:32 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:26:9:  map[befday:2020-05-25 lastday:2020-06-14 phone:15005107680]
2021/01/26 22:06:32 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:30:9:  select tophone from /matrix/action/calllog where  ((starttimestr >='2020-05-25 00:00:00'  and starttimestr <='2020-05-25 23:59:59')    or (starttimestr >='2020-06-14 00:00:00' and starttimestr <='2020-06-14 23:59:59')) and (tophone ='15005107680' or forphone ='15005107680' ) 
2021/01/26 22:06:32 [E] wjs.go 149: /bizApi/hdim/test/getDdByBLDtl.js:76:9:  map[message:'pId' is not defined]
2021/01/26 22:06:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:06:56 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/getDdByBLDtl.js PUT
2021/01/26 22:06:56 [I] fs.go 56: Write data: //从前台接收值
var input = INPUT;
//var input = "broken:150051076804"; 
var phonenum="";
var whereCond="1=1";
//1.获取断档前后的通话记录
var getDdDtl = function(){
    var rtn = null;
    try{
        rtn=odb.mql(" select befday,lastday,phone from /matrix/action/broken where id='"+input+"'").data[0];   
    } catch(err){
        return [];
    }
    
    return rtn;
}

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var sltPhone=getDdDtl();
        
        log.info(sltPhone)
        var mql = "select tophone from /matrix/action/calllog where  ((starttimestr >='"+sltPhone.befday+" 00:00:00'  and starttimestr <='"+sltPhone.befday+" 23:59:59')    or (starttimestr >='"+sltPhone.lastday+" 00:00:00' and starttimestr <='"+sltPhone.lastday+" 23:59:59')) and (tophone ='"+sltPhone.phone+"' or forphone ='"+sltPhone.phone+"' ) ";
       phonenum=sltPhone.phone;
       whereCond="((starttimestr >='"+sltPhone.befday+" 00:00:00'  and starttimestr <='"+sltPhone.befday+" 23:59:59')    or (starttimestr >='"+sltPhone.lastday+" 00:00:00' and starttimestr <='"+sltPhone.lastday+" 23:59:59')) and (tophone ='"+sltPhone.phone+"' or forphone ='"+sltPhone.phone+"' ) ";
        log.info(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        matchStr.push("match ('phonenumber:"+phonenum+"') <- [:brok*1] - (:broken) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('phonenumber:"+phonenum+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(_.findWhere(tmp.data[0].graph.Edges, {source:n.id}) || _.findWhere(tmp.data[0].graph.Edges, {target:n.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}
//将查询到的断档数据返回前台图谱展示
 OUTPUT = diagnosis();
2021/01/26 22:06:56 [I] fs.go 77: Write attr: {"remark":"获取断档前后的通话详情","ctime":1611381536559,"author":"admin"}
2021/01/26 22:06:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:06:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:06:56 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/getDdByBLDtl.js POST
2021/01/26 22:06:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:07:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:07:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:07:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:07:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:07:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:07:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:07:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:07:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:07:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:08:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:08:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:08:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:08:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:08:25 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/getDdByBLDtl.js PUT
2021/01/26 22:08:25 [I] fs.go 56: Write data: //从前台接收值
var input = INPUT;
//var input = "broken:150051076804"; 
var phonenum="";
var whereCond="1=1";
//1.获取断档前后的通话记录
var getDdDtl = function(){
    var rtn = null;
    try{
        rtn=odb.mql(" select befday,lastday,phone from /matrix/action/broken where id='"+input+"'").data[0];   
    } catch(err){
        return [];
    }
    
    return rtn;
}

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var sltPhone=getDdDtl();
        
        log.info(sltPhone)
        var mql = "select tophone from /matrix/action/calllog where  ((starttimestr >='"+sltPhone.befday+" 00:00:00'  and starttimestr <='"+sltPhone.befday+" 23:59:59')    or (starttimestr >='"+sltPhone.lastday+" 00:00:00' and starttimestr <='"+sltPhone.lastday+" 23:59:59')) and (tophone ='"+sltPhone.phone+"' or forphone ='"+sltPhone.phone+"' ) ";
       phonenum=sltPhone.phone;
       whereCond="((starttimestr >='"+sltPhone.befday+" 00:00:00'  and starttimestr <='"+sltPhone.befday+" 23:59:59')    or (starttimestr >='"+sltPhone.lastday+" 00:00:00' and starttimestr <='"+sltPhone.lastday+" 23:59:59')) and (tophone ='"+sltPhone.phone+"' or forphone ='"+sltPhone.phone+"' ) ";
        log.info(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        matchStr.push("match ('phonenumber:"+phonenum+"') <- [:brok*1] - (:broken) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('phonenumber:"+phonenum+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(_.findWhere(tmp.data[0].graph.Edges, {source:n.id}) || _.findWhere(tmp.data[0].graph.Edges, {target:n.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}
//将查询到的断档数据返回前台图谱展示
 OUTPUT = diagnosis();
2021/01/26 22:08:25 [I] fs.go 77: Write attr: {"remark":"获取断档前后的通话详情","ctime":1611381536559,"author":"admin"}
2021/01/26 22:08:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:08:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:08:26 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/getDdByBLDtl.js POST
2021/01/26 22:08:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:08:27 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/getDdByBLDtl.js PUT
2021/01/26 22:08:27 [I] fs.go 56: Write data: //从前台接收值
var input = INPUT;
//var input = "broken:150051076804"; 
var phonenum="";
var whereCond="1=1";
//1.获取断档前后的通话记录
var getDdDtl = function(){
    var rtn = null;
    try{
        rtn=odb.mql(" select befday,lastday,phone from /matrix/action/broken where id='"+input+"'").data[0];   
    } catch(err){
        return [];
    }
    
    return rtn;
}

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var sltPhone=getDdDtl();
        
        log.info(sltPhone)
        var mql = "select tophone from /matrix/action/calllog where  ((starttimestr >='"+sltPhone.befday+" 00:00:00'  and starttimestr <='"+sltPhone.befday+" 23:59:59')    or (starttimestr >='"+sltPhone.lastday+" 00:00:00' and starttimestr <='"+sltPhone.lastday+" 23:59:59')) and (tophone ='"+sltPhone.phone+"' or forphone ='"+sltPhone.phone+"' ) ";
       phonenum=sltPhone.phone;
       whereCond="((starttimestr >='"+sltPhone.befday+" 00:00:00'  and starttimestr <='"+sltPhone.befday+" 23:59:59')    or (starttimestr >='"+sltPhone.lastday+" 00:00:00' and starttimestr <='"+sltPhone.lastday+" 23:59:59')) and (tophone ='"+sltPhone.phone+"' or forphone ='"+sltPhone.phone+"' ) ";
        log.info(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        matchStr.push("match ('phonenumber:"+phonenum+"') <- [:brok*1] - (:broken) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('phonenumber:"+phonenum+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(_.findWhere(tmp.data[0].graph.Edges, {source:n.id}) || _.findWhere(tmp.data[0].graph.Edges, {target:n.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}
//将查询到的断档数据返回前台图谱展示
 OUTPUT = diagnosis();
2021/01/26 22:08:27 [I] fs.go 77: Write attr: {"remark":"获取断档前后的通话详情","ctime":1611381536559,"author":"admin"}
2021/01/26 22:08:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:08:28 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/getDdByBLDtl.js POST
2021/01/26 22:08:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:08:28 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/getDdByBLDtl.js PUT
2021/01/26 22:08:28 [I] fs.go 56: Write data: //从前台接收值
var input = INPUT;
//var input = "broken:150051076804"; 
var phonenum="";
var whereCond="1=1";
//1.获取断档前后的通话记录
var getDdDtl = function(){
    var rtn = null;
    try{
        rtn=odb.mql(" select befday,lastday,phone from /matrix/action/broken where id='"+input+"'").data[0];   
    } catch(err){
        return [];
    }
    
    return rtn;
}

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var sltPhone=getDdDtl();
        
        log.info(sltPhone)
        var mql = "select tophone from /matrix/action/calllog where  ((starttimestr >='"+sltPhone.befday+" 00:00:00'  and starttimestr <='"+sltPhone.befday+" 23:59:59')    or (starttimestr >='"+sltPhone.lastday+" 00:00:00' and starttimestr <='"+sltPhone.lastday+" 23:59:59')) and (tophone ='"+sltPhone.phone+"' or forphone ='"+sltPhone.phone+"' ) ";
       phonenum=sltPhone.phone;
       whereCond="((starttimestr >='"+sltPhone.befday+" 00:00:00'  and starttimestr <='"+sltPhone.befday+" 23:59:59')    or (starttimestr >='"+sltPhone.lastday+" 00:00:00' and starttimestr <='"+sltPhone.lastday+" 23:59:59')) and (tophone ='"+sltPhone.phone+"' or forphone ='"+sltPhone.phone+"' ) ";
        log.info(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        matchStr.push("match ('phonenumber:"+phonenum+"') <- [:brok*1] - (:broken) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('phonenumber:"+phonenum+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(_.findWhere(tmp.data[0].graph.Edges, {source:n.id}) || _.findWhere(tmp.data[0].graph.Edges, {target:n.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}
//将查询到的断档数据返回前台图谱展示
 OUTPUT = diagnosis();
2021/01/26 22:08:28 [I] fs.go 77: Write attr: {"remark":"获取断档前后的通话详情","ctime":1611381536559,"author":"admin"}
2021/01/26 22:08:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:08:29 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/getDdByBLDtl.js POST
2021/01/26 22:08:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:08:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:08:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:08:35 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:26:9:  map[befday:2020-05-25 lastday:2020-06-14 phone:15005107680]
2021/01/26 22:08:35 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:30:9:  select tophone from /matrix/action/calllog where  ((starttimestr >='2020-05-25 00:00:00'  and starttimestr <='2020-05-25 23:59:59')    or (starttimestr >='2020-06-14 00:00:00' and starttimestr <='2020-06-14 23:59:59')) and (tophone ='15005107680' or forphone ='15005107680' ) 
2021/01/26 22:08:35 [E] wjs.go 149: /bizApi/hdim/test/getDdByBLDtl.js:76:9:  map[message:'pId' is not defined]
2021/01/26 22:08:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:09:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:09:12 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/getDdByBLDtl.js PUT
2021/01/26 22:09:12 [I] fs.go 56: Write data: //从前台接收值
var input = INPUT;
//var input = "broken:150051076804"; 
var phonenum="";
var whereCond="1=1";
//1.获取断档前后的通话记录
var getDdDtl = function(){
    var rtn = null;
    try{
        rtn=odb.mql(" select befday,lastday,phone from /matrix/action/broken where id='"+input+"'").data[0];   
    } catch(err){
        return [];
    }
    
    return rtn;
}

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var sltPhone=getDdDtl();
        
        log.info(sltPhone)
        var mql = "select tophone from /matrix/action/calllog where  ((starttimestr >='"+sltPhone.befday+" 00:00:00'  and starttimestr <='"+sltPhone.befday+" 23:59:59')    or (starttimestr >='"+sltPhone.lastday+" 00:00:00' and starttimestr <='"+sltPhone.lastday+" 23:59:59')) and (tophone ='"+sltPhone.phone+"' or forphone ='"+sltPhone.phone+"' ) ";
       phonenum=sltPhone.phone;
       whereCond="((starttimestr >='"+sltPhone.befday+" 00:00:00'  and starttimestr <='"+sltPhone.befday+" 23:59:59')    or (starttimestr >='"+sltPhone.lastday+" 00:00:00' and starttimestr <='"+sltPhone.lastday+" 23:59:59')) and (tophone ='"+sltPhone.phone+"' or forphone ='"+sltPhone.phone+"' ) ";
        log.info(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        matchStr.push("match ('phonenumber:"+phonenum+"') <- [:brok*1] - (:broken) union ('" + input + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('phonenumber:"+phonenum+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(_.findWhere(tmp.data[0].graph.Edges, {source:n.id}) || _.findWhere(tmp.data[0].graph.Edges, {target:n.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}
//将查询到的断档数据返回前台图谱展示
 OUTPUT = diagnosis();
2021/01/26 22:09:12 [I] fs.go 77: Write attr: {"remark":"获取断档前后的通话详情","ctime":1611381536559,"author":"admin"}
2021/01/26 22:09:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:09:13 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/getDdByBLDtl.js POST
2021/01/26 22:09:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:09:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:09:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:09:17 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:26:9:  map[befday:2020-05-25 lastday:2020-06-14 phone:15005107680]
2021/01/26 22:09:17 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:30:9:  select tophone from /matrix/action/calllog where  ((starttimestr >='2020-05-25 00:00:00'  and starttimestr <='2020-05-25 23:59:59')    or (starttimestr >='2020-06-14 00:00:00' and starttimestr <='2020-06-14 23:59:59')) and (tophone ='15005107680' or forphone ='15005107680' ) 
2021/01/26 22:09:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:09:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:09:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:09:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:09:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:09:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:09:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:10:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:10:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:11:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:11:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:11:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:11:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:11:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:11:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:11:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:11:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:11:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:12:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:12:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:12:37 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/getDdByBLDtl.js PUT
2021/01/26 22:12:37 [I] fs.go 56: Write data: //从前台接收值
var input = INPUT;
//var input = "broken:150051076804"; 
var phonenum="";
var whereCond="1=1";
//1.获取断档前后的通话记录
var getDdDtl = function(){
    var rtn = null;
    try{
        rtn=odb.mql(" select befday,lastday,phone from /matrix/action/broken where id='"+input+"'").data[0];   
    } catch(err){
        return [];
    }
    
    return rtn;
}

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var sltPhone=getDdDtl();
        
        log.info(sltPhone)
        var mql = "select tophone from /matrix/action/calllog where  ((starttimestr >='"+sltPhone.befday+" 00:00:00'  and starttimestr <='"+sltPhone.befday+" 23:59:59')    or (starttimestr >='"+sltPhone.lastday+" 00:00:00' and starttimestr <='"+sltPhone.lastday+" 23:59:59')) and (tophone ='"+sltPhone.phone+"' or forphone ='"+sltPhone.phone+"' ) ";
       phonenum=sltPhone.phone;
       whereCond="((starttimestr >='"+sltPhone.befday+" 00:00:00'  and starttimestr <='"+sltPhone.befday+" 23:59:59')    or (starttimestr >='"+sltPhone.lastday+" 00:00:00' and starttimestr <='"+sltPhone.lastday+" 23:59:59')) and (tophone ='"+sltPhone.phone+"' or forphone ='"+sltPhone.phone+"' ) ";
        log.info(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        matchStr.push("match ('phonenumber:"+phonenum+"') <- [:brok*1] - (:broken) union ('" + input + "') <- [:brok*1] - (:broken) ");
        matchStr.push("match ('phonenumber:"+phonenum+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(_.findWhere(tmp.data[0].graph.Edges, {source:n.id}) || _.findWhere(tmp.data[0].graph.Edges, {target:n.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}
//将查询到的断档数据返回前台图谱展示
 OUTPUT = diagnosis();
2021/01/26 22:12:37 [I] fs.go 77: Write attr: {"remark":"获取断档前后的通话详情","ctime":1611381536559,"author":"admin"}
2021/01/26 22:12:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:12:38 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/getDdByBLDtl.js POST
2021/01/26 22:12:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:13:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:13:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:13:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:13:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:13:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:14:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:14:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:14:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:14:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:14:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:14:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:14:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:14:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:14:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:14:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:14:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:14:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:14:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:14:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:15:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:15:24 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 22:15:24 [I] fs.go 56: Write data: // perbasisinfo 人员
var pId = decodeURIComponent(INPUT);
//var pId = 'perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        
        if(RegExp(/perbasisinfo/).test(pId)){
            // 人 - 电话号码
            // 人 - 手机 - 手机号码
            var matchStr = "match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
            
            log.debug(11,matchStr)
            var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
            // 只返回手机号码
            rtn =   _.compact(_.map(tmp,function(v){
                        if(v.class === '/matrix/entity/phonenumber'){
                            return v.id;
                        }
                    }));
        } else if( RegExp(/phonenumber/).test(pId) ){
            rtn = [pId];
        }
        
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        matchStr.push("match('"+input+"')- [] -> () ");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(_.findWhere(tmp.data[0].graph.Edges, {source:n.id}) || _.findWhere(tmp.data[0].graph.Edges, {target:n.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 22:15:24 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 22:15:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:15:25 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 22:15:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:15:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:15:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:15:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:15:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:15:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:15:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:15:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:15:54 [I] wjs.go 145: /bizApi/hdim/test/getDuanD.js:16:2:  计算出时间差，开始时间：2019-11-01===结束时间====2020-08-11====时间差=====284
2021/01/26 22:16:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:16:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:16:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:16:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:16:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:16:12 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:26:9:  map[befday:2020-05-25 lastday:2020-06-14 phone:15005107680]
2021/01/26 22:16:12 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:30:9:  select tophone from /matrix/action/calllog where  ((starttimestr >='2020-05-25 00:00:00'  and starttimestr <='2020-05-25 23:59:59')    or (starttimestr >='2020-06-14 00:00:00' and starttimestr <='2020-06-14 23:59:59')) and (tophone ='15005107680' or forphone ='15005107680' ) 
2021/01/26 22:16:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:16:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:16:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:17:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:17:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:17:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:17:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:17:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:17:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:17:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:17:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:17:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:17:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:18:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:18:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:18:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:18:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:18:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:18:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:19:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:19:01 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 22:19:01 [I] fs.go 56: Write data: // perbasisinfo 人员
var pId = decodeURIComponent(INPUT);
//var pId = 'perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        
        if(RegExp(/perbasisinfo/).test(pId)){
            // 人 - 电话号码
            // 人 - 手机 - 手机号码
            var matchStr = "match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
            
            log.debug(11,matchStr)
            var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
            // 只返回手机号码
            rtn =   _.compact(_.map(tmp,function(v){
                        if(v.class === '/matrix/entity/phonenumber'){
                            return v.id;
                        }
                    }));
        } else if( RegExp(/phonenumber/).test(pId) ){
            rtn = [pId];
        }
        
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        
        matchStr.push("match ('" + pId + "') <- [:brok*1] - (:broken) union ('" + pId + "') <- [:brok*1] - (:broken) ");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(_.findWhere(tmp.data[0].graph.Edges, {source:n.id}) || _.findWhere(tmp.data[0].graph.Edges, {target:n.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 22:19:01 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 22:19:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:19:02 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 22:19:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:19:11 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/getDdByBLDtl.js PUT
2021/01/26 22:19:11 [I] fs.go 56: Write data: //从前台接收值
var input = INPUT;
//var input = "broken:150051076804"; 
var phonenum="";
var whereCond="1=1";
//1.获取断档前后的通话记录
var getDdDtl = function(){
    var rtn = null;
    try{
        rtn=odb.mql(" select befday,lastday,phone from /matrix/action/broken where id='"+input+"'").data[0];   
    } catch(err){
        return [];
    }
    
    return rtn;
}

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var sltPhone=getDdDtl();
        
        log.info(sltPhone)
        var mql = "select tophone from /matrix/action/calllog where  ((starttimestr >='"+sltPhone.befday+" 00:00:00'  and starttimestr <='"+sltPhone.befday+" 23:59:59')    or (starttimestr >='"+sltPhone.lastday+" 00:00:00' and starttimestr <='"+sltPhone.lastday+" 23:59:59')) and (tophone ='"+sltPhone.phone+"' or forphone ='"+sltPhone.phone+"' ) ";
       phonenum=sltPhone.phone;
       whereCond="((starttimestr >='"+sltPhone.befday+" 00:00:00'  and starttimestr <='"+sltPhone.befday+" 23:59:59')    or (starttimestr >='"+sltPhone.lastday+" 00:00:00' and starttimestr <='"+sltPhone.lastday+" 23:59:59')) and (tophone ='"+sltPhone.phone+"' or forphone ='"+sltPhone.phone+"' ) ";
        log.info(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        matchStr.push("match('"+input+"')- [] -> () ");
        matchStr.push("match ('phonenumber:"+phonenum+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(_.findWhere(tmp.data[0].graph.Edges, {source:n.id}) || _.findWhere(tmp.data[0].graph.Edges, {target:n.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}
//将查询到的断档数据返回前台图谱展示
 OUTPUT = diagnosis();
2021/01/26 22:19:11 [I] fs.go 77: Write attr: {"remark":"获取断档前后的通话详情","ctime":1611381536559,"author":"admin"}
2021/01/26 22:19:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:19:12 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/getDdByBLDtl.js POST
2021/01/26 22:19:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:19:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:19:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:19:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:19:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:19:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:19:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:19:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:19:34 [I] wjs.go 145: /bizApi/hdim/test/getDuanD.js:16:2:  计算出时间差，开始时间：2019-11-01===结束时间====2020-08-11====时间差=====284
2021/01/26 22:19:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:19:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:19:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:19:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:19:47 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:26:9:  map[befday:2020-05-25 lastday:2020-06-14 phone:15005107680]
2021/01/26 22:19:47 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:30:9:  select tophone from /matrix/action/calllog where  ((starttimestr >='2020-05-25 00:00:00'  and starttimestr <='2020-05-25 23:59:59')    or (starttimestr >='2020-06-14 00:00:00' and starttimestr <='2020-06-14 23:59:59')) and (tophone ='15005107680' or forphone ='15005107680' ) 
2021/01/26 22:19:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:19:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:19:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:19:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:19:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:19:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:19:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:19:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:20:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:20:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:20:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:20:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:20:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:20:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:20:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:20:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:20:42 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 22:20:42 [I] fs.go 56: Write data: // perbasisinfo 人员
var pId = decodeURIComponent(INPUT);
//var pId = 'perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        
        if(RegExp(/perbasisinfo/).test(pId)){
            // 人 - 电话号码
            // 人 - 手机 - 手机号码
            var matchStr = "match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
            
            log.debug(11,matchStr)
            var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
            // 只返回手机号码
            rtn =   _.compact(_.map(tmp,function(v){
                        if(v.class === '/matrix/entity/phonenumber'){
                            return v.id;
                        }
                    }));
        } else if( RegExp(/phonenumber/).test(pId) ){
            rtn = [pId];
        }
        
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        
       matchStr.push("match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(_.findWhere(tmp.data[0].graph.Edges, {source:n.id}) || _.findWhere(tmp.data[0].graph.Edges, {target:n.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 22:20:42 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 22:20:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:20:43 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 22:20:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:21:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:21:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:21:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:21:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:21:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:21:32 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/getDdByBLDtl.js PUT
2021/01/26 22:21:32 [I] fs.go 56: Write data: //从前台接收值
var input = INPUT;
//var input = "broken:150051076804"; 
var phonenum="";
var whereCond="1=1";
//1.获取断档前后的通话记录
var getDdDtl = function(){
    var rtn = null;
    try{
        rtn=odb.mql(" select befday,lastday,phone from /matrix/action/broken where id='"+input+"'").data[0];   
    } catch(err){
        return [];
    }
    
    return rtn;
}

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var sltPhone=getDdDtl();
        
        log.info(sltPhone)
        var mql = "select tophone from /matrix/action/calllog where  ((starttimestr >='"+sltPhone.befday+" 00:00:00'  and starttimestr <='"+sltPhone.befday+" 23:59:59')    or (starttimestr >='"+sltPhone.lastday+" 00:00:00' and starttimestr <='"+sltPhone.lastday+" 23:59:59')) and (tophone ='"+sltPhone.phone+"' or forphone ='"+sltPhone.phone+"' ) ";
       phonenum=sltPhone.phone;
       whereCond="((starttimestr >='"+sltPhone.befday+" 00:00:00'  and starttimestr <='"+sltPhone.befday+" 23:59:59')    or (starttimestr >='"+sltPhone.lastday+" 00:00:00' and starttimestr <='"+sltPhone.lastday+" 23:59:59')) and (tophone ='"+sltPhone.phone+"' or forphone ='"+sltPhone.phone+"' ) ";
        log.info(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        matchStr.push("match('"+input+"')- [] -> () ");
         matchStr.push("match ('" + input + "') <- [:brok*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('phonenumber:"+phonenum+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(_.findWhere(tmp.data[0].graph.Edges, {source:n.id}) || _.findWhere(tmp.data[0].graph.Edges, {target:n.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}
//将查询到的断档数据返回前台图谱展示
 OUTPUT = diagnosis();
2021/01/26 22:21:32 [I] fs.go 77: Write attr: {"remark":"获取断档前后的通话详情","ctime":1611381536559,"author":"admin"}
2021/01/26 22:21:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:21:32 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/getDdByBLDtl.js POST
2021/01/26 22:21:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:22:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:22:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:22:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:22:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:22:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:22:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:22:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:22:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:23:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:23:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:23:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:23:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:23:43 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/getDdByBLDtl.js PUT
2021/01/26 22:23:43 [I] fs.go 56: Write data: //从前台接收值
var input = INPUT;
//var input = "broken:150051076804"; 
var phonenum="";
var whereCond="1=1";
//1.获取断档前后的通话记录
var getDdDtl = function(){
    var rtn = null;
    try{
        rtn=odb.mql(" select befday,lastday,phone from /matrix/action/broken where id='"+input+"'").data[0];   
    } catch(err){
        return [];
    }
    
    return rtn;
}

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var sltPhone=getDdDtl();
        
        log.info(sltPhone)
        var mql = "select tophone from /matrix/action/calllog where  ((starttimestr >='"+sltPhone.befday+" 00:00:00'  and starttimestr <='"+sltPhone.befday+" 23:59:59')    or (starttimestr >='"+sltPhone.lastday+" 00:00:00' and starttimestr <='"+sltPhone.lastday+" 23:59:59')) and (tophone ='"+sltPhone.phone+"' or forphone ='"+sltPhone.phone+"' ) ";
       phonenum=sltPhone.phone;
       whereCond="((starttimestr >='"+sltPhone.befday+" 00:00:00'  and starttimestr <='"+sltPhone.befday+" 23:59:59')    or (starttimestr >='"+sltPhone.lastday+" 00:00:00' and starttimestr <='"+sltPhone.lastday+" 23:59:59')) and (tophone ='"+sltPhone.phone+"' or forphone ='"+sltPhone.phone+"' ) ";
        log.info(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        matchStr.push(" match('"+input+"')- [:brok*1] -> (:phonenumber)union ('"+input+"') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
         matchStr.push("match ('" + input + "') <- [:brok*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('phonenumber:"+phonenum+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(_.findWhere(tmp.data[0].graph.Edges, {source:n.id}) || _.findWhere(tmp.data[0].graph.Edges, {target:n.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}
//将查询到的断档数据返回前台图谱展示
 OUTPUT = diagnosis();
2021/01/26 22:23:43 [I] fs.go 77: Write attr: {"remark":"获取断档前后的通话详情","ctime":1611381536559,"author":"admin"}
2021/01/26 22:23:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:23:43 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/getDdByBLDtl.js POST
2021/01/26 22:23:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:23:48 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/getDdByBLDtl.js PUT
2021/01/26 22:23:48 [I] fs.go 56: Write data: //从前台接收值
var input = INPUT;
//var input = "broken:150051076804"; 
var phonenum="";
var whereCond="1=1";
//1.获取断档前后的通话记录
var getDdDtl = function(){
    var rtn = null;
    try{
        rtn=odb.mql(" select befday,lastday,phone from /matrix/action/broken where id='"+input+"'").data[0];   
    } catch(err){
        return [];
    }
    
    return rtn;
}

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var sltPhone=getDdDtl();
        
        log.info(sltPhone)
        var mql = "select tophone from /matrix/action/calllog where  ((starttimestr >='"+sltPhone.befday+" 00:00:00'  and starttimestr <='"+sltPhone.befday+" 23:59:59')    or (starttimestr >='"+sltPhone.lastday+" 00:00:00' and starttimestr <='"+sltPhone.lastday+" 23:59:59')) and (tophone ='"+sltPhone.phone+"' or forphone ='"+sltPhone.phone+"' ) ";
       phonenum=sltPhone.phone;
       whereCond="((starttimestr >='"+sltPhone.befday+" 00:00:00'  and starttimestr <='"+sltPhone.befday+" 23:59:59')    or (starttimestr >='"+sltPhone.lastday+" 00:00:00' and starttimestr <='"+sltPhone.lastday+" 23:59:59')) and (tophone ='"+sltPhone.phone+"' or forphone ='"+sltPhone.phone+"' ) ";
        log.info(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        matchStr.push(" match('"+input+"')- [:brok*1] -> (:phonenumber)union ('"+input+"') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
       //  matchStr.push("match ('" + input + "') <- [:brok*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('phonenumber:"+phonenum+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(_.findWhere(tmp.data[0].graph.Edges, {source:n.id}) || _.findWhere(tmp.data[0].graph.Edges, {target:n.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}
//将查询到的断档数据返回前台图谱展示
 OUTPUT = diagnosis();
2021/01/26 22:23:48 [I] fs.go 77: Write attr: {"remark":"获取断档前后的通话详情","ctime":1611381536559,"author":"admin"}
2021/01/26 22:23:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:23:48 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/getDdByBLDtl.js POST
2021/01/26 22:23:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:23:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:24:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:24:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:24:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:24:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:24:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:24:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:24:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:24:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:24:19 [I] wjs.go 145: /bizApi/hdim/test/getDuanD.js:16:2:  计算出时间差，开始时间：2019-11-01===结束时间====2020-08-11====时间差=====284
2021/01/26 22:24:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:24:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:24:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:24:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:24:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:24:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:24:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:24:34 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:26:9:  map[befday:2020-05-25 lastday:2020-06-14 phone:15005107680]
2021/01/26 22:24:34 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:30:9:  select tophone from /matrix/action/calllog where  ((starttimestr >='2020-05-25 00:00:00'  and starttimestr <='2020-05-25 23:59:59')    or (starttimestr >='2020-06-14 00:00:00' and starttimestr <='2020-06-14 23:59:59')) and (tophone ='15005107680' or forphone ='15005107680' ) 
2021/01/26 22:24:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:24:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:24:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:24:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:24:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:24:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:24:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:24:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:24:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:24:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:24:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:24:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:24:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:24:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:24:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:24:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:24:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:24:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:25:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:25:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:25:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:25:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:25:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:25:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:25:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:25:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:25:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:25:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:25:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:25:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:25:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:25:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:25:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:25:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:25:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:25:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:25:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:25:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:25:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:25:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:25:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:25:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:25:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:26:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:26:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:26:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:26:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:26:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:26:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:26:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:26:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:26:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:26:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:26:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:26:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:26:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:26:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:26:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:26:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:26:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:26:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:26:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:26:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:26:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:26:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:26:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:26:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:26:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:26:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:26:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:26:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:26:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:26:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:26:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:26:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:26:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:26:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:26:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:26:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:26:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:26:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:26:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:26:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:26:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:26:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:26:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:26:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:26:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:26:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:26:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:26:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:27:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:27:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:27:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:27:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:27:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:27:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:28:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:28:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:29:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:29:03 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/getDdByBLDtl.js PUT
2021/01/26 22:29:03 [I] fs.go 56: Write data: //从前台接收值
var input = INPUT;
//var input = "broken:150051076804"; 
var phonenum="";
var whereCond="1=1";
//1.获取断档前后的通话记录
var getDdDtl = function(){
    var rtn = null;
    try{
        rtn=odb.mql(" select befday,lastday,phone from /matrix/action/broken where id='"+input+"'").data[0];   
    } catch(err){
        return [];
    }
    
    return rtn;
}

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var sltPhone=getDdDtl();
        
        log.info(sltPhone)
        var mql = "select tophone from /matrix/action/calllog where  ((starttimestr >='"+sltPhone.befday+" 00:00:00'  and starttimestr <='"+sltPhone.befday+" 23:59:59')    or (starttimestr >='"+sltPhone.lastday+" 00:00:00' and starttimestr <='"+sltPhone.lastday+" 23:59:59')) and (tophone ='"+sltPhone.phone+"' or forphone ='"+sltPhone.phone+"' ) ";
       phonenum=sltPhone.phone;
       whereCond="((starttimestr >='"+sltPhone.befday+" 00:00:00'  and starttimestr <='"+sltPhone.befday+" 23:59:59')    or (starttimestr >='"+sltPhone.lastday+" 00:00:00' and starttimestr <='"+sltPhone.lastday+" 23:59:59')) and (tophone ='"+sltPhone.phone+"' or forphone ='"+sltPhone.phone+"' ) ";
        log.info(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        matchStr.push(" match('"+input+"')- [:brok*1] -> (:phonenumber) ");
        //matchStr.push("match ('phonenumber:"+phonenum+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(_.findWhere(tmp.data[0].graph.Edges, {source:n.id}) || _.findWhere(tmp.data[0].graph.Edges, {target:n.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}
//将查询到的断档数据返回前台图谱展示
 OUTPUT = diagnosis();
2021/01/26 22:29:03 [I] fs.go 77: Write attr: {"remark":"获取断档前后的通话详情","ctime":1611381536559,"author":"admin"}
2021/01/26 22:29:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:29:04 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/getDdByBLDtl.js POST
2021/01/26 22:29:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:29:07 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/getDdByBLDtl.js PUT
2021/01/26 22:29:07 [I] fs.go 56: Write data: //从前台接收值
var input = INPUT;
//var input = "broken:150051076804"; 
var phonenum="";
var whereCond="1=1";
//1.获取断档前后的通话记录
var getDdDtl = function(){
    var rtn = null;
    try{
        rtn=odb.mql(" select befday,lastday,phone from /matrix/action/broken where id='"+input+"'").data[0];   
    } catch(err){
        return [];
    }
    
    return rtn;
}

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var sltPhone=getDdDtl();
        
        log.info(sltPhone)
        var mql = "select tophone from /matrix/action/calllog where  ((starttimestr >='"+sltPhone.befday+" 00:00:00'  and starttimestr <='"+sltPhone.befday+" 23:59:59')    or (starttimestr >='"+sltPhone.lastday+" 00:00:00' and starttimestr <='"+sltPhone.lastday+" 23:59:59')) and (tophone ='"+sltPhone.phone+"' or forphone ='"+sltPhone.phone+"' ) ";
       phonenum=sltPhone.phone;
       whereCond="((starttimestr >='"+sltPhone.befday+" 00:00:00'  and starttimestr <='"+sltPhone.befday+" 23:59:59')    or (starttimestr >='"+sltPhone.lastday+" 00:00:00' and starttimestr <='"+sltPhone.lastday+" 23:59:59')) and (tophone ='"+sltPhone.phone+"' or forphone ='"+sltPhone.phone+"' ) ";
        log.info(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        matchStr.push(" match('"+input+"')- [:brok*1] -> (:phonenumber) ");
        //matchStr.push("match ('phonenumber:"+phonenum+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(_.findWhere(tmp.data[0].graph.Edges, {source:n.id}) || _.findWhere(tmp.data[0].graph.Edges, {target:n.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}
//将查询到的断档数据返回前台图谱展示
 OUTPUT = diagnosis();
2021/01/26 22:29:07 [I] fs.go 77: Write attr: {"remark":"获取断档前后的通话详情","ctime":1611381536559,"author":"admin"}
2021/01/26 22:29:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:29:08 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/getDdByBLDtl.js POST
2021/01/26 22:29:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:29:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:29:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:29:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:29:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:29:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:29:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:29:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:29:32 [I] wjs.go 145: /bizApi/hdim/test/getDuanD.js:16:2:  计算出时间差，开始时间：2019-11-01===结束时间====2020-08-11====时间差=====284
2021/01/26 22:29:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:29:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:29:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:29:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:29:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:30:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:30:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:30:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:30:03 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:26:9:  map[befday:2020-05-25 lastday:2020-06-14 phone:15005107680]
2021/01/26 22:30:03 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:30:9:  select tophone from /matrix/action/calllog where  ((starttimestr >='2020-05-25 00:00:00'  and starttimestr <='2020-05-25 23:59:59')    or (starttimestr >='2020-06-14 00:00:00' and starttimestr <='2020-06-14 23:59:59')) and (tophone ='15005107680' or forphone ='15005107680' ) 
2021/01/26 22:30:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:30:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:30:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:30:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:30:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:30:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:30:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:30:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:30:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:30:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:30:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:30:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:30:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:30:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:30:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:30:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:30:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:30:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:30:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:30:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:30:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:30:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:30:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:31:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:31:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:31:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:31:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:32:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:32:07 [W] cypher_util.go 758: "+input+" not Exist, ignore & continue .
2021/01/26 22:32:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:32:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:32:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:32:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:32:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:32:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:32:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:32:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:32:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:33:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:33:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:33:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:33:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:33:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:34:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:34:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:34:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:34:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:35:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:35:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:35:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:35:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:35:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:35:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:36:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:36:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:36:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:36:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:36:40 [I] auth.go 217: hdim.admin login success for get session.
2021/01/26 22:36:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:36:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:36:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:36:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:36:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:36:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:36:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:36:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:36:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:36:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:36:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:36:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:36:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:36:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:36:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:36:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:36:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:36:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:36:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:36:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:36:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:36:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:36:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:36:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:36:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:36:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:36:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:36:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:36:44 [W] query_util.go 869: can't find class for id[biz:数字国网] , search subdix of class!
2021/01/26 22:36:44 [W] cypher_util.go 758: biz:数字国网 not Exist, ignore & continue .
2021/01/26 22:36:44 [W] query_util.go 869: can't find class for id[biz:开发测试] , search subdix of class!
2021/01/26 22:36:44 [W] cypher_util.go 758: biz:开发测试 not Exist, ignore & continue .
2021/01/26 22:36:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:36:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:36:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:36:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:36:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:36:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:36:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:36:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:36:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:36:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:36:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:36:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:37:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:37:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:37:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:37:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:37:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:37:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:37:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:37:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:37:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:37:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:37:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:37:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:37:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:37:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:37:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:37:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:37:17 [I] wjs.go 145: /bizApi/hdim/test/getDuanD.js:16:2:  计算出时间差，开始时间：2019-11-01===结束时间====2020-08-11====时间差=====284
2021/01/26 22:37:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:37:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:37:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:37:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:37:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:37:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:37:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:37:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:37:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:37:32 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:26:9:  map[befday:2020-05-25 lastday:2020-06-14 phone:15005107680]
2021/01/26 22:37:32 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:30:9:  select tophone from /matrix/action/calllog where  ((starttimestr >='2020-05-25 00:00:00'  and starttimestr <='2020-05-25 23:59:59')    or (starttimestr >='2020-06-14 00:00:00' and starttimestr <='2020-06-14 23:59:59')) and (tophone ='15005107680' or forphone ='15005107680' ) 
2021/01/26 22:37:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:37:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:37:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:37:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:38:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:38:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:38:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:38:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:38:55 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:26:9:  <nil>
2021/01/26 22:38:55 [E] wjs.go 149: /bizApi/hdim/test/getDdByBLDtl.js:76:9:  map[message:Cannot access member 'graph' of undefined]
2021/01/26 22:38:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:39:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:39:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:39:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:39:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:39:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:39:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:40:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:40:05 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/getDdByBLDtl.js PUT
2021/01/26 22:40:05 [I] fs.go 56: Write data: //从前台接收值
var input = INPUT;
//var input = "broken:150051076804"; 
var phonenum="";
var whereCond="1=1";
//1.获取断档前后的通话记录
var getDdDtl = function(){
    var rtn = null;
    try{
        rtn=odb.mql(" select befday,lastday,phone from /matrix/action/broken where id='"+input+"'").data[0];   
    } catch(err){
        return [];
    }
    
    return rtn;
}

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var sltPhone=getDdDtl();
        
        log.info(sltPhone)
        var mql = "select tophone from /matrix/action/calllog where  ((starttimestr >='"+sltPhone.befday+" 00:00:00'  and starttimestr <='"+sltPhone.befday+" 23:59:59')    or (starttimestr >='"+sltPhone.lastday+" 00:00:00' and starttimestr <='"+sltPhone.lastday+" 23:59:59')) and (tophone ='"+sltPhone.phone+"' or forphone ='"+sltPhone.phone+"' ) ";
       phonenum=sltPhone.phone;
       whereCond="((starttimestr >='"+sltPhone.befday+" 00:00:00'  and starttimestr <='"+sltPhone.befday+" 23:59:59')    or (starttimestr >='"+sltPhone.lastday+" 00:00:00' and starttimestr <='"+sltPhone.lastday+" 23:59:59')) and (tophone ='"+sltPhone.phone+"' or forphone ='"+sltPhone.phone+"' ) ";
        log.info(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        matchStr.push("match('"+input+"')- [:brok*1] -> (:phonenumber) ");
        matchStr.push("match ('phonenumber:"+phonenum+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(_.findWhere(tmp.data[0].graph.Edges, {source:n.id}) || _.findWhere(tmp.data[0].graph.Edges, {target:n.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}
//将查询到的断档数据返回前台图谱展示
 OUTPUT = diagnosis();
2021/01/26 22:40:05 [I] fs.go 77: Write attr: {"remark":"获取断档前后的通话详情","ctime":1611381536559,"author":"admin"}
2021/01/26 22:40:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:40:06 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/getDdByBLDtl.js POST
2021/01/26 22:40:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:40:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:40:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:40:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:40:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:40:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:40:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:40:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:40:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:40:28 [I] wjs.go 145: /bizApi/hdim/test/getDuanD.js:16:2:  计算出时间差，开始时间：2019-11-01===结束时间====2020-08-11====时间差=====284
2021/01/26 22:40:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:40:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:40:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:40:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:40:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:40:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:40:41 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:26:9:  map[befday:2020-05-25 lastday:2020-06-14 phone:15005107680]
2021/01/26 22:40:41 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:30:9:  select tophone from /matrix/action/calllog where  ((starttimestr >='2020-05-25 00:00:00'  and starttimestr <='2020-05-25 23:59:59')    or (starttimestr >='2020-06-14 00:00:00' and starttimestr <='2020-06-14 23:59:59')) and (tophone ='15005107680' or forphone ='15005107680' ) 
2021/01/26 22:40:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:40:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:40:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:40:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:40:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:40:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:40:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:41:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:41:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:41:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:41:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:41:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:41:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:41:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:41:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:41:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:41:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:41:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:41:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:41:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:41:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:41:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:41:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:41:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:41:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:41:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:41:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:41:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:42:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:42:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:42:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:42:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:42:22 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/getDdByBLDtl.js PUT
2021/01/26 22:42:22 [I] fs.go 56: Write data: //从前台接收值
var input = INPUT;
//var input = "broken:150051076804"; 
var phonenum="";
var whereCond="1=1";
//1.获取断档前后的通话记录
var getDdDtl = function(){
    var rtn = null;
    try{
        rtn=odb.mql(" select befday,lastday,phone from /matrix/action/broken where id='"+input+"'").data[0];   
    } catch(err){
        return [];
    }
    
    return rtn;
}

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var sltPhone=getDdDtl();
        
        log.info(sltPhone)
        var mql = "select tophone from /matrix/action/calllog where  ((starttimestr >='"+sltPhone.befday+" 00:00:00'  and starttimestr <='"+sltPhone.befday+" 23:59:59')    or (starttimestr >='"+sltPhone.lastday+" 00:00:00' and starttimestr <='"+sltPhone.lastday+" 23:59:59')) and (  forphone ='"+sltPhone.phone+"' ) ";
       phonenum=sltPhone.phone;
       whereCond="((starttimestr >='"+sltPhone.befday+" 00:00:00'  and starttimestr <='"+sltPhone.befday+" 23:59:59')    or (starttimestr >='"+sltPhone.lastday+" 00:00:00' and starttimestr <='"+sltPhone.lastday+" 23:59:59')) and (tophone ='"+sltPhone.phone+"' or forphone ='"+sltPhone.phone+"' ) ";
        log.info(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        matchStr.push("match('"+input+"')- [:brok*1] -> (:phonenumber) ");
        matchStr.push("match ('phonenumber:"+phonenum+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(_.findWhere(tmp.data[0].graph.Edges, {source:n.id}) || _.findWhere(tmp.data[0].graph.Edges, {target:n.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}
//将查询到的断档数据返回前台图谱展示
 OUTPUT = diagnosis();
2021/01/26 22:42:22 [I] fs.go 77: Write attr: {"remark":"获取断档前后的通话详情","ctime":1611381536559,"author":"admin"}
2021/01/26 22:42:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:42:23 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/getDdByBLDtl.js POST
2021/01/26 22:42:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:42:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:42:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:42:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:42:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:42:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:42:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:42:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:42:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:42:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:42:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:42:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:42:46 [I] wjs.go 145: /bizApi/hdim/test/getDuanD.js:16:2:  计算出时间差，开始时间：2019-11-01===结束时间====2020-08-11====时间差=====284
2021/01/26 22:42:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:42:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:42:50 [I] wjs.go 145: /bizApi/hdim/test/getDuanD.js:16:2:  计算出时间差，开始时间：2019-11-01===结束时间====2020-08-11====时间差=====284
2021/01/26 22:42:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:42:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:42:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:42:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:42:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:42:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:42:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:42:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:43:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:43:01 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:26:9:  map[befday:2020-05-25 lastday:2020-06-14 phone:15005107680]
2021/01/26 22:43:01 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:30:9:  select tophone from /matrix/action/calllog where  ((starttimestr >='2020-05-25 00:00:00'  and starttimestr <='2020-05-25 23:59:59')    or (starttimestr >='2020-06-14 00:00:00' and starttimestr <='2020-06-14 23:59:59')) and (  forphone ='15005107680' ) 
2021/01/26 22:43:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:43:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:43:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:43:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:43:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:43:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:43:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:43:06 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:26:9:  map[befday:2020-05-25 lastday:2020-06-14 phone:15005107680]
2021/01/26 22:43:06 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:30:9:  select tophone from /matrix/action/calllog where  ((starttimestr >='2020-05-25 00:00:00'  and starttimestr <='2020-05-25 23:59:59')    or (starttimestr >='2020-06-14 00:00:00' and starttimestr <='2020-06-14 23:59:59')) and (  forphone ='15005107680' ) 
2021/01/26 22:43:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:43:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:43:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:43:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:43:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:43:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:43:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:43:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:43:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:43:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:43:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:43:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:43:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:43:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:43:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:43:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:43:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:43:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:43:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:43:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:43:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:43:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:43:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:43:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:43:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:43:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:43:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:43:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:43:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:43:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:43:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:43:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:43:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:43:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:43:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:44:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:44:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:44:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:44:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:44:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:44:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:44:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:44:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:44:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:44:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:44:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:44:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:44:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:44:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:44:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:44:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:44:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:44:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:44:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:44:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:44:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:44:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:44:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:44:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:44:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:44:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:44:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:44:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:44:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:44:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:44:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:44:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:44:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:44:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:45:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:45:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:45:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:45:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:45:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:45:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:45:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:45:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:45:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:45:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:45:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:45:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:45:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:45:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:45:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:45:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:45:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:45:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:45:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:45:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:45:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:45:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:45:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:45:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:45:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:45:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:45:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:45:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:45:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:45:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:45:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:45:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:45:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:45:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:45:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:46:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:25 [W] cypher_util.go 758:  not Exist, ignore & continue .
2021/01/26 22:47:25 [E] wjs.go 149: /bizApi/hdim/test/test_diagnosis_mobile.js:96:9:  map[message:[Exec]:
  [Exec]:  cql={SELECT class,id,map_varchar_set_11 as "callto",name,tags  FROM object  WHERE  class = ?   AND expr(object_lucene,?)  LIMIT 100 }, values={[/matrix/action/calllog {"filter":{"must":[{"type":"range","field":"varchar_410","lower":"2020-03-01 00:00:00.000","upper":"2020-03-30 23:59:59.000","include_lower":true,"include_upper":true},{"type":"contains","field":"map_varchar_set_11$_all","values":[]}],"type":"boolean"}}]}, error:{Field values required}
  "[Exec]" backtrace:
  git.wecise.com/wecise/platform/odb.(*Gutil).RawQuery:util.go:398
  git.wecise.com/wecise/platform/odb.(*MatrixSearch).ExecSearch:core.go:1809
  git.wecise.com/wecise/platform/odb.(*CPhase).cypherQueryIDDeprecate:cypher_query.go:541
  git.wecise.com/wecise/platform/odb.(*Gutil).CypherMatchQuery:cypher_query.go:161
  git.wecise.com/wecise/platform/odb.(*MqlSemantics).Cypher:cypher.go:1344
  git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:275
  git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
  git.wecise.com/wecise/platform/odb.(*Gutil).jsFuncMQL:js_odb.go:155
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:201
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeVariableExpression:cmpl_evaluate_expression.go:454
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:102
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeForStatement:cmpl_evaluate_statement.go:263
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:68
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeIfStatement:cmpl_evaluate_statement.go:292
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:71
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement.func1:cmpl_evaluate_statement.go:344
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).tryCatchEvaluate:runtime.go:142
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement:cmpl_evaluate_statement.go:343
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:98
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeAssignExpression:cmpl_evaluate_expression.go:124
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:31
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeProgram:cmpl_evaluate.go:17
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_runOrEval.func1:runtime.go:767
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.catchPanic:error.go:252
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_runOrEval:runtime.go:766
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_run:runtime.go:779
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.Otto.Run:otto.go:295
  git.wecise.com/wecise/platform/web/routers/script.ExecJS:script.go:132
  reflect.Value.call:value.go:479
  reflect.Value.Call:value.go:337
  github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
  github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
  gopkg.in/macaron%2ev1.(*Context).run:context.go:121
  git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
  git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
  reflect.Value.call:value.go:479
  reflect.Value.Call:value.go:337
  github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
  github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
  gopkg.in/macaron%2ev1.(*Context).run:context.go:121
  git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
  gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
  gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
  github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
  github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
  gopkg.in/macaron%2ev1.(*Context).run:context.go:121
  gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
  gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
  gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
  github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
  github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
  gopkg.in/macaron%2ev1.(*Context).run:context.go:121
  git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
  gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
  gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
  github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
  github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
  gopkg.in/macaron%2ev1.(*Context).run:context.go:121
  git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
  gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
  gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
  github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
  github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
  gopkg.in/macaron%2ev1.(*Context).run:context.go:121
  gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
  gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
  gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
  net/http.serverHandler.ServeHTTP:server.go:2844
  net/http.(*conn).serve:server.go:1926
  runtime.goexit:asm_amd64.s:1375, {SELECT class,id,map_varchar_set_11 as "callto",name,tags  FROM object  WHERE  class = ?   AND expr(object_lucene,?)  LIMIT 100 }, {[/matrix/action/calllog {"filter":{"must":[{"type":"range","field":"varchar_410","lower":"2020-03-01 00:00:00.000","upper":"2020-03-30 23:59:59.000","include_lower":true,"include_upper":true},{"type":"contains","field":"map_varchar_set_11$_all","values":[]}],"type":"boolean"}}]}
"[Exec]" backtrace:
git.wecise.com/wecise/platform/odb.(*MatrixSearch).ExecSearch:core.go:1810
git.wecise.com/wecise/platform/odb.(*CPhase).cypherQueryIDDeprecate:cypher_query.go:541
git.wecise.com/wecise/platform/odb.(*Gutil).CypherMatchQuery:cypher_query.go:161
git.wecise.com/wecise/platform/odb.(*MqlSemantics).Cypher:cypher.go:1344
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:275
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/odb.(*Gutil).jsFuncMQL:js_odb.go:155
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:201
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeVariableExpression:cmpl_evaluate_expression.go:454
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:102
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeForStatement:cmpl_evaluate_statement.go:263
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:68
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeIfStatement:cmpl_evaluate_statement.go:292
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:71
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement.func1:cmpl_evaluate_statement.go:344
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).tryCatchEvaluate:runtime.go:142
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement:cmpl_evaluate_statement.go:343
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:98
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeAssignExpression:cmpl_evaluate_expression.go:124
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:31
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeProgram:cmpl_evaluate.go:17
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_runOrEval.func1:runtime.go:767
git.wecise.com/wecise/platform/lib/robertkrimen/otto.catchPanic:error.go:252
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_runOrEval:runtime.go:766
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_run:runtime.go:779
git.wecise.com/wecise/platform/lib/robertkrimen/otto.Otto.Run:otto.go:295
git.wecise.com/wecise/platform/web/routers/script.ExecJS:script.go:132
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375 name:GoError:/bizApi/hdim/test/test_diagnosis_mobile.js:82:23]
2021/01/26 22:47:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:32 [W] cypher_util.go 758:  not Exist, ignore & continue .
2021/01/26 22:47:32 [E] wjs.go 149: /bizApi/hdim/test/test_diagnosis_mobile.js:96:9:  map[message:[Exec]:
  [Exec]:  cql={SELECT class,id,map_varchar_set_11 as "callto",name,tags  FROM object  WHERE  class = ?   AND expr(object_lucene,?)  LIMIT 100 }, values={[/matrix/action/calllog {"filter":{"must":[{"type":"range","field":"varchar_410","lower":"2020-03-01 00:00:00.000","upper":"2020-03-30 23:59:59.000","include_lower":true,"include_upper":true},{"type":"contains","field":"map_varchar_set_11$_all","values":[]}],"type":"boolean"}}]}, error:{Field values required}
  "[Exec]" backtrace:
  git.wecise.com/wecise/platform/odb.(*Gutil).RawQuery:util.go:398
  git.wecise.com/wecise/platform/odb.(*MatrixSearch).ExecSearch:core.go:1809
  git.wecise.com/wecise/platform/odb.(*CPhase).cypherQueryIDDeprecate:cypher_query.go:541
  git.wecise.com/wecise/platform/odb.(*Gutil).CypherMatchQuery:cypher_query.go:161
  git.wecise.com/wecise/platform/odb.(*MqlSemantics).Cypher:cypher.go:1344
  git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:275
  git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
  git.wecise.com/wecise/platform/odb.(*Gutil).jsFuncMQL:js_odb.go:155
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:201
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeVariableExpression:cmpl_evaluate_expression.go:454
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:102
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeForStatement:cmpl_evaluate_statement.go:263
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:68
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeIfStatement:cmpl_evaluate_statement.go:292
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:71
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement.func1:cmpl_evaluate_statement.go:344
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).tryCatchEvaluate:runtime.go:142
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement:cmpl_evaluate_statement.go:343
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:98
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeAssignExpression:cmpl_evaluate_expression.go:124
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:31
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeProgram:cmpl_evaluate.go:17
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_runOrEval.func1:runtime.go:767
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.catchPanic:error.go:252
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_runOrEval:runtime.go:766
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_run:runtime.go:779
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.Otto.Run:otto.go:295
  git.wecise.com/wecise/platform/web/routers/script.ExecJS:script.go:132
  reflect.Value.call:value.go:479
  reflect.Value.Call:value.go:337
  github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
  github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
  gopkg.in/macaron%2ev1.(*Context).run:context.go:121
  git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
  git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
  reflect.Value.call:value.go:479
  reflect.Value.Call:value.go:337
  github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
  github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
  gopkg.in/macaron%2ev1.(*Context).run:context.go:121
  git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
  gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
  gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
  github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
  github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
  gopkg.in/macaron%2ev1.(*Context).run:context.go:121
  gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
  gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
  gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
  github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
  github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
  gopkg.in/macaron%2ev1.(*Context).run:context.go:121
  git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
  gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
  gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
  github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
  github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
  gopkg.in/macaron%2ev1.(*Context).run:context.go:121
  git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
  gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
  gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
  github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
  github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
  gopkg.in/macaron%2ev1.(*Context).run:context.go:121
  gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
  gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
  gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
  net/http.serverHandler.ServeHTTP:server.go:2844
  net/http.(*conn).serve:server.go:1926
  runtime.goexit:asm_amd64.s:1375, {SELECT class,id,map_varchar_set_11 as "callto",name,tags  FROM object  WHERE  class = ?   AND expr(object_lucene,?)  LIMIT 100 }, {[/matrix/action/calllog {"filter":{"must":[{"type":"range","field":"varchar_410","lower":"2020-03-01 00:00:00.000","upper":"2020-03-30 23:59:59.000","include_lower":true,"include_upper":true},{"type":"contains","field":"map_varchar_set_11$_all","values":[]}],"type":"boolean"}}]}
"[Exec]" backtrace:
git.wecise.com/wecise/platform/odb.(*MatrixSearch).ExecSearch:core.go:1810
git.wecise.com/wecise/platform/odb.(*CPhase).cypherQueryIDDeprecate:cypher_query.go:541
git.wecise.com/wecise/platform/odb.(*Gutil).CypherMatchQuery:cypher_query.go:161
git.wecise.com/wecise/platform/odb.(*MqlSemantics).Cypher:cypher.go:1344
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:275
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/odb.(*Gutil).jsFuncMQL:js_odb.go:155
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:201
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeVariableExpression:cmpl_evaluate_expression.go:454
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:102
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeForStatement:cmpl_evaluate_statement.go:263
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:68
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeIfStatement:cmpl_evaluate_statement.go:292
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:71
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement.func1:cmpl_evaluate_statement.go:344
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).tryCatchEvaluate:runtime.go:142
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement:cmpl_evaluate_statement.go:343
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:98
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeAssignExpression:cmpl_evaluate_expression.go:124
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:31
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeProgram:cmpl_evaluate.go:17
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_runOrEval.func1:runtime.go:767
git.wecise.com/wecise/platform/lib/robertkrimen/otto.catchPanic:error.go:252
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_runOrEval:runtime.go:766
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_run:runtime.go:779
git.wecise.com/wecise/platform/lib/robertkrimen/otto.Otto.Run:otto.go:295
git.wecise.com/wecise/platform/web/routers/script.ExecJS:script.go:132
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375 name:GoError:/bizApi/hdim/test/test_diagnosis_mobile.js:82:23]
2021/01/26 22:47:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:47:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:48:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:48:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:48:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:48:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:48:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:48:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:48:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:48:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:48:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:48:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:48:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:48:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:48:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:48:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:48:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:48:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:48:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:48:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:48:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:48:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:48:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:48:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:48:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:48:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:48:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:48:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:48:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:48:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:49:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:49:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:49:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:49:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:49:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:49:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:49:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:49:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:49:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:49:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:49:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:49:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:49:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:49:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:49:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:49:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:49:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:49:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:49:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:49:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:49:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:49:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:49:35 [W] cypher_util.go 758:  not Exist, ignore & continue .
2021/01/26 22:49:35 [E] wjs.go 149: /bizApi/hdim/test/test_diagnosis_mobile.js:96:9:  map[message:[Exec]:
  [Exec]:  cql={SELECT class,id,map_varchar_set_11 as "callto",name,tags  FROM object  WHERE  class = ?   AND expr(object_lucene,?)  LIMIT 100 }, values={[/matrix/action/calllog {"filter":{"must":[{"type":"range","field":"varchar_410","lower":"2020-03-01 00:00:00.000","upper":"2020-03-30 23:59:59.000","include_lower":true,"include_upper":true},{"type":"contains","field":"map_varchar_set_11$_all","values":[]}],"type":"boolean"}}]}, error:{Field values required}
  "[Exec]" backtrace:
  git.wecise.com/wecise/platform/odb.(*Gutil).RawQuery:util.go:398
  git.wecise.com/wecise/platform/odb.(*MatrixSearch).ExecSearch:core.go:1809
  git.wecise.com/wecise/platform/odb.(*CPhase).cypherQueryIDDeprecate:cypher_query.go:541
  git.wecise.com/wecise/platform/odb.(*Gutil).CypherMatchQuery:cypher_query.go:161
  git.wecise.com/wecise/platform/odb.(*MqlSemantics).Cypher:cypher.go:1344
  git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:275
  git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
  git.wecise.com/wecise/platform/odb.(*Gutil).jsFuncMQL:js_odb.go:155
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:201
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeVariableExpression:cmpl_evaluate_expression.go:454
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:102
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeForStatement:cmpl_evaluate_statement.go:263
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:68
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeIfStatement:cmpl_evaluate_statement.go:292
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:71
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement.func1:cmpl_evaluate_statement.go:344
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).tryCatchEvaluate:runtime.go:142
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement:cmpl_evaluate_statement.go:343
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:98
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeAssignExpression:cmpl_evaluate_expression.go:124
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:31
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeProgram:cmpl_evaluate.go:17
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_runOrEval.func1:runtime.go:767
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.catchPanic:error.go:252
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_runOrEval:runtime.go:766
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_run:runtime.go:779
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.Otto.Run:otto.go:295
  git.wecise.com/wecise/platform/web/routers/script.ExecJS:script.go:132
  reflect.Value.call:value.go:479
  reflect.Value.Call:value.go:337
  github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
  github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
  gopkg.in/macaron%2ev1.(*Context).run:context.go:121
  git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
  git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
  reflect.Value.call:value.go:479
  reflect.Value.Call:value.go:337
  github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
  github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
  gopkg.in/macaron%2ev1.(*Context).run:context.go:121
  git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
  gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
  gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
  github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
  github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
  gopkg.in/macaron%2ev1.(*Context).run:context.go:121
  gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
  gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
  gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
  github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
  github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
  gopkg.in/macaron%2ev1.(*Context).run:context.go:121
  git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
  gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
  gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
  github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
  github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
  gopkg.in/macaron%2ev1.(*Context).run:context.go:121
  git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
  gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
  gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
  github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
  github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
  gopkg.in/macaron%2ev1.(*Context).run:context.go:121
  gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
  gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
  gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
  net/http.serverHandler.ServeHTTP:server.go:2844
  net/http.(*conn).serve:server.go:1926
  runtime.goexit:asm_amd64.s:1375, {SELECT class,id,map_varchar_set_11 as "callto",name,tags  FROM object  WHERE  class = ?   AND expr(object_lucene,?)  LIMIT 100 }, {[/matrix/action/calllog {"filter":{"must":[{"type":"range","field":"varchar_410","lower":"2020-03-01 00:00:00.000","upper":"2020-03-30 23:59:59.000","include_lower":true,"include_upper":true},{"type":"contains","field":"map_varchar_set_11$_all","values":[]}],"type":"boolean"}}]}
"[Exec]" backtrace:
git.wecise.com/wecise/platform/odb.(*MatrixSearch).ExecSearch:core.go:1810
git.wecise.com/wecise/platform/odb.(*CPhase).cypherQueryIDDeprecate:cypher_query.go:541
git.wecise.com/wecise/platform/odb.(*Gutil).CypherMatchQuery:cypher_query.go:161
git.wecise.com/wecise/platform/odb.(*MqlSemantics).Cypher:cypher.go:1344
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:275
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/odb.(*Gutil).jsFuncMQL:js_odb.go:155
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:201
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeVariableExpression:cmpl_evaluate_expression.go:454
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:102
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeForStatement:cmpl_evaluate_statement.go:263
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:68
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeIfStatement:cmpl_evaluate_statement.go:292
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:71
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement.func1:cmpl_evaluate_statement.go:344
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).tryCatchEvaluate:runtime.go:142
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement:cmpl_evaluate_statement.go:343
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:98
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeAssignExpression:cmpl_evaluate_expression.go:124
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:31
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeProgram:cmpl_evaluate.go:17
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_runOrEval.func1:runtime.go:767
git.wecise.com/wecise/platform/lib/robertkrimen/otto.catchPanic:error.go:252
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_runOrEval:runtime.go:766
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_run:runtime.go:779
git.wecise.com/wecise/platform/lib/robertkrimen/otto.Otto.Run:otto.go:295
git.wecise.com/wecise/platform/web/routers/script.ExecJS:script.go:132
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375 name:GoError:/bizApi/hdim/test/test_diagnosis_mobile.js:82:23]
2021/01/26 22:49:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:49:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:49:38 [W] cypher_util.go 758:  not Exist, ignore & continue .
2021/01/26 22:49:38 [E] wjs.go 149: /bizApi/hdim/test/test_diagnosis_mobile.js:96:9:  map[message:[Exec]:
  [Exec]:  cql={SELECT class,id,map_varchar_set_11 as "callto",name,tags  FROM object  WHERE  class = ?   AND expr(object_lucene,?)  LIMIT 100 }, values={[/matrix/action/calllog {"filter":{"must":[{"type":"range","field":"varchar_410","lower":"2020-03-01 00:00:00.000","upper":"2020-03-30 23:59:59.000","include_lower":true,"include_upper":true},{"type":"contains","field":"map_varchar_set_11$_all","values":[]}],"type":"boolean"}}]}, error:{Field values required}
  "[Exec]" backtrace:
  git.wecise.com/wecise/platform/odb.(*Gutil).RawQuery:util.go:398
  git.wecise.com/wecise/platform/odb.(*MatrixSearch).ExecSearch:core.go:1809
  git.wecise.com/wecise/platform/odb.(*CPhase).cypherQueryIDDeprecate:cypher_query.go:541
  git.wecise.com/wecise/platform/odb.(*Gutil).CypherMatchQuery:cypher_query.go:161
  git.wecise.com/wecise/platform/odb.(*MqlSemantics).Cypher:cypher.go:1344
  git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:275
  git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
  git.wecise.com/wecise/platform/odb.(*Gutil).jsFuncMQL:js_odb.go:155
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:201
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeVariableExpression:cmpl_evaluate_expression.go:454
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:102
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeForStatement:cmpl_evaluate_statement.go:263
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:68
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeIfStatement:cmpl_evaluate_statement.go:292
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:71
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement.func1:cmpl_evaluate_statement.go:344
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).tryCatchEvaluate:runtime.go:142
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement:cmpl_evaluate_statement.go:343
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:98
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeAssignExpression:cmpl_evaluate_expression.go:124
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:31
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeProgram:cmpl_evaluate.go:17
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_runOrEval.func1:runtime.go:767
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.catchPanic:error.go:252
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_runOrEval:runtime.go:766
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_run:runtime.go:779
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.Otto.Run:otto.go:295
  git.wecise.com/wecise/platform/web/routers/script.ExecJS:script.go:132
  reflect.Value.call:value.go:479
  reflect.Value.Call:value.go:337
  github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
  github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
  gopkg.in/macaron%2ev1.(*Context).run:context.go:121
  git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
  git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
  reflect.Value.call:value.go:479
  reflect.Value.Call:value.go:337
  github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
  github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
  gopkg.in/macaron%2ev1.(*Context).run:context.go:121
  git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
  gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
  gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
  github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
  github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
  gopkg.in/macaron%2ev1.(*Context).run:context.go:121
  gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
  gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
  gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
  github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
  github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
  gopkg.in/macaron%2ev1.(*Context).run:context.go:121
  git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
  gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
  gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
  github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
  github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
  gopkg.in/macaron%2ev1.(*Context).run:context.go:121
  git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
  gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
  gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
  github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
  github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
  gopkg.in/macaron%2ev1.(*Context).run:context.go:121
  gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
  gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
  gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
  net/http.serverHandler.ServeHTTP:server.go:2844
  net/http.(*conn).serve:server.go:1926
  runtime.goexit:asm_amd64.s:1375, {SELECT class,id,map_varchar_set_11 as "callto",name,tags  FROM object  WHERE  class = ?   AND expr(object_lucene,?)  LIMIT 100 }, {[/matrix/action/calllog {"filter":{"must":[{"type":"range","field":"varchar_410","lower":"2020-03-01 00:00:00.000","upper":"2020-03-30 23:59:59.000","include_lower":true,"include_upper":true},{"type":"contains","field":"map_varchar_set_11$_all","values":[]}],"type":"boolean"}}]}
"[Exec]" backtrace:
git.wecise.com/wecise/platform/odb.(*MatrixSearch).ExecSearch:core.go:1810
git.wecise.com/wecise/platform/odb.(*CPhase).cypherQueryIDDeprecate:cypher_query.go:541
git.wecise.com/wecise/platform/odb.(*Gutil).CypherMatchQuery:cypher_query.go:161
git.wecise.com/wecise/platform/odb.(*MqlSemantics).Cypher:cypher.go:1344
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:275
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/odb.(*Gutil).jsFuncMQL:js_odb.go:155
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:201
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeVariableExpression:cmpl_evaluate_expression.go:454
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:102
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeForStatement:cmpl_evaluate_statement.go:263
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:68
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeIfStatement:cmpl_evaluate_statement.go:292
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:71
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement.func1:cmpl_evaluate_statement.go:344
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).tryCatchEvaluate:runtime.go:142
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement:cmpl_evaluate_statement.go:343
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:98
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeAssignExpression:cmpl_evaluate_expression.go:124
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:31
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeProgram:cmpl_evaluate.go:17
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_runOrEval.func1:runtime.go:767
git.wecise.com/wecise/platform/lib/robertkrimen/otto.catchPanic:error.go:252
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_runOrEval:runtime.go:766
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_run:runtime.go:779
git.wecise.com/wecise/platform/lib/robertkrimen/otto.Otto.Run:otto.go:295
git.wecise.com/wecise/platform/web/routers/script.ExecJS:script.go:132
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375 name:GoError:/bizApi/hdim/test/test_diagnosis_mobile.js:82:23]
2021/01/26 22:49:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:49:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:50:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:50:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:50:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:50:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:50:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:50:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:50:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:50:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:50:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:50:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:50:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:50:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:50:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:50:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:50:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:50:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:50:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:50:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:50:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:50:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:50:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:50:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:50:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:50:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:50:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:50:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:50:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:50:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:50:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:50:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:50:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:50:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:50:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:51:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:51:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:51:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:51:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:51:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:52:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:52:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:52:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:52:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:52:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:52:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:52:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:52:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:52:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:52:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:52:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:52:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:52:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:52:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:52:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:52:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:52:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:52:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:52:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:52:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:52:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:52:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:52:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:52:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:52:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:52:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:52:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:52:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:52:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:52:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:52:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:53:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:53:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:53:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:53:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:53:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:53:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:53:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:53:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:53:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:53:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:53:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:54:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:54:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:54:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:54:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:54:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:54:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:54:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:54:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:54:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:54:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:54:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:54:32 [W] cypher_util.go 758:  not Exist, ignore & continue .
2021/01/26 22:54:32 [E] wjs.go 149: /bizApi/hdim/test/test_diagnosis_mobile.js:96:9:  map[message:[Exec]:
  [Exec]:  cql={SELECT class,id,map_varchar_set_11 as "callto",name,tags  FROM object  WHERE  class = ?   AND expr(object_lucene,?)  LIMIT 100 }, values={[/matrix/action/calllog {"filter":{"must":[{"type":"range","field":"varchar_410","lower":"2020-03-01 00:00:00.000","upper":"2020-03-30 23:59:59.000","include_lower":true,"include_upper":true},{"type":"contains","field":"map_varchar_set_11$_all","values":[]}],"type":"boolean"}}]}, error:{Field values required}
  "[Exec]" backtrace:
  git.wecise.com/wecise/platform/odb.(*Gutil).RawQuery:util.go:398
  git.wecise.com/wecise/platform/odb.(*MatrixSearch).ExecSearch:core.go:1809
  git.wecise.com/wecise/platform/odb.(*CPhase).cypherQueryIDDeprecate:cypher_query.go:541
  git.wecise.com/wecise/platform/odb.(*Gutil).CypherMatchQuery:cypher_query.go:161
  git.wecise.com/wecise/platform/odb.(*MqlSemantics).Cypher:cypher.go:1344
  git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:275
  git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
  git.wecise.com/wecise/platform/odb.(*Gutil).jsFuncMQL:js_odb.go:155
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:201
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeVariableExpression:cmpl_evaluate_expression.go:454
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:102
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeForStatement:cmpl_evaluate_statement.go:263
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:68
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeIfStatement:cmpl_evaluate_statement.go:292
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:71
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement.func1:cmpl_evaluate_statement.go:344
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).tryCatchEvaluate:runtime.go:142
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement:cmpl_evaluate_statement.go:343
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:98
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeAssignExpression:cmpl_evaluate_expression.go:124
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:31
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeProgram:cmpl_evaluate.go:17
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_runOrEval.func1:runtime.go:767
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.catchPanic:error.go:252
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_runOrEval:runtime.go:766
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_run:runtime.go:779
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.Otto.Run:otto.go:295
  git.wecise.com/wecise/platform/web/routers/script.ExecJS:script.go:132
  reflect.Value.call:value.go:479
  reflect.Value.Call:value.go:337
  github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
  github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
  gopkg.in/macaron%2ev1.(*Context).run:context.go:121
  git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
  git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
  reflect.Value.call:value.go:479
  reflect.Value.Call:value.go:337
  github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
  github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
  gopkg.in/macaron%2ev1.(*Context).run:context.go:121
  git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
  gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
  gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
  github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
  github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
  gopkg.in/macaron%2ev1.(*Context).run:context.go:121
  gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
  gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
  gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
  github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
  github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
  gopkg.in/macaron%2ev1.(*Context).run:context.go:121
  git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
  gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
  gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
  github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
  github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
  gopkg.in/macaron%2ev1.(*Context).run:context.go:121
  git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
  gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
  gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
  github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
  github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
  gopkg.in/macaron%2ev1.(*Context).run:context.go:121
  gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
  gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
  gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
  net/http.serverHandler.ServeHTTP:server.go:2844
  net/http.(*conn).serve:server.go:1926
  runtime.goexit:asm_amd64.s:1375, {SELECT class,id,map_varchar_set_11 as "callto",name,tags  FROM object  WHERE  class = ?   AND expr(object_lucene,?)  LIMIT 100 }, {[/matrix/action/calllog {"filter":{"must":[{"type":"range","field":"varchar_410","lower":"2020-03-01 00:00:00.000","upper":"2020-03-30 23:59:59.000","include_lower":true,"include_upper":true},{"type":"contains","field":"map_varchar_set_11$_all","values":[]}],"type":"boolean"}}]}
"[Exec]" backtrace:
git.wecise.com/wecise/platform/odb.(*MatrixSearch).ExecSearch:core.go:1810
git.wecise.com/wecise/platform/odb.(*CPhase).cypherQueryIDDeprecate:cypher_query.go:541
git.wecise.com/wecise/platform/odb.(*Gutil).CypherMatchQuery:cypher_query.go:161
git.wecise.com/wecise/platform/odb.(*MqlSemantics).Cypher:cypher.go:1344
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:275
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/odb.(*Gutil).jsFuncMQL:js_odb.go:155
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:201
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeVariableExpression:cmpl_evaluate_expression.go:454
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:102
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeForStatement:cmpl_evaluate_statement.go:263
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:68
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeIfStatement:cmpl_evaluate_statement.go:292
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:71
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement.func1:cmpl_evaluate_statement.go:344
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).tryCatchEvaluate:runtime.go:142
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement:cmpl_evaluate_statement.go:343
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:98
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeAssignExpression:cmpl_evaluate_expression.go:124
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:31
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeProgram:cmpl_evaluate.go:17
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_runOrEval.func1:runtime.go:767
git.wecise.com/wecise/platform/lib/robertkrimen/otto.catchPanic:error.go:252
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_runOrEval:runtime.go:766
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_run:runtime.go:779
git.wecise.com/wecise/platform/lib/robertkrimen/otto.Otto.Run:otto.go:295
git.wecise.com/wecise/platform/web/routers/script.ExecJS:script.go:132
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375 name:GoError:/bizApi/hdim/test/test_diagnosis_mobile.js:82:23]
2021/01/26 22:54:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:55:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:55:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:55:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:55:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:55:45 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:26:9:  <nil>
2021/01/26 22:55:45 [E] wjs.go 149: /bizApi/hdim/test/getDdByBLDtl.js:76:9:  map[message:Cannot access member 'graph' of undefined]
2021/01/26 22:55:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:55:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:55:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:55:51 [I] wjs.go 145: /bizApi/hdim/test/getDuanD.js:16:2:  计算出时间差，开始时间：2019-11-01===结束时间====2020-08-11====时间差=====284
2021/01/26 22:55:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:55:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:56:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:56:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:56:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:56:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:56:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:56:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:56:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:56:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:56:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:56:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:56:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:56:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:56:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:56:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:56:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:56:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:56:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:56:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:56:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:56:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:56:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:56:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:56:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:56:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:56:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:57:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:57:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:57:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:57:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:57:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:57:08 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:26:9:  map[befday:2019-12-09 lastday:2019-12-17 phone:15005107680]
2021/01/26 22:57:08 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:30:9:  select tophone from /matrix/action/calllog where  ((starttimestr >='2019-12-09 00:00:00'  and starttimestr <='2019-12-09 23:59:59')    or (starttimestr >='2019-12-17 00:00:00' and starttimestr <='2019-12-17 23:59:59')) and (  forphone ='15005107680' ) 
2021/01/26 22:57:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:57:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:57:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:57:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:57:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:57:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:57:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:57:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:57:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:57:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:57:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:57:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:57:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:57:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:57:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:57:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:57:37 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:26:9:  map[befday:2020-05-06 lastday:2020-05-14 phone:15005107680]
2021/01/26 22:57:37 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:30:9:  select tophone from /matrix/action/calllog where  ((starttimestr >='2020-05-06 00:00:00'  and starttimestr <='2020-05-06 23:59:59')    or (starttimestr >='2020-05-14 00:00:00' and starttimestr <='2020-05-14 23:59:59')) and (  forphone ='15005107680' ) 
2021/01/26 22:57:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:57:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:57:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:57:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:57:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:57:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:57:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:57:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:57:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:57:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:57:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:57:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:57:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:57:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:57:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:57:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:57:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:57:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:57:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:57:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:58:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:58:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:58:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:58:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:58:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:58:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:58:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:58:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:58:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:58:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:58:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:58:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:58:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:58:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:58:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:58:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:58:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:58:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:58:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:58:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:58:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:58:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:58:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:58:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:58:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:58:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:58:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:58:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:58:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:58:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:58:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:58:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:58:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:58:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:58:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:58:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:58:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:58:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:59:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:59:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:59:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:59:14 [I] wjs.go 145: /bizApi/hdim/test/getDuanD.js:16:2:  计算出时间差，开始时间：2019-11-01===结束时间====2020-08-11====时间差=====284
2021/01/26 22:59:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:59:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:59:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:59:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:59:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:59:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:59:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:59:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:59:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:59:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:59:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:59:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:59:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:59:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:59:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:59:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:59:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:59:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:59:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:59:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:59:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:59:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:59:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:59:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:59:54 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:26:9:  map[befday:2020-05-06 lastday:2020-05-14 phone:15005107680]
2021/01/26 22:59:54 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:30:9:  select tophone from /matrix/action/calllog where  ((starttimestr >='2020-05-06 00:00:00'  and starttimestr <='2020-05-06 23:59:59')    or (starttimestr >='2020-05-14 00:00:00' and starttimestr <='2020-05-14 23:59:59')) and (  forphone ='15005107680' ) 
2021/01/26 22:59:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:59:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:59:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:59:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:59:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:59:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 22:59:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:00:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:00:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:00:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:00:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:00:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:00:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:00:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:00:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:00:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:00:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:00:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:00:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:00:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:00:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:00:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:00:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:00:18 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:26:9:  map[befday:2019-12-09 lastday:2019-12-17 phone:15005107680]
2021/01/26 23:00:18 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:30:9:  select tophone from /matrix/action/calllog where  ((starttimestr >='2019-12-09 00:00:00'  and starttimestr <='2019-12-09 23:59:59')    or (starttimestr >='2019-12-17 00:00:00' and starttimestr <='2019-12-17 23:59:59')) and (  forphone ='15005107680' ) 
2021/01/26 23:00:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:00:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:00:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:00:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:00:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:00:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:00:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:00:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:00:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:00:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:00:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:00:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:00:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:00:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:00:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:00:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:00:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:00:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:00:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:00:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:01:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:01:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:01:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:01:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:01:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:01:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:01:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:01:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:01:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:02:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:02:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:02:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:02:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:02:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:02:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:02:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:02:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:02:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:02:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:02:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:02:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:02:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:02:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:02:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:02:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:02:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:02:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:02:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:02:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:02:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:02:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:03:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:03:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:03:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:03:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:03:34 [E] modb.go 90: [Parser]:
  After '... enumber= "_all"': expected Space or LogicOP or SelectCondition or end of text: {SELECT
  	 *
  FROM
  	 /matrix/entity/phonenumber
  	 where phonenumber= "_all": [
      "perbasisinfo:无"
    ]}
"[Parser]" backtrace:
git.wecise.com/wecise/platform/odb.(*Gutil).Parse:query.go:205
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:240
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/web/routers/modb.Mql:modb.go:87
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375
2021/01/26 23:03:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:03:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:03:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:03:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:04:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:04:22 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 23:04:22 [I] fs.go 56: Write data: // perbasisinfo 人员
//var pId = decodeURIComponent(INPUT);
var pId = 'phonenumber:15005107680';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        
        if(RegExp(/perbasisinfo/).test(pId)){
            // 人 - 电话号码
            // 人 - 手机 - 手机号码
            var matchStr = "match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
            
            log.debug(11,matchStr)
            var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
            // 只返回手机号码
            rtn =   _.compact(_.map(tmp,function(v){
                        if(v.class === '/matrix/entity/phonenumber'){
                            return v.id;
                        }
                    }));
        } else if( RegExp(/phonenumber/).test(pId) ){
            rtn = [pId];
        }
        
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        
       matchStr.push("match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(_.findWhere(tmp.data[0].graph.Edges, {source:n.id}) || _.findWhere(tmp.data[0].graph.Edges, {target:n.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 23:04:22 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 23:04:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:04:23 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 23:04:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:04:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:04:35 [E] cypher_ternary.go 295: err: [UnKnown]: query Timed out!
"[UnKnown]" backtrace:
git.wecise.com/wecise/platform/odb.(*CTernary).RelationRangeLoop:cypher_ternary.go:541
git.wecise.com/wecise/platform/odb.(*CTernary).ObjectEvaluateAndSpread:cypher_ternary.go:294
git.wecise.com/wecise/platform/odb.(*CTernary).EvaluateAndSpread:cypher_ternary.go:204
git.wecise.com/wecise/platform/odb.(*CPhase).Evaluate:cypher_query.go:417
git.wecise.com/wecise/platform/odb.(*Gutil).CypherMatchQuery:cypher_query.go:176
git.wecise.com/wecise/platform/odb.(*MqlSemantics).Cypher:cypher.go:1344
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:275
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/odb.(*Gutil).jsFuncMQL:js_odb.go:155
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:201
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeVariableExpression:cmpl_evaluate_expression.go:454
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:102
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeForStatement:cmpl_evaluate_statement.go:263
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:68
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeIfStatement:cmpl_evaluate_statement.go:292
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:71
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement.func1:cmpl_evaluate_statement.go:344
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).tryCatchEvaluate:runtime.go:142
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement:cmpl_evaluate_statement.go:343
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:98
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeAssignExpression:cmpl_evaluate_expression.go:124
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:31
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeProgram:cmpl_evaluate.go:17
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_runOrEval.func1:runtime.go:767
git.wecise.com/wecise/platform/lib/robertkrimen/otto.catchPanic:error.go:252
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_runOrEval:runtime.go:766
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_run:runtime.go:779
git.wecise.com/wecise/platform/lib/robertkrimen/otto.Otto.Run:otto.go:295
git.wecise.com/wecise/platform/web/routers/script.ExecJS:script.go:132
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375 
2021/01/26 23:04:35 [E] wjs.go 149: /bizApi/hdim/test/test_diagnosis_mobile.js:96:9:  map[message:[UnKnown]: query Timed out!
"[UnKnown]" backtrace:
git.wecise.com/wecise/platform/odb.(*CTernary).RelationRangeLoop:cypher_ternary.go:541
git.wecise.com/wecise/platform/odb.(*CTernary).ObjectEvaluateAndSpread:cypher_ternary.go:294
git.wecise.com/wecise/platform/odb.(*CTernary).EvaluateAndSpread:cypher_ternary.go:204
git.wecise.com/wecise/platform/odb.(*CPhase).Evaluate:cypher_query.go:417
git.wecise.com/wecise/platform/odb.(*Gutil).CypherMatchQuery:cypher_query.go:176
git.wecise.com/wecise/platform/odb.(*MqlSemantics).Cypher:cypher.go:1344
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:275
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/odb.(*Gutil).jsFuncMQL:js_odb.go:155
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:201
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeVariableExpression:cmpl_evaluate_expression.go:454
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:102
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeForStatement:cmpl_evaluate_statement.go:263
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:68
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeIfStatement:cmpl_evaluate_statement.go:292
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:71
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement.func1:cmpl_evaluate_statement.go:344
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).tryCatchEvaluate:runtime.go:142
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement:cmpl_evaluate_statement.go:343
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:98
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeAssignExpression:cmpl_evaluate_expression.go:124
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:31
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeProgram:cmpl_evaluate.go:17
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_runOrEval.func1:runtime.go:767
git.wecise.com/wecise/platform/lib/robertkrimen/otto.catchPanic:error.go:252
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_runOrEval:runtime.go:766
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_run:runtime.go:779
git.wecise.com/wecise/platform/lib/robertkrimen/otto.Otto.Run:otto.go:295
git.wecise.com/wecise/platform/web/routers/script.ExecJS:script.go:132
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375 name:GoError:/bizApi/hdim/test/test_diagnosis_mobile.js:82:23]
2021/01/26 23:04:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:05:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:05:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:05:36 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/getDdByBLDtl.js PUT
2021/01/26 23:05:36 [I] fs.go 56: Write data: //从前台接收值
var input = INPUT;
//var input = "broken:150051076804"; 
var phonenum="";
var whereCond="1=1";
//1.获取断档前后的通话记录
var getDdDtl = function(){
    var rtn = null;
    try{
        rtn=odb.mql(" select befday,lastday,phone from /matrix/action/broken where id='"+input+"'").data[0];   
    } catch(err){
        return [];
    }
    
    return rtn;
}

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var sltPhone=getDdDtl();
        
        log.info(sltPhone)
        var mql = "select tophone from /matrix/action/calllog where  ((starttimestr >='"+sltPhone.befday+" 00:00:00' and starttimestr <='"+sltPhone.lastday+" 23:59:59')) and (  forphone ='"+sltPhone.phone+"' ) ";
       phonenum=sltPhone.phone;
       whereCond="((starttimestr >='"+sltPhone.befday+" 00:00:00'  and starttimestr <='"+sltPhone.befday+" 23:59:59')    or (starttimestr >='"+sltPhone.lastday+" 00:00:00' and starttimestr <='"+sltPhone.lastday+" 23:59:59')) and (tophone ='"+sltPhone.phone+"' or forphone ='"+sltPhone.phone+"' ) ";
        log.info(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();


var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        matchStr.push("match('"+input+"')- [:brok*1] -> (:phonenumber) ");
        matchStr.push("match ('phonenumber:"+phonenum+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(_.findWhere(tmp.data[0].graph.Edges, {source:n.id}) || _.findWhere(tmp.data[0].graph.Edges, {target:n.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}
//将查询到的断档数据返回前台图谱展示
 OUTPUT = diagnosis();
2021/01/26 23:05:36 [I] fs.go 77: Write attr: {"remark":"获取断档前后的通话详情","ctime":1611381536559,"author":"admin"}
2021/01/26 23:05:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:05:37 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/getDdByBLDtl.js POST
2021/01/26 23:05:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:05:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:05:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:05:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:05:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:05:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:05:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:07 [I] wjs.go 145: /bizApi/hdim/test/getDuanD.js:16:2:  计算出时间差，开始时间：2019-11-01===结束时间====2020-08-11====时间差=====284
2021/01/26 23:06:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:21 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:26:9:  map[befday:2020-05-25 lastday:2020-06-14 phone:15005107680]
2021/01/26 23:06:21 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:30:9:  select tophone from /matrix/action/calllog where  ((starttimestr >='2020-05-25 00:00:00' and starttimestr <='2020-06-14 23:59:59')) and (  forphone ='15005107680' ) 
2021/01/26 23:06:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:06:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:33 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:26:9:  map[befday:2020-05-06 lastday:2020-05-14 phone:15005107680]
2021/01/26 23:07:33 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:30:9:  select tophone from /matrix/action/calllog where  ((starttimestr >='2020-05-06 00:00:00' and starttimestr <='2020-05-14 23:59:59')) and (  forphone ='15005107680' ) 
2021/01/26 23:07:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:07:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:08:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:08:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:08:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:08:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:08:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:08:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:29 [I] wjs.go 145: /bizApi/hdim/test/getDuanD.js:16:2:  计算出时间差，开始时间：2020-06-01===结束时间====2020-07-10====时间差=====39
2021/01/26 23:09:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:42 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:26:9:  map[befday:2020-05-31 lastday:2020-06-15 phone:18695220567]
2021/01/26 23:09:42 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:30:9:  select tophone from /matrix/action/calllog where  ((starttimestr >='2020-05-31 00:00:00' and starttimestr <='2020-06-15 23:59:59')) and (  forphone ='18695220567' ) 
2021/01/26 23:09:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:09:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:10:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:11:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:11:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:11:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:11:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:11:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:11:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:11:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:11:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:11:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:11:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:11:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:11:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:11:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:11:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:11:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:11:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:11:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:11:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:11:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:11:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:11:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:11:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:11:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:11:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:12:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:12:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:12:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:12:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:12:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:12:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:12:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:12:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:12:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:12:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:12:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:12:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:12:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:12:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:12:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:12:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:12:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:12:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:12:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:12:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:12:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:13:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:13:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:13:03 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:13:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:13:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:13:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:13:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:13:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:13:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:13:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:13:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:13:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:13:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:13:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:13:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:13:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:13:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:13:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:13:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:13:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:13:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:13:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:13:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:13:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:13:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:13:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:13:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:13:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:13:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:13:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:13:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:13:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:13:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:13:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:13:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:13:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:13:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:14:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:14:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:14:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:14:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:14:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:14:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:14:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:14:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:14:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:14:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:14:13 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 23:14:13 [I] fs.go 56: Write data: // perbasisinfo 人员
//var pId = decodeURIComponent(INPUT);
var pId = 'phonenumber:18695220567';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        
        if(RegExp(/perbasisinfo/).test(pId)){
            // 人 - 电话号码
            // 人 - 手机 - 手机号码
            var matchStr = "match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
            
            log.debug(11,matchStr)
            var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
            // 只返回手机号码
            rtn =   _.compact(_.map(tmp,function(v){
                        if(v.class === '/matrix/entity/phonenumber'){
                            return v.id;
                        }
                    }));
        } else if( RegExp(/phonenumber/).test(pId) ){
            rtn = [pId];
        }
        
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        
       matchStr.push("match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(_.findWhere(tmp.data[0].graph.Edges, {source:n.id}) || _.findWhere(tmp.data[0].graph.Edges, {target:n.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 23:14:13 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 23:14:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:14:14 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 23:14:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:14:15 [W] cypher_util.go 758:  not Exist, ignore & continue .
2021/01/26 23:14:15 [E] wjs.go 149: /bizApi/hdim/test/test_diagnosis_mobile.js:96:9:  map[message:[Exec]:
  [Exec]:  cql={SELECT class,id,map_varchar_set_11 as "callto",name,tags  FROM object  WHERE  class = ?   AND expr(object_lucene,?)  LIMIT 100 }, values={[/matrix/action/calllog {"filter":{"must":[{"type":"range","field":"varchar_410","lower":"2020-03-01 00:00:00.000","upper":"2020-03-30 23:59:59.000","include_lower":true,"include_upper":true},{"type":"contains","field":"map_varchar_set_11$_all","values":[]}],"type":"boolean"}}]}, error:{Field values required}
  "[Exec]" backtrace:
  git.wecise.com/wecise/platform/odb.(*Gutil).RawQuery:util.go:398
  git.wecise.com/wecise/platform/odb.(*MatrixSearch).ExecSearch:core.go:1809
  git.wecise.com/wecise/platform/odb.(*CPhase).cypherQueryIDDeprecate:cypher_query.go:541
  git.wecise.com/wecise/platform/odb.(*Gutil).CypherMatchQuery:cypher_query.go:161
  git.wecise.com/wecise/platform/odb.(*MqlSemantics).Cypher:cypher.go:1344
  git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:275
  git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
  git.wecise.com/wecise/platform/odb.(*Gutil).jsFuncMQL:js_odb.go:155
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:201
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeVariableExpression:cmpl_evaluate_expression.go:454
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:102
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeForStatement:cmpl_evaluate_statement.go:263
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:68
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeIfStatement:cmpl_evaluate_statement.go:292
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:71
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement.func1:cmpl_evaluate_statement.go:344
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).tryCatchEvaluate:runtime.go:142
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement:cmpl_evaluate_statement.go:343
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:98
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeAssignExpression:cmpl_evaluate_expression.go:124
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:31
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeProgram:cmpl_evaluate.go:17
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_runOrEval.func1:runtime.go:767
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.catchPanic:error.go:252
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_runOrEval:runtime.go:766
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_run:runtime.go:779
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.Otto.Run:otto.go:295
  git.wecise.com/wecise/platform/web/routers/script.ExecJS:script.go:132
  reflect.Value.call:value.go:479
  reflect.Value.Call:value.go:337
  github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
  github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
  gopkg.in/macaron%2ev1.(*Context).run:context.go:121
  git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
  git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
  reflect.Value.call:value.go:479
  reflect.Value.Call:value.go:337
  github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
  github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
  gopkg.in/macaron%2ev1.(*Context).run:context.go:121
  git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
  gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
  gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
  github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
  github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
  gopkg.in/macaron%2ev1.(*Context).run:context.go:121
  gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
  gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
  gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
  github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
  github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
  gopkg.in/macaron%2ev1.(*Context).run:context.go:121
  git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
  gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
  gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
  github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
  github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
  gopkg.in/macaron%2ev1.(*Context).run:context.go:121
  git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
  gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
  gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
  github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
  github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
  gopkg.in/macaron%2ev1.(*Context).run:context.go:121
  gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
  gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
  gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
  net/http.serverHandler.ServeHTTP:server.go:2844
  net/http.(*conn).serve:server.go:1926
  runtime.goexit:asm_amd64.s:1375, {SELECT class,id,map_varchar_set_11 as "callto",name,tags  FROM object  WHERE  class = ?   AND expr(object_lucene,?)  LIMIT 100 }, {[/matrix/action/calllog {"filter":{"must":[{"type":"range","field":"varchar_410","lower":"2020-03-01 00:00:00.000","upper":"2020-03-30 23:59:59.000","include_lower":true,"include_upper":true},{"type":"contains","field":"map_varchar_set_11$_all","values":[]}],"type":"boolean"}}]}
"[Exec]" backtrace:
git.wecise.com/wecise/platform/odb.(*MatrixSearch).ExecSearch:core.go:1810
git.wecise.com/wecise/platform/odb.(*CPhase).cypherQueryIDDeprecate:cypher_query.go:541
git.wecise.com/wecise/platform/odb.(*Gutil).CypherMatchQuery:cypher_query.go:161
git.wecise.com/wecise/platform/odb.(*MqlSemantics).Cypher:cypher.go:1344
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:275
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/odb.(*Gutil).jsFuncMQL:js_odb.go:155
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:201
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeVariableExpression:cmpl_evaluate_expression.go:454
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:102
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeForStatement:cmpl_evaluate_statement.go:263
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:68
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeIfStatement:cmpl_evaluate_statement.go:292
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:71
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement.func1:cmpl_evaluate_statement.go:344
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).tryCatchEvaluate:runtime.go:142
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement:cmpl_evaluate_statement.go:343
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:98
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeAssignExpression:cmpl_evaluate_expression.go:124
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:31
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeProgram:cmpl_evaluate.go:17
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_runOrEval.func1:runtime.go:767
git.wecise.com/wecise/platform/lib/robertkrimen/otto.catchPanic:error.go:252
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_runOrEval:runtime.go:766
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_run:runtime.go:779
git.wecise.com/wecise/platform/lib/robertkrimen/otto.Otto.Run:otto.go:295
git.wecise.com/wecise/platform/web/routers/script.ExecJS:script.go:132
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375 name:GoError:/bizApi/hdim/test/test_diagnosis_mobile.js:82:23]
2021/01/26 23:14:19 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:14:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:14:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:14:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:14:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:14:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:14:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:14:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:14:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:14:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:14:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:14:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:14:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:14:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:14:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:14:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:14:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:14:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:15:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:15:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:15:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:15:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:15:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:15:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:15:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:15:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:15:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:15:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:15:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:15:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:15:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:15:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:15:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:15:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:15:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:15:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:15:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:15:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:15:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:15:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:15:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:15:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:15:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:05 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 23:16:05 [I] fs.go 56: Write data: // perbasisinfo 人员
//var pId = decodeURIComponent(INPUT);
var pId = 'phonenumber:18695220567';
var param = {limit:100, stime:'2020-01-01 00:00:00', etime: '2020-09-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        
        if(RegExp(/perbasisinfo/).test(pId)){
            // 人 - 电话号码
            // 人 - 手机 - 手机号码
            var matchStr = "match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
            
            log.debug(11,matchStr)
            var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
            // 只返回手机号码
            rtn =   _.compact(_.map(tmp,function(v){
                        if(v.class === '/matrix/entity/phonenumber'){
                            return v.id;
                        }
                    }));
        } else if( RegExp(/phonenumber/).test(pId) ){
            rtn = [pId];
        }
        
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        
       matchStr.push("match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(_.findWhere(tmp.data[0].graph.Edges, {source:n.id}) || _.findWhere(tmp.data[0].graph.Edges, {target:n.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 23:16:06 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 23:16:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:06 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 23:16:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:39 [I] wjs.go 145: /bizApi/hdim/test/getDuanD.js:16:2:  计算出时间差，开始时间：2019-11-01===结束时间====2020-08-11====时间差=====284
2021/01/26 23:16:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:16:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:17:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:17:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:17:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:17:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:17:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:17:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:17:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:17:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:17:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:17:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:17:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:17:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:17:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:17:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:17:12 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:26:9:  map[befday:2019-12-09 lastday:2019-12-17 phone:15005107680]
2021/01/26 23:17:12 [I] wjs.go 145: /bizApi/hdim/test/getDdByBLDtl.js:30:9:  select tophone from /matrix/action/calllog where  ((starttimestr >='2019-12-09 00:00:00' and starttimestr <='2019-12-17 23:59:59')) and (  forphone ='15005107680' ) 
2021/01/26 23:17:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:17:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:17:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:17:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:17:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:17:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:17:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:17:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:17:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:17:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:17:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:17:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:17:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:17:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:17:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:17:24 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:17:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:17:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:17:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:17:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:17:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:17:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:17:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:17:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:17:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:17:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:17:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:17:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:17:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:17:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:17:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:17:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:17:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:17:57 [W] cypher_util.go 758: 20 not Exist, ignore & continue .
2021/01/26 23:17:57 [W] cypher_util.go 758: 20 not Exist, ignore & continue .
2021/01/26 23:18:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:51 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 23:18:51 [I] fs.go 56: Write data: // perbasisinfo 人员
var pId = decodeURIComponent(INPUT);
//var pId = 'perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        
        if(RegExp(/perbasisinfo/).test(pId)){
            // 人 - 电话号码
            // 人 - 手机 - 手机号码
            var matchStr = "match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
            
            log.debug(11,matchStr)
            var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
            // 只返回手机号码
            rtn =   _.compact(_.map(tmp,function(v){
                        if(v.class === '/matrix/entity/phonenumber'){
                            return v.id;
                        }
                    }));
        } else if( RegExp(/phonenumber/).test(pId) ){
            rtn = [pId];
        }
        
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        
       matchStr.push("match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(_.findWhere(tmp.data[0].graph.Edges, {source:n.id}) || _.findWhere(tmp.data[0].graph.Edges, {target:n.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 23:18:51 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 23:18:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:52 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 23:18:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:18:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:05 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 23:19:05 [I] fs.go 56: Write data: // perbasisinfo 人员
var pId = decodeURIComponent(INPUT);
//var pId = 'perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-01-01 00:00:00', etime: '2020-09-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        
        if(RegExp(/perbasisinfo/).test(pId)){
            // 人 - 电话号码
            // 人 - 手机 - 手机号码
            var matchStr = "match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
            
            log.debug(11,matchStr)
            var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
            // 只返回手机号码
            rtn =   _.compact(_.map(tmp,function(v){
                        if(v.class === '/matrix/entity/phonenumber'){
                            return v.id;
                        }
                    }));
        } else if( RegExp(/phonenumber/).test(pId) ){
            rtn = [pId];
        }
        
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        
       matchStr.push("match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(_.findWhere(tmp.data[0].graph.Edges, {source:n.id}) || _.findWhere(tmp.data[0].graph.Edges, {target:n.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 23:19:06 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 23:19:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:06 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 23:19:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:19:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:20:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:20:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:20:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:20:21 [I] fs.go 38: Write file (js) /script/bizApi/hdim/test/test_diagnosis_mobile.js PUT
2021/01/26 23:20:21 [I] fs.go 56: Write data: // perbasisinfo 人员
var pId = decodeURIComponent(INPUT);
//var pId = 'perbasisinfo:320911197112273412';
var param = {limit:100, stime:'2020-03-01 00:00:00', etime: '2020-03-30 23:59:59'};
var whereCond = " starttimestr>='"+param.stime+ "' and starttimestr<='" + param.etime +"' limit "+param.limit;

// INPUT：人 
// OUTPUT：电话号码
var getPhoneByPeople = (function(){
    var rtn = null;
    
    try{
        
        if(RegExp(/perbasisinfo/).test(pId)){
            // 人 - 电话号码
            // 人 - 手机 - 手机号码
            var matchStr = "match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ";
            
            log.debug(11,matchStr)
            var tmp = odb.mql(matchStr).data[0].graph.Nodes; 
            // 只返回手机号码
            rtn =   _.compact(_.map(tmp,function(v){
                        if(v.class === '/matrix/entity/phonenumber'){
                            return v.id;
                        }
                    }));
        } else if( RegExp(/phonenumber/).test(pId) ){
            rtn = [pId];
        }
        
    } catch(err){
        log.error(err)
        return [];
    }
    
    return rtn;
})();

// INPUT：电话号码 
// OUTPUT：电话记录
// 电话记录为活动，需要指定范围，如：时间范围
var getToPhoneByCalllog  = (function(){
    var rtn = [];
    try{
        var forphones = _.map(getPhoneByPeople,function(v){
            return v.replace(/phonenumber:/,"");
        });
        var mql = "select tophone from /matrix/action/calllog where forphone in ('"+forphones.join("','") + "') and " + whereCond;
        log.debug(mql)
        var tmp = odb.mql(mql).data;
        _.forEach(tmp,function(v){
            rtn.push("phonenumber:"+v.tophone);
        })
        rtn = _.uniq(rtn);
        
    }catch(err){
        rtn = [];
    }
    return rtn;
})();

var diagnosis = function(){
    var rtn =  {
                data:[{
                  "graph": {
                    "nodes": [],
                    "edges": [],
                    "paths": null,
                    "diff": null,
                    "pathtags": null
                  }
                }]};
    try{
        var matchStr = [];
        //
        
       matchStr.push("match ('" + pId + "') <- [:belong*1] - (:phonenumber) union ('" + pId + "') <- [:belong*1] - (:mobile) <- [:yongy*1] - (:phonenumber) ");
        matchStr.push("match ('"+getPhoneByPeople.join("','")+"') <- [:bycall*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match ('"+getToPhoneByCalllog.join("','")+"') <- [:callto*1] - (:/matrix/action/calllog where "+whereCond+"  )");
        matchStr.push("match (:perbasisinfo) <- [*] - ('"+getToPhoneByCalllog.join("','")+"') - [*1] -> (:mobile) ");
        _.forEach(matchStr,function(v){
            var tmp = odb.mql(v);
            log.debug(new Date().toLocaleString(),v)
            _.forEach(tmp.data[0].graph.Nodes, function(n){
                if(_.findWhere(tmp.data[0].graph.Edges, {source:n.id}) || _.findWhere(tmp.data[0].graph.Edges, {target:n.id})){
                    rtn.data[0].graph.nodes.push(n);   
                }
            })
            _.forEach(tmp.data[0].graph.Edges, function(e){
                rtn.data[0].graph.edges.push(e);
            })
            _.uniq(rtn.data[0].graph.nodes);
            _.uniq(rtn.data[0].graph.edges);
        });
    }catch(err){
        log.error(err);
        rtn = [];
    }
    
    return rtn;
}



 OUTPUT = diagnosis();
2021/01/26 23:20:21 [I] fs.go 77: Write attr: {"remark":"","ctime":1611637481113,"author":"admin"}
2021/01/26 23:20:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:20:22 [I] fs.go 590: Sync file to local /script/bizApi/hdim/test/test_diagnosis_mobile.js POST
2021/01/26 23:20:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:20:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:20:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:20:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:20:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:20:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:20:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:20:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:20:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:20:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:20:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:20:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:21:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:21:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:21:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:21:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:21:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:21:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:21:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:22:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:22:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:22:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:22:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:22:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:22:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:22:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:22:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:22:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:22:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:22:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:22:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:23:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:23:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:23:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:23:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:23:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:23:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:23:07 [I] auth.go 133: hdim.admin login success. Redirect to uri: /
2021/01/26 23:23:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:23:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:23:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:23:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:23:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:23:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:23:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:23:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:23:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:23:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:23:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:23:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:23:12 [W] query_util.go 869: can't find class for id[biz:数字国网] , search subdix of class!
2021/01/26 23:23:12 [W] cypher_util.go 758: biz:数字国网 not Exist, ignore & continue .
2021/01/26 23:23:12 [W] query_util.go 869: can't find class for id[biz:开发测试] , search subdix of class!
2021/01/26 23:23:12 [W] cypher_util.go 758: biz:开发测试 not Exist, ignore & continue .
2021/01/26 23:23:35 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:23:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:23:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:23:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:23:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:23:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:23:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:24:15 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:24:22 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:24:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:24:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:24:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:25:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:25:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:27:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:27:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:27:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:27:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:27:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:27:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:27:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:27:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:27:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:27:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:27:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:27:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:27:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:27:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:27:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:27:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:27:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:27:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:27:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:27:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:27:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:27:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:27:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:27:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:28:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:29:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:30:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:30:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:30:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:30:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:31:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:31:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:31:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:31:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:31:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:31:58 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:31:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:32:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:32:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:32:04 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:32:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:32:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:32:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:32:30 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:33:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:33:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:33:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:33:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:33:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:34:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:34:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:34:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:34:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:34:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:34:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:34:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:34:23 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:34:23 [W] cypher_util.go 758:  not Exist, ignore & continue .
2021/01/26 23:34:23 [E] wjs.go 149: /bizApi/hdim/test/test_diagnosis_mobile.js:96:9:  map[message:[Exec]:
  [Exec]:  cql={SELECT class,id,map_varchar_set_11 as "callto",name,tags  FROM object  WHERE  class = ?   AND expr(object_lucene,?)  LIMIT 100 }, values={[/matrix/action/calllog {"filter":{"must":[{"type":"range","field":"varchar_410","lower":"2020-03-01 00:00:00.000","upper":"2020-03-30 23:59:59.000","include_lower":true,"include_upper":true},{"type":"contains","field":"map_varchar_set_11$_all","values":[]}],"type":"boolean"}}]}, error:{Field values required}
  "[Exec]" backtrace:
  git.wecise.com/wecise/platform/odb.(*Gutil).RawQuery:util.go:398
  git.wecise.com/wecise/platform/odb.(*MatrixSearch).ExecSearch:core.go:1809
  git.wecise.com/wecise/platform/odb.(*CPhase).cypherQueryIDDeprecate:cypher_query.go:541
  git.wecise.com/wecise/platform/odb.(*Gutil).CypherMatchQuery:cypher_query.go:161
  git.wecise.com/wecise/platform/odb.(*MqlSemantics).Cypher:cypher.go:1344
  git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:275
  git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
  git.wecise.com/wecise/platform/odb.(*Gutil).jsFuncMQL:js_odb.go:155
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:201
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeVariableExpression:cmpl_evaluate_expression.go:454
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:102
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeForStatement:cmpl_evaluate_statement.go:263
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:68
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeIfStatement:cmpl_evaluate_statement.go:292
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:71
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement.func1:cmpl_evaluate_statement.go:344
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).tryCatchEvaluate:runtime.go:142
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement:cmpl_evaluate_statement.go:343
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:98
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeAssignExpression:cmpl_evaluate_expression.go:124
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:31
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeProgram:cmpl_evaluate.go:17
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_runOrEval.func1:runtime.go:767
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.catchPanic:error.go:252
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_runOrEval:runtime.go:766
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_run:runtime.go:779
  git.wecise.com/wecise/platform/lib/robertkrimen/otto.Otto.Run:otto.go:295
  git.wecise.com/wecise/platform/web/routers/script.ExecJS:script.go:132
  reflect.Value.call:value.go:479
  reflect.Value.Call:value.go:337
  github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
  github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
  gopkg.in/macaron%2ev1.(*Context).run:context.go:121
  git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
  git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
  reflect.Value.call:value.go:479
  reflect.Value.Call:value.go:337
  github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
  github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
  gopkg.in/macaron%2ev1.(*Context).run:context.go:121
  git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
  gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
  gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
  github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
  github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
  gopkg.in/macaron%2ev1.(*Context).run:context.go:121
  gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
  gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
  gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
  github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
  github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
  gopkg.in/macaron%2ev1.(*Context).run:context.go:121
  git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
  gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
  gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
  github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
  github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
  gopkg.in/macaron%2ev1.(*Context).run:context.go:121
  git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
  gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
  gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
  github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
  github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
  gopkg.in/macaron%2ev1.(*Context).run:context.go:121
  gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
  gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
  gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
  net/http.serverHandler.ServeHTTP:server.go:2844
  net/http.(*conn).serve:server.go:1926
  runtime.goexit:asm_amd64.s:1375, {SELECT class,id,map_varchar_set_11 as "callto",name,tags  FROM object  WHERE  class = ?   AND expr(object_lucene,?)  LIMIT 100 }, {[/matrix/action/calllog {"filter":{"must":[{"type":"range","field":"varchar_410","lower":"2020-03-01 00:00:00.000","upper":"2020-03-30 23:59:59.000","include_lower":true,"include_upper":true},{"type":"contains","field":"map_varchar_set_11$_all","values":[]}],"type":"boolean"}}]}
"[Exec]" backtrace:
git.wecise.com/wecise/platform/odb.(*MatrixSearch).ExecSearch:core.go:1810
git.wecise.com/wecise/platform/odb.(*CPhase).cypherQueryIDDeprecate:cypher_query.go:541
git.wecise.com/wecise/platform/odb.(*Gutil).CypherMatchQuery:cypher_query.go:161
git.wecise.com/wecise/platform/odb.(*MqlSemantics).Cypher:cypher.go:1344
git.wecise.com/wecise/platform/odb.(*Gutil).queryCore:query.go:275
git.wecise.com/wecise/platform/odb.(*Gutil).Query:query.go:95
git.wecise.com/wecise/platform/odb.(*Gutil).jsFuncMQL:js_odb.go:155
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:201
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeVariableExpression:cmpl_evaluate_expression.go:454
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:102
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeForStatement:cmpl_evaluate_statement.go:263
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:68
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeIfStatement:cmpl_evaluate_statement.go:292
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:71
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement.func1:cmpl_evaluate_statement.go:344
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).tryCatchEvaluate:runtime.go:142
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement:cmpl_evaluate_statement.go:343
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:98
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:30
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction:cmpl_evaluate.go:61
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_object).call:type_function.go:226
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression:cmpl_evaluate_expression.go:244
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:44
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeAssignExpression:cmpl_evaluate_expression.go:124
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression:cmpl_evaluate_expression.go:31
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement:cmpl_evaluate_statement.go:62
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList:cmpl_evaluate_statement.go:121
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeProgram:cmpl_evaluate.go:17
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_runOrEval.func1:runtime.go:767
git.wecise.com/wecise/platform/lib/robertkrimen/otto.catchPanic:error.go:252
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_runOrEval:runtime.go:766
git.wecise.com/wecise/platform/lib/robertkrimen/otto.(*_runtime).cmpl_run:runtime.go:779
git.wecise.com/wecise/platform/lib/robertkrimen/otto.Otto.Run:otto.go:295
git.wecise.com/wecise/platform/web/routers/script.ExecJS:script.go:132
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
git.wecise.com/wecise/platform/web/modules/middleware.AppAuth.func1:auth.go:194
reflect.Value.call:value.go:479
reflect.Value.Call:value.go:337
github.com/go-macaron/inject.(*injector).callInvoke:inject.go:177
github.com/go-macaron/inject.(*injector).Invoke:inject.go:137
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/session.Sessioner.func1:session.go:188
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.Recovery.func1:recovery.go:162
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.LoggerInvoker.Invoke:logger.go:41
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/lib/go-macaron/gzip.Gziper.func1:gzip.go:99
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
git.wecise.com/wecise/platform/web/cmd.newMacaron.func1:web.go:115
gopkg.in/macaron%2ev1.(*Context).Next:context.go:111
gopkg.in/macaron%2ev1.ContextInvoker.Invoke:context.go:80
github.com/go-macaron/inject.(*injector).fastInvoke:inject.go:157
github.com/go-macaron/inject.(*injector).Invoke:inject.go:135
gopkg.in/macaron%2ev1.(*Context).run:context.go:121
gopkg.in/macaron%2ev1.(*Router).Handle.func1:router.go:188
gopkg.in/macaron%2ev1.(*Router).ServeHTTP:router.go:295
gopkg.in/macaron%2ev1.(*Macaron).ServeHTTP:macaron.go:221
net/http.serverHandler.ServeHTTP:server.go:2844
net/http.(*conn).serve:server.go:1926
runtime.goexit:asm_amd64.s:1375 name:GoError:/bizApi/hdim/test/test_diagnosis_mobile.js:82:23]
2021/01/26 23:34:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:34:34 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:34:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:34:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:35:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:35:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:35:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:35:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:36:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:36:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:36:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:36:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:36:27 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:36:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:36:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:36:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:36:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:36:48 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:36:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:36:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:37:00 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:37:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:37:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:37:09 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:37:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:37:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:37:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:37:25 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:37:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:37:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:37:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:37:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:37:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:37:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:37:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:38:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:38:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:38:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:38:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:38:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:38:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:38:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:38:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:38:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:38:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:38:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:38:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:38:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:38:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:38:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:38:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:38:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:38:38 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:38:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:38:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:38:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:38:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:38:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:38:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:38:46 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:38:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:38:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:38:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:38:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:39:07 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:39:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:39:11 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:39:20 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:39:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:39:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:39:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:39:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:39:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:39:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:39:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:39:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:39:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:39:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:39:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:39:52 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:39:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:39:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:39:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:39:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:39:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:39:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:39:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:39:53 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:39:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:39:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:40:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:40:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:40:10 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:40:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:40:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:40:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:40:33 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:40:36 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:40:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:40:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:40:43 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:40:47 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:41:06 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:41:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:41:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:41:13 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:41:16 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:41:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:41:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:41:26 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:41:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:41:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:41:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:41:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:41:41 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:41:51 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:41:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:41:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:41:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:41:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:41:59 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:42:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:42:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:42:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:42:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:42:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:42:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:42:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:42:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:42:14 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:42:21 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:42:28 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:42:29 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:42:31 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:42:32 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:42:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:42:39 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:42:45 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:42:49 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:42:54 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:42:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:42:57 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:43:01 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:43:37 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:43:40 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:43:42 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:43:44 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:43:50 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:43:55 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:43:56 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:44:02 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:44:05 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:44:08 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:44:12 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:44:17 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:44:18 [W] context.go 464: verify license failed: The license expired
2021/01/26 23:44:20 [W] context.go 464: verify license failed: The license expired
