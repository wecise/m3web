<code>

	<style>
		/*----------  style  ----------*/
		.ci-card-button > a{
			right: 25px;
			width: 55px;
			height: 28px;
			padding: 4px!important;
			font-size: 12px;
			background-color: rgb(0, 172, 172)!important;
			color:#ffffff;
		}

		.bwizard-steps li a {
			color: rgb(51, 51, 51);
		}

		.bwizard-steps .active a{
			color: rgb(255, 255, 255);
		}

		.well {
			padding: 0px;
			border:none;
		}

		#flex-container {
			display: flex;
			display: -webkit-flex;
			flex-direction: row;
			position: relative;
			bottom: 0;
			width: 100%;
			top: 0px !important;
			left: 0px;

			/* these 3 lines are to prevents an unsightly scrolling bounce affect on Safari */
			height: 50vh;
			width: 100%;
			overflow: auto;
		}
		#flex-container>div {
			flex-grow: 1;
			-webkit-flex-grow: 1;
			position: relative;
		}
		#flex-container>div#acediff-gutter {
			flex: 0 0 60px;
			-webkit-flex: 0 0 60px;
			border-left: 1px solid #999999;
			border-right: 1px solid #999999;
			background-color: #efefef;
			overflow: hidden;
		}
		#acediff-gutter svg {
			background-color: #efefef;
		}

		#acediff-left-editor {
			position: absolute;
			top: 0;
			bottom: 0;
			width: 100%;
		}
		#acediff-right-editor {
			position: absolute;
			top: 0;
			bottom: 0;
			width: 100%;
		}
		.acediff-diff {
			background-color: #d8f2ff;
			border-top: 1px solid #a2d7f2;
			border-bottom: 1px solid #a2d7f2;
			position: absolute;
			z-index: 4;
		}
		.acediff-diff.targetOnly {
			height: 0px !important;
			border-top: 1px solid #a2d7f2;
			border-bottom: 0px;
			position: absolute;
		}
		.acediff-connector {
			fill: #d8f2ff;
			stroke: #a2d7f2;
		}

		.acediff-copy-left {
			float: right;
		}
		.acediff-copy-right,
		.acediff-copy-left {
			position: relative;
		}
		.acediff-copy-right div {
			color: #000000;
			text-shadow: 1px 1px #ffffff;
			position: absolute;
			margin: 2px 3px;
			cursor: pointer;
		}
		.acediff-copy-right div:hover {
			color: #004ea0;
		}
		.acediff-copy-left div {
			color: #000000;
			text-shadow: 1px 1px #ffffff;
			position: absolute;
			right: 0px;
			margin: 2px 3px;
			cursor: pointer;
		}
		.acediff-copy-left div:hover {
			color: #c98100;
		}
	</style>

	
	/*----------  最外层element会自动增加组件同名 class="vue-ci-card-component"  ----------*/
	<template>
		<div class="row"><div class="col-lg-12">
			<div class="panel panel-grey"><div class="panel-body" style="padding: 5px 10px 5px 0px;">
				<vue-common-form-component id="ci-card-form"
										   :form="model.form">
				</vue-common-form-component>
			</div></div>
		</div></div>
	</template>

	/*----------  id是vue组件的name，内容是vue组件的option参数  ----------*/
	<script id="vue-ci-card-component">
	{
        delimiters: ['${', '}'],
		props: {
			row: Object
		},
		data:function(){
			return {
                model: {
                    form: {
                        view: {
                            parent: "bootstrap-edit",
                            layout: {
                                template: `<div class='row'>
												<div class='col-md-2' id='column-0' style="padding: 5px 0px;">
													<!-- TAB NAVIGATION -->
													<ul class="nav nav-tabs" role="tablist" style="background:none!important;">
													  <li class="active" style="width:100%;">
															<a href="#tab1" role="tab" data-toggle="tab">
																<div class="widget widget-stats bg-blue" style="color:#999;background: rgb(227, 239, 244)!important;">
																	<div class="stats-icon stats-icon-lg"><i class="fa fa-desktop fa-fw"></i></div>
																	<div class="stats-title"></div>
																	<div class="stats-number">配置</div>
																	<div class="stats-progress progress" style="height: 1px;">
																		<div class="progress-bar" style="width: 100%;"></div>
																	</div>
																	<div class="stats-desc" style="color:#999;">
																		<div id="ci-associated-objects-buttons"></div>
																	</div>
																</div>
															</a>
													  </li>
													  <li style="width:100%;">
															<a href="#tab2" role="tab" data-toggle="tab">
																<div class="widget widget-stats bg-blue" style="color:#999;background: rgb(227, 239, 244)!important;">
																	<div class="stats-icon stats-icon-lg"><i class="fa fa-tags fa-fw"></i></div>
																	<div class="stats-title"></div>
																	<div class="stats-number">比对</div>
																	<div class="stats-progress progress" style="height: 1px;">
																		<div class="progress-bar" style="width: 100%;"></div>
																	</div>
																	<div class="stats-desc" style="color:#999999;"></div>
																</div>
															</a>
													  </li>
													  <li style="width:100%;">
															<a href="#tab3" role="tab" data-toggle="tab">
																<div class="widget widget-stats bg-blue" style="color:#999;background: rgb(227, 239, 244)!important;">
																	<div class="stats-icon stats-icon-lg"><i class="fa fa-globe fa-fw"></i></div>
																	<div class="stats-title"></div>
																	<div class="stats-number">关联</div>
																	<div class="stats-progress progress" style="height: 1px;">
																		<div class="progress-bar" style="width: 100%;"></div>
																	</div>
																	<div class="stats-desc" style="color:#999;">

																	</div>
																</div>
															</a>
													   </li>

													  <li style="width:100%;">
															<a href="#tab4" role="tab" data-toggle="tab">
																<div class="widget widget-stats bg-blue" style="color:#999;background: rgb(227, 239, 244)!important;">
																	<div class="stats-icon stats-icon-lg"><i class="fa fa-globe fa-fw"></i></div>
																	<div class="stats-title"></div>
																	<div class="stats-number">配置发现</div>
																	<div class="stats-progress progress" style="height: 1px;">
																		<div class="progress-bar" style="width: 100%;"></div>
																	</div>
																	<div class="stats-desc" style="color:#999;">

																	</div>
																</div>
															</a>
													   </li>
													</ul>
												</div>
												<div class="col-md-10" style="padding:0px;">
													<div class="tab-content" style="padding:0px;">
													  	<div class="active tab-pane fade in" id="tab1">
															<!-- TAB NAVIGATION -->
															<ul class="nav nav-tabs" role="tablist" style="background-image: none!important;background-color: rgba(0, 0, 0, 0)!important;">
															  <li class="active"><a href="#ci-info" role="tab" data-toggle="tab">资产信息</a></li>
															  <li><a href="#ci-manager" role="tab" data-toggle="tab">管理信息</a></li>
															  <li><a href="#ci-config" role="tab" data-toggle="tab">配置信息</a></li>
															  <li class="ci-card-button pull-right">
																	<a class="btn btn-md btn-success" href="javascript:eventHub.$emit('ci-card-update-event',null);">保存</a>
															  </li>
															</ul>
															<!-- TAB CONTENT -->
															<div class="tab-content" style="padding: 0px 10px;">
															  	<div class="active tab-pane fade in" id="ci-info">
																	<div class="panel panel-grey">
																		<div class="panel-body" style="border: 1px solid rgb(227, 239, 244);border-radius: 5px;padding: 10px 0px;height: 70vh;overflow: auto;box-shadow:5px 5px 5px #e3eff4;background: rgb(228, 239, 245);">
																			<div class='col-md-6' id='column-1-1' style="line-height:5px;"></div>
																			<div class='col-md-6' id='column-1-2' style="line-height:5px;"></div>
																		</div>
																	</div>
															  	</div>
															  	<div class="tab-pane fade" id="ci-manager">
																	<div class="panel panel-grey">
																		<div class="panel-body" style="border: 1px solid rgb(227, 239, 244);border-radius: 5px;padding: 10px 0px;height: 70vh;overflow: auto;box-shadow:5px 5px 5px #e3eff4;background: rgb(228, 239, 245);">

																			<div class='col-md-12' id='column-2' style="line-height:5px;"></div>

																		</div>
																	</div>
															    </div>
															  	<div class="tab-pane fade" id="ci-config">
																	<div class="panel panel-grey">
																		<div class="panel-body" style="border: 1px solid rgb(227, 239, 244);border-radius: 5px;padding: 10px 0px;height: 70vh;overflow: auto;box-shadow:5px 5px 5px #e3eff4;background: rgb(228, 239, 245);">
																			<div class='col-md-12' id='column-3' style="line-height:5px;"></div>
																		</div>
																	</div>
															  	</div>
															</div>
													  	</div>
														<div class="tab-pane fade" id="tab2">
															<div class="panel panel-grey">
																<div class="panel-body">
																	<!--<span style="display: -webkit-box;">
																		<input class="ci_range_from" type="text" placeholder="选择时间.."></p>
																		<i class="fa fa-cogs" style="padding: 0px 10px;"></i>
																		<input class="ci_range_to" type="text" placeholder="选择时间.."></p>
																		<a class="btn btn-xs btn-success" @click="setByRange()" style="height: 22px;margin-left: 10px;">应用</a>
																	</span>-->
																	<div id="ci-form-compare-timeline"></div>
																</div>
															</div>
														</div>
													  	<div class="tab-pane fade" id="tab3">
															<div class="panel panel-grey">
																<div class="panel-body">
																	<div id="panel-link"></div>
																</div>
															</div>
													  	</div>

													  	<div class="tab-pane fade" id="tab4">
															<div class="panel panel-grey">
																<div class="panel-body">
																	<div id="panel-prob"></div>
																</div>
															</div>
													  	</div>
													</div>
												</div>
										   </div>`,
                                bindings: {
                                    assetid: "column-1-1",
                                    host: "column-1-1",
                                    ip: "column-1-1",
                                    model: "column-1-1",
                                    type: "column-1-1",
                                    company: "column-1-1",
									ctel: "column-1-2",
                                    sn: "column-1-2",
                                    dc: "column-1-2",
                                    room: "column-1-2",
                                    rack: "column-1-2",
                                    unit: "column-1-2",
                                    location: "column-2",
                                    region: "column-2",
                                    biz: "column-2",
                                    department: "column-2",
                                    contact: "column-2",
                                    tel: "column-2",
                                    period: "column-2",
                                    element: "column-3",
                                    config: "column-3",
                                    files: "column-3"
                                }
                            }
                        },
                        data: {},
                        schema: {
                            title: "",
                            type: "object",
                            properties: []
                        },
                        options: {
                            form: {
                                buttons: {
                                    /*save: {
                                        title: "Save",
                                        click: function () {
                                            let val = this.getValue();

                                            if (this.isValid(true)) {
                                                /!*alert("Invalid value: " + JSON.stringify(val, null, "  "));*!/
                                                eventHub.$emit('ci-card-update-event',val);
                                            } else {
                                                /!*alert("Invalid value: " + JSON.stringify(val, null, "  "));*!/
                                            }
                                        }
                                    }*/
                                }
                            },
                            fields: {}
                        }

                    }
                },
                search: {
                    fortime: " for vtime",
                    default: {value: " | nearest 1year"}
                }
            }
		},
        created: function(){
            let self = this;

            eventHub.$on('ci-card-update-event',self.save);

        },
        watch: {
            search:{
                handler: function(val,oldVal){
                    let self = this;

                    self.init();
                },
                deep:true
            }
        },
        mounted: function(){
            let self = this;

            self.$nextTick(function(){

                self.init();

                _.delay(function() {
                    self.initRelationButton();
                    self.initCompare();
                    self.initLink();
                },1000);
            })

        },
        methods: {
            init: function(){
                let self = this;
                let _list = fetchClass(self.row.class);
                let _properties = {};
                let _fields = {};
                let _data = {};

                _.forEach(GLOBAL_CONFIG.global.ci_card,function (v) {
                    let _name = v.name;
                    let _stype = v.stype=='varchar'?'string':v.stype;
                    let _otype = v.otype;
                    let _required = _.indexOf(GLOBAL_CONFIG.global.unshow_columns,v.name)>-1?false:false;
                    let _hidden = _.indexOf(GLOBAL_CONFIG.global.unshow_columns,v.name)>-1?true:false;

                    _.merge(_properties, {[_name]: {title: v.title, type: _stype,required: _required, hidden: _hidden}});
                    _.merge(_fields, {[_name]: {type: _otype}});
                });

                _.forEach(self.row,function (v,k) {
                    let _name = k;

                    if (_name == 'period'){
                        _.merge(_data, {[_name]: moment(v).format('YYYY-MM-DD')});
					} else {
                        _.merge(_data, {[_name]: v});
					}


                })

                self.model.form.data = _data;
                self.model.form.schema.title = self.row.name;
                self.model.form.schema.properties = _properties;
                self.model.form.options.fields = _fields;
                self.model.list = _.map(_list.message.fields,function(v){
                    return v;
                });

            },
			initRelationButton: function(){
              	let self = this;

                let _Vue = new Vue({
                        delimiters: ['#{', '}#'],
                        el: '#ci-associated-objects-buttons',
						template: ` <div>
										<a href="javascript:void(0);" @click="forward('event')">事件 <i class="badge badge-danger">3</i></a>
										<a href="javascript:void(0);" @click="forward('performance')">性能 <i class="fa fa-line-chart" style="color:#09ef9f;"></i></a>
										<a href="javascript:void(0);" @click="forward('log')">日志 <i class="badge badge-warning">3</i></a>
									</div>`,
						methods: {
                            forward: function(event){
                                let me = this;

                                window.open(
                                    "/janesware/" + event,
                                    "_blank"
                                );
                            },
						}
                    });


			},
            initCompare: function(){
                let self = this;

                let _row = self.row;

                let _compareVue = new Vue({
                    delimiters: ['#{', '}#'],
					el: '#ci-form-compare-timeline',
					template: `<form>
									<div id="wizard">
										<ol>
											<li>
												选择配置
												<small>选择同一配置项的变更历史节点。</small>
											</li>
											<li>
												选择属性
												<small>选择需要比对的配置属性。</small>
											</li>
											<li>
												<span @click="compareStart">开始比对</span>
												<small>比对结果输出。</small>
											</li>
										</ol>
										<div>
												<fieldset>
													<!-- begin row -->
													<div class="row">
														<!-- begin col-12 -->
														<div class="col-md-12">
															<vue-base-timeline-component id="entity-timeline-compare" :model="model.list"></vue-base-timeline-component>
														</div>
														<!-- end col-12 -->
													</div>
													<!-- end row -->
												</fieldset>
										</div>
										<div>
												<fieldset>
													<!-- begin row -->
													<div class="row">
														<!-- begin col-3 -->
														<div class="col-md-3" v-for="v,k in model.row" style="padding:2px 15px;">
															<div class="form-group btn btn-xs btn-default" style="min-width: 120px;max-width: 120px; background: rgb(240, 243, 244); text-align: left;">
																<label class="checkbox-inline">#{_.startCase(k)}#</label>
																<input type="checkbox" :id="k" :value="k" checked>
															</div>
														</div>
														<!-- end col-3 -->
													</div>
													<!-- end row -->
												</fieldset>
										</div>
										<div>
												<fieldset>
													<!-- begin row -->
													<div class="row">

														<!-- begin col-6 -->
														<div class="col-md-6">
															<span class="badge badge-default" v-for="leftItem in model.resultDiff.left.tags">#{leftItem}#</span>
														</div>
														<!-- end col-6 -->

														<!-- begin col-6 -->
														<div class="col-md-6">
															<span class="badge badge-default" v-for="rightItem in model.resultDiff.right.tags">#{rightItem}#</span>
														</div>
														<!-- end col-6 -->

														<BR/><BR/>

														<!-- begin col-12 -->
														<div class="col-md-12">
															<div id="flex-container">
																<div>
																	<div id="acediff-left-editor"></div>
																</div>
																<div id="acediff-gutter"></div>
																<div>
																	<div id="acediff-right-editor"></div>
																</div>
															</div>
														</div>
														<!-- end col-12 -->
													</div>
													<!-- end row -->
												</fieldset>
										</div>

									</div>

								</form>`,
					data: {
					    model: {
                            list: [],
                            row: _row,
                            timelineSelected: [],
                            resultDiff:{
                                aceDiffer: null,
                                setting: {
                                    mode: "ace/mode/json",
                                    theme: "ace/theme/tomorrow",
                                    left: {
                                        content:null,
                                    },
                                    right: {
                                        content:null,
                                    }
                                },
								left: {
                                    tags: [],
                                },
								right: {
                                    tags: [],
								}
                            }
                        }
					},
					created: function(){
                      	let me = this;

                        eventHub.$on("timeline-selected-event", me.initSelected);
					},
					mounted: function(){
					    let me = this;

                        me.$nextTick(function(){

                            me.init();
                            FormWizard.init();
                        })
					},
					methods:{
					    init: function() {
                            let me = this;
                            let _list = fetchData("id=" + _row.id);

                            _.forEach(_list.message, function (v, k) {
                                me.model.list.push({
									id: v.id + "&" + v.vtime,
                                    start: moment(v.vtime).format("L"),
                                    content: moment(v.vtime).format("LLL")
                                });
                            })


                        },
						initSelected: function(event){
					      	let me = this;

					      	me.model.resultDiff.left.tags = [];
                			me.model.resultDiff.right.tags = [];

                            me.model.timelineSelected = null;

                            me.model.timelineSelected = event.items;
						},
                        compareStart: function(){
							let me = this;

							if (!_.isEmpty(me.model.resultDiff.aceDiffer)){
                                me.model.resultDiff.aceDiffer.destroy();
                            }

                            me.model.resultDiff.left.tags = [];
                            me.model.resultDiff.right.tags = [];

                            _.forEach(me.model.timelineSelected,function(v,k){
                                let _id = v.split("&")[0];
                                let _vtime = v.split("&")[1];

                                let _tmp = fetchData("id="+_id + " | vtime="+_vtime);

                                if (k == 0) {
                                    console.log(0, k)
                                    me.model.resultDiff.left.tags.push(_id);
                                    me.model.resultDiff.left.tags.push(_vtime);
                                    me.model.resultDiff.setting.left.content = JSON.stringify(_tmp.message[0],null, 2);
                                } else {
                                    console.log(1, k)
                                    me.model.resultDiff.right.tags.push(_id);
                                    me.model.resultDiff.right.tags.push(_vtime);
                                    me.model.resultDiff.setting.right.content = JSON.stringify(_tmp.message[0],null, 2);
                                }
							});

                            _.delay(function(){
                                me.model.resultDiff.aceDiffer = new AceDiff(me.model.resultDiff.setting);
							},800)

						}
					}

				})

            },
			initLink: function(){
                let self = this;
                let _row = self.row;

                let _relationVue = new Vue({
                    delimiters: ['#{', '}'],
					el: '#panel-link',
					template: ` <!--<div>
								   <button type="button" :class="'btn btn-xs '+_.sample(['btn-default','btn-warning','btn-success','btn-info','btn-danger'])" v-for="(v,k) in model.relations" style="margin: 0px 5px 0px 0px;padding: 2px 10px;">
								   		#{_.startCase(k)}
								   </button>
								</div>
								<vue-bootstrap-table id="ci-link-table"
													 :columns="model.columns"
													 :options="model.options"
													 :dataset="model.data"
													 contextMenu="">
								</vue-bootstrap-table>-->
								<vue-echart-graph-component id="ci-link-graph" :row="model.row"></vue-echart-graph-component>`,
					data: {
						model: {
						    columns: [],
							options: {},
							dataset: [],
							contextMenu: null,
							relations: {
                                connect: [],
						        contain: [],
                                depend: [],
                                refer: [],
                                runon: [],
							},
							row: _row
						}
					}

				})

			},
			save: function(){
                let self = this;
                let _form = $("#ci-card-form").alpaca("get").getValue();

                _.merge(_form, {id: self.row.id, class: self.row.class});

                let tmp = callJob();
                $("#alpaca26").val(tmp);

                putDataByMql(_form);

                eventHub.$emit("ci-save-event",null);
			}
        }
	
	}
	</script>

</code>
